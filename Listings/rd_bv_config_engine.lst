


ARM Macro Assembler    Page 1 


    1 00000000         ;; RD BV - Evalbot (Cortex M3 de Texas Instrument);
    2 00000000         ; Control 2 ENGINES of Evalbot by PWM all in ASM (config
                       ure the pwms + GPIO)
    3 00000000         ;Code are based of code of Mr Kachouri Rostrom
    4 00000000         
    5 00000000         ;Connection :
    6 00000000         ;pin 10/PD0/PWM0 => input PWM bridge in H DRV8801RT
    7 00000000         ;pin 11/PD1/PWM1 => input Phase_R  bridge in H DRV8801RT
                       
    8 00000000         ;pin 12/PD2   => input SlowDecay common of 2 bridge in H
                       
    9 00000000         ;pin 98/PD5   => input Enable 12v du conv DC/DC
   10 00000000         ;pin 86/PH0/PWM2 => input PWM of 2nd bridge in H
   11 00000000         ;pin 85/PH1/PWM3 => input Phase of 2nd bridge in H
   12 00000000         
   13 00000000         ;; Hexa corresponding values to pin numbers
   14 00000000 00000001 
                       GPIO_0  EQU              0x1
   15 00000000 00000002 
                       GPIO_1  EQU              0x2
   16 00000000 00000004 
                       GPIO_2  EQU              0x4
   17 00000000 00000008 
                       GPIO_3  EQU              0x08
   18 00000000 00000020 
                       GPIO_5  EQU              0x20
   19 00000000 00000040 
                       GPIO_6  EQU              0x40
   20 00000000 00000080 
                       GPIO_7  EQU              0x80
   21 00000000         
   22 00000000         ;; pour enable clock    0x400FE000
   23 00000000 400FE100 
                       SYSCTL_RCGC0
                               EQU              0x400FE100  ;SYSCTL_RCGC0: offs
                                                            et 0x100 (p271 data
                                                            sheet de lm3s9b92.p
                                                            df)
   24 00000000 400FE108 
                       SYSCTL_RCGC2
                               EQU              0x400FE108  ;SYSCTL_RCGC2: offs
                                                            et 0x108 (p291 data
                                                            sheet de lm3s9b92.p
                                                            df)
   25 00000000         
   26 00000000         ;; General-Purpose Input/Outputs (GPIO) configuration
   27 00000000 40007000 
                       PORTD_BASE
                               EQU              0x40007000
   28 00000000 40007000 
                       GPIODATA_D
                               EQU              PORTD_BASE
   29 00000000 40007400 
                       GPIODIR_D
                               EQU              PORTD_BASE+0x00000400
   30 00000000 40007500 
                       GPIODR2R_D
                               EQU              PORTD_BASE+0x00000500
   31 00000000 4000751C 



ARM Macro Assembler    Page 2 


                       GPIODEN_D
                               EQU              PORTD_BASE+0x0000051C
   32 00000000 4000752C 
                       GPIOPCTL_D
                               EQU              PORTD_BASE+0x0000052C ; GPIO Po
                                                            rt Control (GPIOPCT
                                                            L), offset 0x52C; p
                                                            444
   33 00000000 40007420 
                       GPIOAFSEL_D
                               EQU              PORTD_BASE+0x00000420 ; GPIO Al
                                                            ternate Function Se
                                                            lect (GPIOAFSEL), o
                                                            ffset 0x420; p426
   34 00000000         
   35 00000000 40027000 
                       PORTH_BASE
                               EQU              0x40027000
   36 00000000 40027000 
                       GPIODATA_H
                               EQU              PORTH_BASE
   37 00000000 40027400 
                       GPIODIR_H
                               EQU              PORTH_BASE+0x00000400
   38 00000000 40027500 
                       GPIODR2R_H
                               EQU              PORTH_BASE+0x00000500
   39 00000000 4002751C 
                       GPIODEN_H
                               EQU              PORTH_BASE+0x0000051C
   40 00000000 4002752C 
                       GPIOPCTL_H
                               EQU              PORTH_BASE+0x0000052C ; GPIO Po
                                                            rt Control (GPIOPCT
                                                            L), offset 0x52C; p
                                                            444
   41 00000000 40027420 
                       GPIOAFSEL_H
                               EQU              PORTH_BASE+0x00000420 ; GPIO Al
                                                            ternate Function Se
                                                            lect (GPIOAFSEL), o
                                                            ffset 0x420; p426
   42 00000000         
   43 00000000         ;; Pulse Width Modulator (PWM) configuration
   44 00000000 40028000 
                       PWM_BASE
                               EQU              0x040028000 ;BASE des Block PWM
                                                             p.1138
   45 00000000 40028008 
                       PWMENABLE
                               EQU              PWM_BASE+0x008 ; p1145
   46 00000000         
   47 00000000         ;Block PWM0 pour outputs PWM0 et PWM1 (ENGINE 1)
   48 00000000 40028040 
                       PWM0CTL EQU              PWM_BASE+0x040 ;p1167
   49 00000000 40028050 
                       PWM0LOAD
                               EQU              PWM_BASE+0x050
   50 00000000 40028058 



ARM Macro Assembler    Page 3 


                       PWM0CMPA
                               EQU              PWM_BASE+0x058
   51 00000000 4002805C 
                       PWM0CMPB
                               EQU              PWM_BASE+0x05C
   52 00000000 40028060 
                       PWM0GENA
                               EQU              PWM_BASE+0x060
   53 00000000 40028064 
                       PWM0GENB
                               EQU              PWM_BASE+0x064
   54 00000000         
   55 00000000         ;Block PWM1 pour outputs PWM1 et PWM2 (ENGINE 2)
   56 00000000 40028080 
                       PWM1CTL EQU              PWM_BASE+0x080
   57 00000000 40028090 
                       PWM1LOAD
                               EQU              PWM_BASE+0x090
   58 00000000 40028098 
                       PWM1CMPA
                               EQU              PWM_BASE+0x098
   59 00000000 4002809C 
                       PWM1CMPB
                               EQU              PWM_BASE+0x09C
   60 00000000 400280A0 
                       PWM1GENA
                               EQU              PWM_BASE+0x0A0
   61 00000000 400280A4 
                       PWM1GENB
                               EQU              PWM_BASE+0x0A4
   62 00000000         
   63 00000000         ;0x1A2
   64 00000000 00000100 
                       VITESSE EQU              0x100
   65 00000000         ; Smaller Values => Faster speed exemple 0x192
   66 00000000         ; Bigger Value => Lower speed exemple 0x1B2
   67 00000000         
   68 00000000         
   69 00000000                 AREA             _CONFIG_ENGINE_, CODE, READONLY
   70 00000000                 ENTRY
   71 00000000         
   72 00000000         ;; The EXPORT command specifies that a symbol can be acc
                       essed by other shared objects or executables.
   73 00000000                 EXPORT           __ENGINE_INIT
   74 00000000                 EXPORT           __ENGINE_RIGHT_ON
   75 00000000                 EXPORT           __ENGINE_RIGHT_OFF
   76 00000000                 EXPORT           __ENGINE_RIGHT_FRONT
   77 00000000                 EXPORT           __ENGINE_RIGHT_BACK
   78 00000000                 EXPORT           __ENGINE_RIGHT_INVERSE
   79 00000000                 EXPORT           __ENGINE_LEFT_ON
   80 00000000                 EXPORT           __ENGINE_LEFT_OFF
   81 00000000                 EXPORT           __ENGINE_LEFT_FRONT
   82 00000000                 EXPORT           __ENGINE_LEFT_BACK
   83 00000000                 EXPORT           __ENGINE_LEFT_INVERSE
   84 00000000                 EXPORT           __ENGINE_LEFT_RIGHT_ON
   85 00000000                 EXPORT           __ENGINE_LEFT_RIGHT_OFF
   86 00000000                 EXPORT           __ENGINE_LEFT_RIGHT_FRONT
   87 00000000                 EXPORT           __ENGINE_LEFT_RIGHT_BACK
   88 00000000                 EXPORT           __ENGINE_LEFT_BACK_RIGHT_FRONT



ARM Macro Assembler    Page 4 


   89 00000000                 EXPORT           __ENGINE_LEFT_FRONT_RIGHT_BACK
   90 00000000                 EXPORT           __ENGINE_LEFT_RIGHT_INVERSE
   91 00000000         
   92 00000000         
   93 00000000         __ENGINE_INIT
   94 00000000         ;CONFIGURE CLOCK RCGC0
   95 00000000 4E71            LDR              R6, = SYSCTL_RCGC0
   96 00000002 6830            LDR              R0, [R6]
   97 00000004 F440 1080       ORR              R0, R0, #0x00100000 ;;bit 20 = 
                                                            PWM recoit clock: O
                                                            N (p271)
   98 00000008 6030            STR              R0, [R6]
   99 0000000A         
  100 0000000A         ;ROM_SysCtlPWMClockSet(SYSCTL_PWMDIV_1);PWM clock is pro
                       cessor clock /1
  101 0000000A         ;Do nothing by default = OK!!
  102 0000000A         ;*(int *) (0x400FE060)= *(int *)(0x4
  103 0000000A         ;RCGC2 :  Enable port D GPIO(p291 ) because ENGINE RIGHT
                        in port D
  104 0000000A 4E70            LDR              R6, = SYSCTL_RCGC2
  105 0000000C 6830            LDR              R0, [R6]
  106 0000000E F040 0008       ORR              R0, R0, #0x08 ;; Enable port D 
                                                            GPIO
  107 00000012 6030            STR              R0, [R6]
  108 00000014         
  109 00000014         ;MOT2 : RCGC2 :  Enable port H GPIO  (2eme ENGINEs)
  110 00000014 4E6D            LDR              R6, = SYSCTL_RCGC2
  111 00000016 6830            LDR              R0, [R6]
  112 00000018 F040 0080       ORR              R0, R0, #0x80 ;; Enable port H 
                                                            GPIO
  113 0000001C 6030            STR              R0, [R6]
  114 0000001E         
  115 0000001E BF00            NOP
  116 00000020 BF00            NOP
  117 00000022 BF00            NOP
  118 00000024         
  119 00000024         ;;Pin muxing for PWM, port D, reg. GPIOPCTL(p444), 4bits
                        of PCM0=0001<=>PWM (see p1261)
  120 00000024         ;;Need to set 1 to have PD0=PWM0 and PD1=PWM1
  121 00000024 4E6A            LDR              R6, = GPIOPCTL_D
  122 00000026         ;LDR R0, [R6]   ;; *(int *)(0x40007000+0x0000052C)=1;
  123 00000026         ;ORR R0, R0, #0x01 ;; Port D, pin 1 = PWM
  124 00000026 F04F 0001       MOV              R0, #0x01
  125 0000002A 6030            STR              R0, [R6]
  126 0000002C         
  127 0000002C         ;;MOT2 : Pin muxing for PWM, port H, reg. GPIOPCTL(p444)
                       , 4bits in PCM0=0001<=>PWM (see p1261)
  128 0000002C         ;;we need to set mux = 2 to have PH0=PWM2 and PH1=PWM3
  129 0000002C 4E69            LDR              R6, = GPIOPCTL_H
  130 0000002E F04F 0002       MOV              R0, #0x02
  131 00000032 6030            STR              R0, [R6]
  132 00000034         
  133 00000034         ;;Alternate Function Select (p 426), PD0 use alernate fo
                       nction (PWM upward)
  134 00000034         ;;so PD0 = 1
  135 00000034 4E68            LDR              R6, =GPIOAFSEL_D
  136 00000036 6830            LDR              R0, [R6]    ;*(int *)(0x4000700
                                                            0+0x00000420)= *(in
                                                            t *)(0x40007000+0x0



ARM Macro Assembler    Page 5 


                                                            0000420) | 0x000000
                                                            01;
  137 00000038 F040 0001       ORR              R0, R0, #0x01 ;
  138 0000003C 6030            STR              R0, [R6]
  139 0000003E         
  140 0000003E         ;;MOT2 : Alternate Function Select (p 426), PH0 use PWM 
                       so Alternate funct
  141 0000003E         ;;so PH0 = 1
  142 0000003E 4E67            LDR              R6, =GPIOAFSEL_H
  143 00000040 6830            LDR              R0, [R6]    ;*(int *)(0x4000700
                                                            0+0x00000420)= *(in
                                                            t *)(0x40007000+0x0
                                                            0000420) | 0x000000
                                                            01;
  144 00000042 F040 0001       ORR              R0, R0, #0x01 ;
  145 00000046 6030            STR              R0, [R6]
  146 00000048         
  147 00000048         ;;-----------PWM0 pour ENGINE 1 connect at PD0
  148 00000048         ;;PWM0 produce PWM0 and PWM1 output
  149 00000048         ;;Config Modes PWM0 + mode GenA + mode GenB
  150 00000048 4E65            LDR              R6, = PWM0CTL
  151 0000004A F04F 0002       MOV              R0, #2      ;Mode up-down-up-do
                                                            wn, not synchro
  152 0000004E 6030            STR              R0, [R6]
  153 00000050         
  154 00000050 4E64            LDR              R6, =PWM0GENA ;Descending count
                                                            , when CMPA = CPT =
                                                            > output pwmA=0
  155 00000052         ;Croissant count, when CMPA = CPT => output pwmA=1
  156 00000052 F04F 00B0       MOV              R0, #0x0B0  ;0B0=10110000 => AC
                                                            TCMPBD=00 (B down:n
                                                            othing), ACTCMPBU=0
                                                            0(B up nothing)
  157 00000056 6030            STR              R0, [R6]    ;ACTCMPAD=10 (A dow
                                                            n:pwmA low), ACTCMP
                                                            AU=11 (A up:pwmA hi
                                                            gh) , ACTLOAD=00,AC
                                                            TZERO=00
  158 00000058         
  159 00000058 4E63            LDR              R6, =PWM0GENB ;in Croissant cou
                                                            nt, when CMPB = CPT
                                                             => output pwmA=1
  160 0000005A F44F 6030       MOV              R0, #0x0B00 ;in decending count
                                                            , when CMPB = CPT =
                                                            > output pwmB=0
  161 0000005E 6030            STR              R0, [R6]
  162 00000060         ;Config CPT, CMP A et CMP B
  163 00000060         ;;#define PWM_PERIOD (ROM_SysCtlClockGet() / 16000),
  164 00000060         ;;mesure : SysCtlClockGet=0F42400h, /16=0x3E8,
  165 00000060         ;;divide by 2 because ENGINE 6v on alim 12v
  166 00000060 4E62            LDR              R6, =PWM0LOAD ;PWM0LOAD=periode
                                                            /2 =0x1F4
  167 00000062 F44F 70FA       MOV              R0, #0x1F4
  168 00000066 6030            STR              R0,[R6]
  169 00000068         
  170 00000068 4E61            LDR              R6, =PWM0CMPA ;Value cyclique r
                                                            eport : for 10% => 
                                                            1C2h if clock = 0F4
                                                            2400



ARM Macro Assembler    Page 6 


  171 0000006A F44F 7080       MOV              R0, #VITESSE
  172 0000006E 6030            STR              R0, [R6]
  173 00000070         
  174 00000070 4E60            LDR              R6, =PWM0CMPB ;PWM0CMPB receive
                                                             same value. (cycli
                                                            que report dependin
                                                            g of CMPA)
  175 00000072 F44F 70FA       MOV              R0, #0x1F4
  176 00000076 6030            STR              R0, [R6]
  177 00000078         
  178 00000078         ;Control PWM : active PWM Generator 0 (p1167): Enable+up
                       /down + Enable counter debug mod
  179 00000078 4E59            LDR              R6, =PWM0CTL
  180 0000007A 6830            LDR              R0, [R6]
  181 0000007C F040 0007       ORR              R0, R0, #0x07
  182 00000080 6030            STR              R0, [R6]
  183 00000082         
  184 00000082         ;;-----------PWM2 for ENGINE 2 connect to PH0
  185 00000082         ;;PWM1block produce PWM2 et PWM3 output
  186 00000082         ;;Config Modes PWM2 + mode GenA + mode GenB
  187 00000082 4E5D            LDR              R6, = PWM1CTL
  188 00000084 F04F 0002       MOV              R0, #2      ;Mode up-down-up-do
                                                            wn, not synchro
  189 00000088 6030            STR              R0, [R6]    ;*(int *)(0x4002800
                                                            0+0x040)=2;
  190 0000008A         
  191 0000008A 4E5C            LDR              R6, =PWM1GENA ;decount, when CM
                                                            PA = CPT => output 
                                                            pwmA=0
  192 0000008C         ;croissant count, when CMPA = CPT => output pwmA=1
  193 0000008C F04F 00B0       MOV              R0, #0x0B0  ;0B0=10110000 => AC
                                                            TCMPBD=00 (B down:n
                                                            othing), ACTCMPBU=0
                                                            0(B up nothing)
  194 00000090 6030            STR              R0, [R6]    ;ACTCMPAD=10 (A dow
                                                            n:pwmA low), ACTCMP
                                                            AU=11 (A up:pwmA hi
                                                            gh) , ACTLOAD=00,AC
                                                            TZERO=00
  195 00000092         
  196 00000092         ;*(int *)(0x40028000+0x060)=0x0B0; //
  197 00000092 4E5B            LDR              R6, =PWM1GENB ;*(int *)(0x40028
                                                            000+0x064)=0x0B00;
  198 00000094 F44F 6030       MOV              R0, #0x0B00 ;in decount, when C
                                                            MPB = CPT => output
                                                             pwmB=0
  199 00000098 6030            STR              R0, [R6]    ;in count croissant
                                                            , when CMPB = CPT =
                                                            > output pwmA=1
  200 0000009A         ;Config CPT, CMP A et CMP B
  201 0000009A         ;;#define PWM_PERIOD (ROM_SysCtlClockGet() / 16000),
  202 0000009A         ;;in mesure : SysCtlClockGet=0F42400h, /16=0x3E8,
  203 0000009A         ;;divide by 2 because ENGINE 6v sur alim 12v
  204 0000009A         ;*(int *)(0x40028000+0x050)=0x1F4; //PWM0LOAD=periode/2 
                       =0x1F4
  205 0000009A 4E5A            LDR              R6, =PWM1LOAD
  206 0000009C F44F 70FA       MOV              R0, #0x1F4
  207 000000A0 6030            STR              R0,[R6]
  208 000000A2         



ARM Macro Assembler    Page 7 


  209 000000A2 4E59            LDR              R6, =PWM1CMPA ;cyclique value r
                                                            eport : pour 10% =>
                                                             1C2h if clock = 0F
                                                            42400
  210 000000A4 F44F 7080       MOV              R0, #VITESSE
  211 000000A8 6030            STR              R0, [R6]    ;*(int *)(0x4002800
                                                            0+0x058)=0x01C2;
  212 000000AA         
  213 000000AA 4E58            LDR              R6, =PWM1CMPB ;PWM0CMPB recoit 
                                                            meme value. (CMPA d
                                                            epend du cyclique r
                                                            eport)
  214 000000AC F44F 70FA       MOV              R0, #0x1F4  ; *(int *)(0x400280
                                                            00+0x05C)=0x1F4;
  215 000000B0 6030            STR              R0, [R6]
  216 000000B2         
  217 000000B2         ;Control PWM : activate PWM Generator 0 (p1167): Enable+
                       up/down + Enable counter debug mod
  218 000000B2 4E51            LDR              R6, =PWM1CTL
  219 000000B4 6830            LDR              R0, [R6]    ;*(int *) (0x400280
                                                            00+0x40)= *(int *)(
                                                            0x40028000+0x40) | 
                                                            0x07;
  220 000000B6 F040 0007       ORR              R0, R0, #0x07
  221 000000BA 6030            STR              R0, [R6]
  222 000000BC         
  223 000000BC         ;;-----End config of PWMs
  224 000000BC         
  225 000000BC         ;PORT D OUTPUT pin0 (pwm)=pin1(direction)=pin2(slow deca
                       y)=pin5(12v enable)
  226 000000BC 4E54            LDR              R6, =GPIODIR_D
  227 000000BE 6830            LDR              R0, [R6]
  228 000000C0 F040 0027       ORR              R0, #(GPIO_0+GPIO_1+GPIO_2+GPIO
_5)
  229 000000C4 6030            STR              R0,[R6]
  230 000000C6         ;Port D, 2mA same
  231 000000C6 4E53            LDR              R6, =GPIODR2R_D ;
  232 000000C8 6830            LDR              R0, [R6]
  233 000000CA F040 0027       ORR              R0, #(GPIO_0+GPIO_1+GPIO_2+GPIO
_5)
  234 000000CE 6030            STR              R0,[R6]
  235 000000D0         ;Port D, Digital Enable
  236 000000D0 4E51            LDR              R6, =GPIODEN_D ;
  237 000000D2 6830            LDR              R0, [R6]
  238 000000D4 F040 0027       ORR              R0, #(GPIO_0+GPIO_1+GPIO_2+GPIO
_5)
  239 000000D8 6030            STR              R0,[R6]
  240 000000DA         ;Port D : set to 1 the slow Decay and 12V et set 0 for d
                       ir and pwm
  241 000000DA 4E50            LDR              R6, =(GPIODATA_D+((GPIO_0+GPIO_
1+GPIO_2+GPIO_5)<<2))
  242 000000DC F04F 0024       MOV              R0, #(GPIO_2+GPIO_5) ; #0x24
  243 000000E0 6030            STR              R0,[R6]
  244 000000E2         
  245 000000E2         ;MOT2, PH1 for direction ENGINE ouput
  246 000000E2 4E4F            LDR              R6, =GPIODIR_H
  247 000000E4 F04F 0003       MOV              R0, #0x03   ;
  248 000000E8 6030            STR              R0,[R6]
  249 000000EA         ;Port H, 2mA same



ARM Macro Assembler    Page 8 


  250 000000EA 4E4E            LDR              R6, =GPIODR2R_H
  251 000000EC F04F 0003       MOV              R0, #0x03
  252 000000F0 6030            STR              R0,[R6]
  253 000000F2         ;Port H, Digital Enable
  254 000000F2 4E4D            LDR              R6, =GPIODEN_H
  255 000000F4 F04F 0003       MOV              R0, #0x03
  256 000000F8 6030            STR              R0,[R6]
  257 000000FA         ;Port H : set to 1 for dir
  258 000000FA 4E4C            LDR              R6, =(GPIODATA_H +(GPIO_1<<2))
  259 000000FC F04F 0002       MOV              R0, #0x02
  260 00000100 6030            STR              R0,[R6]
  261 00000102         
  262 00000102 4770            BX               LR          ; END init program
  263 00000104         
  264 00000104         ;Enable PWM0 (bit 0) and PWM2 (bit 2) p1145
  265 00000104         ;Warning here it's output PWM0 and PWM2 we controling, n
                       pt the blocks PWM0 and PWM1!!!
  266 00000104         __ENGINE_RIGHT_ON
  267 00000104         ;Enable output PWM0 (bit 0), p1145
  268 00000104 4E4A            LDR              R6, =PWMENABLE
  269 00000106 6830            LDR              R0, [R6]
  270 00000108 F040 0001       ORR              R0, #0x01   ;bit 0 = 1
  271 0000010C 6030            STR              R0, [R6]
  272 0000010E 4770            BX               LR
  273 00000110         
  274 00000110         __ENGINE_RIGHT_OFF
  275 00000110 4E47            LDR              R6, =PWMENABLE
  276 00000112 6830            LDR              R0, [R6]
  277 00000114 F000 000E       AND              R0, #0x0E   ;bit 0 = 0
  278 00000118 6030            STR              R0, [R6]
  279 0000011A 4770            BX               LR
  280 0000011C         
  281 0000011C         __ENGINE_LEFT_ON
  282 0000011C 4E44            LDR              R6, =PWMENABLE
  283 0000011E 6830            LDR              R0, [R6]
  284 00000120 F040 0004       ORR              R0, #0x04   ;bit 2 = 1
  285 00000124 6030            STR              R0, [R6]
  286 00000126 4770            BX               LR
  287 00000128         
  288 00000128         __ENGINE_LEFT_OFF
  289 00000128 4E41            LDR              R6, =PWMENABLE
  290 0000012A 6830            LDR              R0, [R6]
  291 0000012C F000 000B       AND              R0, #0x0B   ;bit 2 = 0
  292 00000130 6030            STR              R0, [R6]
  293 00000132 4770            BX               LR
  294 00000134         
  295 00000134         __ENGINE_LEFT_RIGHT_ON
  296 00000134         ;;;
  297 00000134         ;;Start engine LEFT and RIGHT
  298 00000134         ;;;
  299 00000134 B541            PUSH             { R0, R6, LR}
  300 00000136 F7FF FFFE       BL               __ENGINE_LEFT_ON
  301 0000013A F7FF FFFE       BL               __ENGINE_RIGHT_ON
  302 0000013E BD41            POP              { R0, R6, PC}
  303 00000140         
  304 00000140         __ENGINE_LEFT_RIGHT_OFF
  305 00000140         ;;;
  306 00000140         ;;Stop engine LEFT and RIGHT
  307 00000140         ;;;



ARM Macro Assembler    Page 9 


  308 00000140 B541            PUSH             { R0, R6, LR}
  309 00000142 F7FF FFFE       BL               __ENGINE_LEFT_OFF
  310 00000146 F7FF FFFE       BL               __ENGINE_RIGHT_OFF
  311 0000014A BD41            POP              { R0, R6, PC}
  312 0000014C         
  313 0000014C         __ENGINE_RIGHT_BACK
  314 0000014C         ;Inverse Direction (GPIO_D1)
  315 0000014C 4E39            LDR              R6, =(GPIODATA_D+(GPIO_1<<2))
  316 0000014E F04F 0000       MOV              R0, #0
  317 00000152 6030            STR              R0,[R6]
  318 00000154 4770            BX               LR
  319 00000156         
  320 00000156         __ENGINE_RIGHT_FRONT
  321 00000156         ;Inverse Direction (GPIO_D1)
  322 00000156 4E37            LDR              R6, =(GPIODATA_D+(GPIO_1<<2))
  323 00000158 F04F 0002       MOV              R0, #2
  324 0000015C 6030            STR              R0,[R6]
  325 0000015E 4770            BX               LR
  326 00000160         
  327 00000160         __ENGINE_LEFT_BACK
  328 00000160         ;Inverse Direction (GPIO_D1)
  329 00000160 4E32            LDR              R6, =(GPIODATA_H+(GPIO_1<<2))
  330 00000162 F04F 0002       MOV              R0, #2      ; contraire du ENGI
                                                            NE RIGHT
  331 00000166 6030            STR              R0,[R6]
  332 00000168 4770            BX               LR
  333 0000016A         
  334 0000016A         __ENGINE_LEFT_FRONT
  335 0000016A         ;Inverse Direction (GPIO_D1)
  336 0000016A 4E30            LDR              R6, =(GPIODATA_H+(GPIO_1<<2))
  337 0000016C F04F 0000       MOV              R0, #0
  338 00000170 6030            STR              R0,[R6]
  339 00000172 4770            BX               LR
  340 00000174         
  341 00000174         __ENGINE_RIGHT_INVERSE
  342 00000174         ;Inverse Direction (GPIO_D1)
  343 00000174 4E2F            LDR              R6, =(GPIODATA_D+(GPIO_1<<2))
  344 00000176 6831            LDR              r1, [R6]
  345 00000178 F081 0002       EOR              R0, r1, #GPIO_1
  346 0000017C 6030            STR              R0,[R6]
  347 0000017E 4770            BX               LR
  348 00000180         
  349 00000180         __ENGINE_LEFT_INVERSE
  350 00000180         ;Inverse Direction (GPIO_D1)
  351 00000180 4E2A            LDR              R6, =(GPIODATA_H+(GPIO_1<<2))
  352 00000182 6831            LDR              r1, [R6]
  353 00000184 F081 0002       EOR              R0, r1, #GPIO_1
  354 00000188 6030            STR              R0,[R6]
  355 0000018A 4770            BX               LR
  356 0000018C         
  357 0000018C         __ENGINE_LEFT_RIGHT_FRONT
  358 0000018C         ;;;
  359 0000018C         ;;LEFT and RIGHT go FRONT
  360 0000018C         ;;;
  361 0000018C B541            PUSH             { R0, R6, LR}
  362 0000018E F7FF FFFE       BL               __ENGINE_LEFT_FRONT
  363 00000192 F7FF FFFE       BL               __ENGINE_RIGHT_FRONT
  364 00000196 BD41            POP              { R0, R6, PC}
  365 00000198         



ARM Macro Assembler    Page 10 


  366 00000198         __ENGINE_LEFT_RIGHT_BACK
  367 00000198         ;;;
  368 00000198         ;;LEFT and RIGHT go BACK
  369 00000198         ;;;
  370 00000198 B541            PUSH             { R0, R6, LR}
  371 0000019A F7FF FFFE       BL               __ENGINE_LEFT_BACK
  372 0000019E F7FF FFFE       BL               __ENGINE_RIGHT_BACK
  373 000001A2 BD41            POP              { R0, R6, PC}
  374 000001A4         
  375 000001A4         __ENGINE_LEFT_FRONT_RIGHT_BACK
  376 000001A4         ;;;
  377 000001A4         ;;TURN RIGHT
  378 000001A4         ;;;
  379 000001A4 B541            PUSH             { R0, R6, LR}
  380 000001A6 F7FF FFFE       BL               __ENGINE_LEFT_FRONT
  381 000001AA F7FF FFFE       BL               __ENGINE_RIGHT_BACK
  382 000001AE BD41            POP              { R0, R6, PC}
  383 000001B0         
  384 000001B0         
  385 000001B0         __ENGINE_LEFT_BACK_RIGHT_FRONT
  386 000001B0         ;;;
  387 000001B0         ;;TURN LEFT
  388 000001B0         ;;;
  389 000001B0 B541            PUSH             { R0, R6, LR}
  390 000001B2 F7FF FFFE       BL               __ENGINE_LEFT_BACK
  391 000001B6 F7FF FFFE       BL               __ENGINE_RIGHT_FRONT
  392 000001BA BD41            POP              { R0, R6, PC}
  393 000001BC         
  394 000001BC         __ENGINE_LEFT_RIGHT_INVERSE
  395 000001BC         ;;;
  396 000001BC         ;;INVERSE BOTH ENGINE
  397 000001BC         ;;;
  398 000001BC B543            PUSH             { R0, R1, R6, LR}
  399 000001BE F7FF FFFE       BL               __ENGINE_LEFT_INVERSE
  400 000001C2 F7FF FFFE       BL               __ENGINE_RIGHT_INVERSE
  401 000001C6 BD43            POP              { R0, R1, R6, PC}
  402 000001C8         
  403 000001C8                 END
              400FE100 
              400FE108 
              4000752C 
              4002752C 
              40007420 
              40027420 
              40028040 
              40028060 
              40028064 
              40028050 
              40028058 
              4002805C 
              40028080 
              400280A0 
              400280A4 
              40028090 
              40028098 
              4002809C 
              40007400 
              40007500 
              4000751C 



ARM Macro Assembler    Page 11 


              4000709C 
              40027400 
              40027500 
              4002751C 
              40027008 
              40028008 
              40007008 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M3 --apcs=interw
ork --depend=.\objects\rd_bv_config_engine.d -o.\objects\rd_bv_config_engine.o 
-I.\RTE\_Target_1 -ID:\ProgramFiles\Armv52\ARM\CMSIS\5.5.1\CMSIS\Core\Include -
ID:\ProgramFiles\Armv52\ARM\CMSIS\5.5.1\Device\ARM\ARMCM3\Include --predefine="
__EVAL SETA 1" --predefine="__UVISION_VERSION SETA 528" --predefine="_RTE_ SETA
 1" --predefine="ARMCM3 SETA 1" --list=.\listings\rd_bv_config_engine.lst RD_BV
_CONFIG_ENGINE.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

_CONFIG_ENGINE_ 00000000

Symbol: _CONFIG_ENGINE_
   Definitions
      At line 69 in file RD_BV_CONFIG_ENGINE.s
   Uses
      None
Comment: _CONFIG_ENGINE_ unused
__ENGINE_INIT 00000000

Symbol: __ENGINE_INIT
   Definitions
      At line 93 in file RD_BV_CONFIG_ENGINE.s
   Uses
      At line 73 in file RD_BV_CONFIG_ENGINE.s
Comment: __ENGINE_INIT used once
__ENGINE_LEFT_BACK 00000160

Symbol: __ENGINE_LEFT_BACK
   Definitions
      At line 327 in file RD_BV_CONFIG_ENGINE.s
   Uses
      At line 82 in file RD_BV_CONFIG_ENGINE.s
      At line 371 in file RD_BV_CONFIG_ENGINE.s
      At line 390 in file RD_BV_CONFIG_ENGINE.s

__ENGINE_LEFT_BACK_RIGHT_FRONT 000001B0

Symbol: __ENGINE_LEFT_BACK_RIGHT_FRONT
   Definitions
      At line 385 in file RD_BV_CONFIG_ENGINE.s
   Uses
      At line 88 in file RD_BV_CONFIG_ENGINE.s
Comment: __ENGINE_LEFT_BACK_RIGHT_FRONT used once
__ENGINE_LEFT_FRONT 0000016A

Symbol: __ENGINE_LEFT_FRONT
   Definitions
      At line 334 in file RD_BV_CONFIG_ENGINE.s
   Uses
      At line 81 in file RD_BV_CONFIG_ENGINE.s
      At line 362 in file RD_BV_CONFIG_ENGINE.s
      At line 380 in file RD_BV_CONFIG_ENGINE.s

__ENGINE_LEFT_FRONT_RIGHT_BACK 000001A4

Symbol: __ENGINE_LEFT_FRONT_RIGHT_BACK
   Definitions
      At line 375 in file RD_BV_CONFIG_ENGINE.s
   Uses
      At line 89 in file RD_BV_CONFIG_ENGINE.s
Comment: __ENGINE_LEFT_FRONT_RIGHT_BACK used once
__ENGINE_LEFT_INVERSE 00000180

Symbol: __ENGINE_LEFT_INVERSE
   Definitions
      At line 349 in file RD_BV_CONFIG_ENGINE.s
   Uses
      At line 83 in file RD_BV_CONFIG_ENGINE.s



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

      At line 399 in file RD_BV_CONFIG_ENGINE.s

__ENGINE_LEFT_OFF 00000128

Symbol: __ENGINE_LEFT_OFF
   Definitions
      At line 288 in file RD_BV_CONFIG_ENGINE.s
   Uses
      At line 80 in file RD_BV_CONFIG_ENGINE.s
      At line 309 in file RD_BV_CONFIG_ENGINE.s

__ENGINE_LEFT_ON 0000011C

Symbol: __ENGINE_LEFT_ON
   Definitions
      At line 281 in file RD_BV_CONFIG_ENGINE.s
   Uses
      At line 79 in file RD_BV_CONFIG_ENGINE.s
      At line 300 in file RD_BV_CONFIG_ENGINE.s

__ENGINE_LEFT_RIGHT_BACK 00000198

Symbol: __ENGINE_LEFT_RIGHT_BACK
   Definitions
      At line 366 in file RD_BV_CONFIG_ENGINE.s
   Uses
      At line 87 in file RD_BV_CONFIG_ENGINE.s
Comment: __ENGINE_LEFT_RIGHT_BACK used once
__ENGINE_LEFT_RIGHT_FRONT 0000018C

Symbol: __ENGINE_LEFT_RIGHT_FRONT
   Definitions
      At line 357 in file RD_BV_CONFIG_ENGINE.s
   Uses
      At line 86 in file RD_BV_CONFIG_ENGINE.s
Comment: __ENGINE_LEFT_RIGHT_FRONT used once
__ENGINE_LEFT_RIGHT_INVERSE 000001BC

Symbol: __ENGINE_LEFT_RIGHT_INVERSE
   Definitions
      At line 394 in file RD_BV_CONFIG_ENGINE.s
   Uses
      At line 90 in file RD_BV_CONFIG_ENGINE.s
Comment: __ENGINE_LEFT_RIGHT_INVERSE used once
__ENGINE_LEFT_RIGHT_OFF 00000140

Symbol: __ENGINE_LEFT_RIGHT_OFF
   Definitions
      At line 304 in file RD_BV_CONFIG_ENGINE.s
   Uses
      At line 85 in file RD_BV_CONFIG_ENGINE.s
Comment: __ENGINE_LEFT_RIGHT_OFF used once
__ENGINE_LEFT_RIGHT_ON 00000134

Symbol: __ENGINE_LEFT_RIGHT_ON
   Definitions
      At line 295 in file RD_BV_CONFIG_ENGINE.s
   Uses
      At line 84 in file RD_BV_CONFIG_ENGINE.s



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols

Comment: __ENGINE_LEFT_RIGHT_ON used once
__ENGINE_RIGHT_BACK 0000014C

Symbol: __ENGINE_RIGHT_BACK
   Definitions
      At line 313 in file RD_BV_CONFIG_ENGINE.s
   Uses
      At line 77 in file RD_BV_CONFIG_ENGINE.s
      At line 372 in file RD_BV_CONFIG_ENGINE.s
      At line 381 in file RD_BV_CONFIG_ENGINE.s

__ENGINE_RIGHT_FRONT 00000156

Symbol: __ENGINE_RIGHT_FRONT
   Definitions
      At line 320 in file RD_BV_CONFIG_ENGINE.s
   Uses
      At line 76 in file RD_BV_CONFIG_ENGINE.s
      At line 363 in file RD_BV_CONFIG_ENGINE.s
      At line 391 in file RD_BV_CONFIG_ENGINE.s

__ENGINE_RIGHT_INVERSE 00000174

Symbol: __ENGINE_RIGHT_INVERSE
   Definitions
      At line 341 in file RD_BV_CONFIG_ENGINE.s
   Uses
      At line 78 in file RD_BV_CONFIG_ENGINE.s
      At line 400 in file RD_BV_CONFIG_ENGINE.s

__ENGINE_RIGHT_OFF 00000110

Symbol: __ENGINE_RIGHT_OFF
   Definitions
      At line 274 in file RD_BV_CONFIG_ENGINE.s
   Uses
      At line 75 in file RD_BV_CONFIG_ENGINE.s
      At line 310 in file RD_BV_CONFIG_ENGINE.s

__ENGINE_RIGHT_ON 00000104

Symbol: __ENGINE_RIGHT_ON
   Definitions
      At line 266 in file RD_BV_CONFIG_ENGINE.s
   Uses
      At line 74 in file RD_BV_CONFIG_ENGINE.s
      At line 301 in file RD_BV_CONFIG_ENGINE.s

19 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

GPIOAFSEL_D 40007420

Symbol: GPIOAFSEL_D
   Definitions
      At line 33 in file RD_BV_CONFIG_ENGINE.s
   Uses
      At line 135 in file RD_BV_CONFIG_ENGINE.s
Comment: GPIOAFSEL_D used once
GPIOAFSEL_H 40027420

Symbol: GPIOAFSEL_H
   Definitions
      At line 41 in file RD_BV_CONFIG_ENGINE.s
   Uses
      At line 142 in file RD_BV_CONFIG_ENGINE.s
Comment: GPIOAFSEL_H used once
GPIODATA_D 40007000

Symbol: GPIODATA_D
   Definitions
      At line 28 in file RD_BV_CONFIG_ENGINE.s
   Uses
      At line 241 in file RD_BV_CONFIG_ENGINE.s
      At line 315 in file RD_BV_CONFIG_ENGINE.s
      At line 322 in file RD_BV_CONFIG_ENGINE.s
      At line 343 in file RD_BV_CONFIG_ENGINE.s

GPIODATA_H 40027000

Symbol: GPIODATA_H
   Definitions
      At line 36 in file RD_BV_CONFIG_ENGINE.s
   Uses
      At line 258 in file RD_BV_CONFIG_ENGINE.s
      At line 329 in file RD_BV_CONFIG_ENGINE.s
      At line 336 in file RD_BV_CONFIG_ENGINE.s
      At line 351 in file RD_BV_CONFIG_ENGINE.s

GPIODEN_D 4000751C

Symbol: GPIODEN_D
   Definitions
      At line 31 in file RD_BV_CONFIG_ENGINE.s
   Uses
      At line 236 in file RD_BV_CONFIG_ENGINE.s
Comment: GPIODEN_D used once
GPIODEN_H 4002751C

Symbol: GPIODEN_H
   Definitions
      At line 39 in file RD_BV_CONFIG_ENGINE.s
   Uses
      At line 254 in file RD_BV_CONFIG_ENGINE.s
Comment: GPIODEN_H used once
GPIODIR_D 40007400

Symbol: GPIODIR_D
   Definitions
      At line 29 in file RD_BV_CONFIG_ENGINE.s



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

   Uses
      At line 226 in file RD_BV_CONFIG_ENGINE.s
Comment: GPIODIR_D used once
GPIODIR_H 40027400

Symbol: GPIODIR_H
   Definitions
      At line 37 in file RD_BV_CONFIG_ENGINE.s
   Uses
      At line 246 in file RD_BV_CONFIG_ENGINE.s
Comment: GPIODIR_H used once
GPIODR2R_D 40007500

Symbol: GPIODR2R_D
   Definitions
      At line 30 in file RD_BV_CONFIG_ENGINE.s
   Uses
      At line 231 in file RD_BV_CONFIG_ENGINE.s
Comment: GPIODR2R_D used once
GPIODR2R_H 40027500

Symbol: GPIODR2R_H
   Definitions
      At line 38 in file RD_BV_CONFIG_ENGINE.s
   Uses
      At line 250 in file RD_BV_CONFIG_ENGINE.s
Comment: GPIODR2R_H used once
GPIOPCTL_D 4000752C

Symbol: GPIOPCTL_D
   Definitions
      At line 32 in file RD_BV_CONFIG_ENGINE.s
   Uses
      At line 121 in file RD_BV_CONFIG_ENGINE.s
Comment: GPIOPCTL_D used once
GPIOPCTL_H 4002752C

Symbol: GPIOPCTL_H
   Definitions
      At line 40 in file RD_BV_CONFIG_ENGINE.s
   Uses
      At line 129 in file RD_BV_CONFIG_ENGINE.s
Comment: GPIOPCTL_H used once
GPIO_0 00000001

Symbol: GPIO_0
   Definitions
      At line 14 in file RD_BV_CONFIG_ENGINE.s
   Uses
      At line 228 in file RD_BV_CONFIG_ENGINE.s
      At line 233 in file RD_BV_CONFIG_ENGINE.s
      At line 238 in file RD_BV_CONFIG_ENGINE.s
      At line 241 in file RD_BV_CONFIG_ENGINE.s

GPIO_1 00000002

Symbol: GPIO_1
   Definitions
      At line 15 in file RD_BV_CONFIG_ENGINE.s



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Absolute symbols

   Uses
      At line 228 in file RD_BV_CONFIG_ENGINE.s
      At line 233 in file RD_BV_CONFIG_ENGINE.s
      At line 238 in file RD_BV_CONFIG_ENGINE.s
      At line 241 in file RD_BV_CONFIG_ENGINE.s
      At line 258 in file RD_BV_CONFIG_ENGINE.s
      At line 315 in file RD_BV_CONFIG_ENGINE.s
      At line 322 in file RD_BV_CONFIG_ENGINE.s
      At line 329 in file RD_BV_CONFIG_ENGINE.s
      At line 336 in file RD_BV_CONFIG_ENGINE.s
      At line 343 in file RD_BV_CONFIG_ENGINE.s
      At line 345 in file RD_BV_CONFIG_ENGINE.s
      At line 351 in file RD_BV_CONFIG_ENGINE.s
      At line 353 in file RD_BV_CONFIG_ENGINE.s

GPIO_2 00000004

Symbol: GPIO_2
   Definitions
      At line 16 in file RD_BV_CONFIG_ENGINE.s
   Uses
      At line 228 in file RD_BV_CONFIG_ENGINE.s
      At line 233 in file RD_BV_CONFIG_ENGINE.s
      At line 238 in file RD_BV_CONFIG_ENGINE.s
      At line 241 in file RD_BV_CONFIG_ENGINE.s
      At line 242 in file RD_BV_CONFIG_ENGINE.s

GPIO_3 00000008

Symbol: GPIO_3
   Definitions
      At line 17 in file RD_BV_CONFIG_ENGINE.s
   Uses
      None
Comment: GPIO_3 unused
GPIO_5 00000020

Symbol: GPIO_5
   Definitions
      At line 18 in file RD_BV_CONFIG_ENGINE.s
   Uses
      At line 228 in file RD_BV_CONFIG_ENGINE.s
      At line 233 in file RD_BV_CONFIG_ENGINE.s
      At line 238 in file RD_BV_CONFIG_ENGINE.s
      At line 241 in file RD_BV_CONFIG_ENGINE.s
      At line 242 in file RD_BV_CONFIG_ENGINE.s

GPIO_6 00000040

Symbol: GPIO_6
   Definitions
      At line 19 in file RD_BV_CONFIG_ENGINE.s
   Uses
      None
Comment: GPIO_6 unused
GPIO_7 00000080

Symbol: GPIO_7
   Definitions



ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Absolute symbols

      At line 20 in file RD_BV_CONFIG_ENGINE.s
   Uses
      None
Comment: GPIO_7 unused
PORTD_BASE 40007000

Symbol: PORTD_BASE
   Definitions
      At line 27 in file RD_BV_CONFIG_ENGINE.s
   Uses
      At line 28 in file RD_BV_CONFIG_ENGINE.s
      At line 29 in file RD_BV_CONFIG_ENGINE.s
      At line 30 in file RD_BV_CONFIG_ENGINE.s
      At line 31 in file RD_BV_CONFIG_ENGINE.s
      At line 32 in file RD_BV_CONFIG_ENGINE.s
      At line 33 in file RD_BV_CONFIG_ENGINE.s

PORTH_BASE 40027000

Symbol: PORTH_BASE
   Definitions
      At line 35 in file RD_BV_CONFIG_ENGINE.s
   Uses
      At line 36 in file RD_BV_CONFIG_ENGINE.s
      At line 37 in file RD_BV_CONFIG_ENGINE.s
      At line 38 in file RD_BV_CONFIG_ENGINE.s
      At line 39 in file RD_BV_CONFIG_ENGINE.s
      At line 40 in file RD_BV_CONFIG_ENGINE.s
      At line 41 in file RD_BV_CONFIG_ENGINE.s

PWM0CMPA 40028058

Symbol: PWM0CMPA
   Definitions
      At line 50 in file RD_BV_CONFIG_ENGINE.s
   Uses
      At line 170 in file RD_BV_CONFIG_ENGINE.s
Comment: PWM0CMPA used once
PWM0CMPB 4002805C

Symbol: PWM0CMPB
   Definitions
      At line 51 in file RD_BV_CONFIG_ENGINE.s
   Uses
      At line 174 in file RD_BV_CONFIG_ENGINE.s
Comment: PWM0CMPB used once
PWM0CTL 40028040

Symbol: PWM0CTL
   Definitions
      At line 48 in file RD_BV_CONFIG_ENGINE.s
   Uses
      At line 150 in file RD_BV_CONFIG_ENGINE.s
      At line 179 in file RD_BV_CONFIG_ENGINE.s

PWM0GENA 40028060

Symbol: PWM0GENA
   Definitions



ARM Macro Assembler    Page 5 Alphabetic symbol ordering
Absolute symbols

      At line 52 in file RD_BV_CONFIG_ENGINE.s
   Uses
      At line 154 in file RD_BV_CONFIG_ENGINE.s
Comment: PWM0GENA used once
PWM0GENB 40028064

Symbol: PWM0GENB
   Definitions
      At line 53 in file RD_BV_CONFIG_ENGINE.s
   Uses
      At line 159 in file RD_BV_CONFIG_ENGINE.s
Comment: PWM0GENB used once
PWM0LOAD 40028050

Symbol: PWM0LOAD
   Definitions
      At line 49 in file RD_BV_CONFIG_ENGINE.s
   Uses
      At line 166 in file RD_BV_CONFIG_ENGINE.s
Comment: PWM0LOAD used once
PWM1CMPA 40028098

Symbol: PWM1CMPA
   Definitions
      At line 58 in file RD_BV_CONFIG_ENGINE.s
   Uses
      At line 209 in file RD_BV_CONFIG_ENGINE.s
Comment: PWM1CMPA used once
PWM1CMPB 4002809C

Symbol: PWM1CMPB
   Definitions
      At line 59 in file RD_BV_CONFIG_ENGINE.s
   Uses
      At line 213 in file RD_BV_CONFIG_ENGINE.s
Comment: PWM1CMPB used once
PWM1CTL 40028080

Symbol: PWM1CTL
   Definitions
      At line 56 in file RD_BV_CONFIG_ENGINE.s
   Uses
      At line 187 in file RD_BV_CONFIG_ENGINE.s
      At line 218 in file RD_BV_CONFIG_ENGINE.s

PWM1GENA 400280A0

Symbol: PWM1GENA
   Definitions
      At line 60 in file RD_BV_CONFIG_ENGINE.s
   Uses
      At line 191 in file RD_BV_CONFIG_ENGINE.s
Comment: PWM1GENA used once
PWM1GENB 400280A4

Symbol: PWM1GENB
   Definitions
      At line 61 in file RD_BV_CONFIG_ENGINE.s
   Uses



ARM Macro Assembler    Page 6 Alphabetic symbol ordering
Absolute symbols

      At line 197 in file RD_BV_CONFIG_ENGINE.s
Comment: PWM1GENB used once
PWM1LOAD 40028090

Symbol: PWM1LOAD
   Definitions
      At line 57 in file RD_BV_CONFIG_ENGINE.s
   Uses
      At line 205 in file RD_BV_CONFIG_ENGINE.s
Comment: PWM1LOAD used once
PWMENABLE 40028008

Symbol: PWMENABLE
   Definitions
      At line 45 in file RD_BV_CONFIG_ENGINE.s
   Uses
      At line 268 in file RD_BV_CONFIG_ENGINE.s
      At line 275 in file RD_BV_CONFIG_ENGINE.s
      At line 282 in file RD_BV_CONFIG_ENGINE.s
      At line 289 in file RD_BV_CONFIG_ENGINE.s

PWM_BASE 40028000

Symbol: PWM_BASE
   Definitions
      At line 44 in file RD_BV_CONFIG_ENGINE.s
   Uses
      At line 45 in file RD_BV_CONFIG_ENGINE.s
      At line 48 in file RD_BV_CONFIG_ENGINE.s
      At line 49 in file RD_BV_CONFIG_ENGINE.s
      At line 50 in file RD_BV_CONFIG_ENGINE.s
      At line 51 in file RD_BV_CONFIG_ENGINE.s
      At line 52 in file RD_BV_CONFIG_ENGINE.s
      At line 53 in file RD_BV_CONFIG_ENGINE.s
      At line 56 in file RD_BV_CONFIG_ENGINE.s
      At line 57 in file RD_BV_CONFIG_ENGINE.s
      At line 58 in file RD_BV_CONFIG_ENGINE.s
      At line 59 in file RD_BV_CONFIG_ENGINE.s
      At line 60 in file RD_BV_CONFIG_ENGINE.s
      At line 61 in file RD_BV_CONFIG_ENGINE.s

SYSCTL_RCGC0 400FE100

Symbol: SYSCTL_RCGC0
   Definitions
      At line 23 in file RD_BV_CONFIG_ENGINE.s
   Uses
      At line 95 in file RD_BV_CONFIG_ENGINE.s
Comment: SYSCTL_RCGC0 used once
SYSCTL_RCGC2 400FE108

Symbol: SYSCTL_RCGC2
   Definitions
      At line 24 in file RD_BV_CONFIG_ENGINE.s
   Uses
      At line 104 in file RD_BV_CONFIG_ENGINE.s
      At line 110 in file RD_BV_CONFIG_ENGINE.s

VITESSE 00000100



ARM Macro Assembler    Page 7 Alphabetic symbol ordering
Absolute symbols


Symbol: VITESSE
   Definitions
      At line 64 in file RD_BV_CONFIG_ENGINE.s
   Uses
      At line 171 in file RD_BV_CONFIG_ENGINE.s
      At line 210 in file RD_BV_CONFIG_ENGINE.s

38 symbols
393 symbols in table
