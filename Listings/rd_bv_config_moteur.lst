


ARM Macro Assembler    Page 1 


    1 00000000         ;; RD BV - Evalbot (Cortex M3 de Texas Instrument);
    2 00000000         ; programme - Pilotage 2 ENGINEs Evalbot par PWM tout en
                        ASM (configure les pwms + GPIO)
    3 00000000         
    4 00000000         ;Les pages se réfèrent au datasheet lm3s9b92.pdf
    5 00000000         
    6 00000000         ;Cablage :
    7 00000000         ;pin 10/PD0/PWM0 => input PWM du pont en H DRV8801RT
    8 00000000         ;pin 11/PD1/PWM1 => input Phase_R  du pont en H DRV8801R
                       T
    9 00000000         ;pin 12/PD2   => input SlowDecay commune aux 2 ponts en 
                       H
   10 00000000         ;pin 98/PD5   => input Enable 12v du conv DC/DC
   11 00000000         ;pin 86/PH0/PWM2 => input PWM du 2nd pont en H
   12 00000000         ;pin 85/PH1/PWM3 => input Phase du 2nd pont en H
   13 00000000         
   14 00000000         ;; Hexa cORResponding values to pin numbers
   15 00000000 00000001 
                       GPIO_0  EQU              0x1
   16 00000000 00000002 
                       GPIO_1  EQU              0x2
   17 00000000 00000004 
                       GPIO_2  EQU              0x4
   18 00000000 00000020 
                       GPIO_5  EQU              0x20
   19 00000000         
   20 00000000         ;; pour enable clock    0x400FE000
   21 00000000 400FE100 
                       SYSCTL_RCGC0
                               EQU              0x400FE100  ;SYSCTL_RCGC0: offs
                                                            et 0x100 (p271 data
                                                            sheet de lm3s9b92.p
                                                            df)
   22 00000000 400FE108 
                       SYSCTL_RCGC2
                               EQU              0x400FE108  ;SYSCTL_RCGC2: offs
                                                            et 0x108 (p291 data
                                                            sheet de lm3s9b92.p
                                                            df)
   23 00000000         
   24 00000000         ;; General-Purpose Input/Outputs (GPIO) configuration
   25 00000000 40007000 
                       PORTD_BASE
                               EQU              0x40007000
   26 00000000 40007000 
                       GPIODATA_D
                               EQU              PORTD_BASE
   27 00000000 40007400 
                       GPIODIR_D
                               EQU              PORTD_BASE+0x00000400
   28 00000000 40007500 
                       GPIODR2R_D
                               EQU              PORTD_BASE+0x00000500
   29 00000000 4000751C 
                       GPIODEN_D
                               EQU              PORTD_BASE+0x0000051C
   30 00000000 4000752C 
                       GPIOPCTL_D
                               EQU              PORTD_BASE+0x0000052C ; GPIO Po



ARM Macro Assembler    Page 2 


                                                            rt Control (GPIOPCT
                                                            L), offset 0x52C; p
                                                            444
   31 00000000 40007420 
                       GPIOAFSEL_D
                               EQU              PORTD_BASE+0x00000420 ; GPIO Al
                                                            ternate Function Se
                                                            lect (GPIOAFSEL), o
                                                            ffset 0x420; p426
   32 00000000         
   33 00000000 40027000 
                       PORTH_BASE
                               EQU              0x40027000
   34 00000000 40027000 
                       GPIODATA_H
                               EQU              PORTH_BASE
   35 00000000 40027400 
                       GPIODIR_H
                               EQU              PORTH_BASE+0x00000400
   36 00000000 40027500 
                       GPIODR2R_H
                               EQU              PORTH_BASE+0x00000500
   37 00000000 4002751C 
                       GPIODEN_H
                               EQU              PORTH_BASE+0x0000051C
   38 00000000 4002752C 
                       GPIOPCTL_H
                               EQU              PORTH_BASE+0x0000052C ; GPIO Po
                                                            rt Control (GPIOPCT
                                                            L), offset 0x52C; p
                                                            444
   39 00000000 40027420 
                       GPIOAFSEL_H
                               EQU              PORTH_BASE+0x00000420 ; GPIO Al
                                                            ternate Function Se
                                                            lect (GPIOAFSEL), o
                                                            ffset 0x420; p426
   40 00000000         
   41 00000000         ;; Pulse Width Modulator (PWM) configuration
   42 00000000 40028000 
                       PWM_BASE
                               EQU              0x040028000 ;BASE des Block PWM
                                                             p.1138
   43 00000000 40028008 
                       PWMENABLE
                               EQU              PWM_BASE+0x008 ; p1145
   44 00000000         
   45 00000000         ;Block PWM0 pour sorties PWM0 et PWM1 (ENGINE 1)
   46 00000000 40028040 
                       PWM0CTL EQU              PWM_BASE+0x040 ;p1167
   47 00000000 40028050 
                       PWM0LOAD
                               EQU              PWM_BASE+0x050
   48 00000000 40028058 
                       PWM0CMPA
                               EQU              PWM_BASE+0x058
   49 00000000 4002805C 
                       PWM0CMPB
                               EQU              PWM_BASE+0x05C



ARM Macro Assembler    Page 3 


   50 00000000 40028060 
                       PWM0GENA
                               EQU              PWM_BASE+0x060
   51 00000000 40028064 
                       PWM0GENB
                               EQU              PWM_BASE+0x064
   52 00000000         
   53 00000000         ;Block PWM1 pour sorties PWM1 et PWM2 (ENGINE 2)
   54 00000000 40028080 
                       PWM1CTL EQU              PWM_BASE+0x080
   55 00000000 40028090 
                       PWM1LOAD
                               EQU              PWM_BASE+0x090
   56 00000000 40028098 
                       PWM1CMPA
                               EQU              PWM_BASE+0x098
   57 00000000 4002809C 
                       PWM1CMPB
                               EQU              PWM_BASE+0x09C
   58 00000000 400280A0 
                       PWM1GENA
                               EQU              PWM_BASE+0x0A0
   59 00000000 400280A4 
                       PWM1GENB
                               EQU              PWM_BASE+0x0A4
   60 00000000         
   61 00000000         ;0x1A2
   62 00000000 00000192 
                       VITESSE EQU              0x192       ; Valeures plus pet
                                                            ites => Vitesse plu
                                                            s rapide exemple 0x
                                                            192
   63 00000000         ; Valeures plus grANDes => Vitesse moins rapide exemple 
                       0x1B2
   64 00000000         
   65 00000000         
   66 00000000                 AREA             _CONFIG_ENGINE_, CODE, READONLY
   67 00000000                 ENTRY
   68 00000000         
   69 00000000         ;; The EXPORT commAND specifies that a symbol can be acc
                       essed by other shared objects or executables.
   70 00000000                 EXPORT           __ENGINE_INIT
   71 00000000                 EXPORT           __ENGINE_RIGHT_ON
   72 00000000                 EXPORT           __ENGINE_RIGHT_OFF
   73 00000000                 EXPORT           __ENGINE_RIGHT_FRONT
   74 00000000                 EXPORT           __ENGINE_RIGHT_BACK
   75 00000000                 EXPORT           __ENGINE_RIGHT_INVERSE
   76 00000000                 EXPORT           __ENGINE_LEFT_ON
   77 00000000                 EXPORT           __ENGINE_LEFT_OFF
   78 00000000                 EXPORT           __ENGINE_LEFT_FRONT
   79 00000000                 EXPORT           __ENGINE_LEFT_BACK
   80 00000000                 EXPORT           __ENGINE_LEFT_INVERSE
   81 00000000                 EXPORT           __ENGINE_LEFT_RIGHT_ON
   82 00000000                 EXPORT           __ENGINE_LEFT_RIGHT_OFF
   83 00000000                 EXPORT           __ENGINE_LEFT_RIGHT_FRONT
   84 00000000                 EXPORT           __ENGINE_LEFT_RIGHT_BACK
   85 00000000                 EXPORT           __ENGINE_LEFT_BACK_RIGHT_FRONT
   86 00000000                 EXPORT           __ENGINE_LEFT_FRONT_RIGHT_BACK
   87 00000000                 EXPORT           __ENGINE_LEFT_RIGHT_INVERSE



ARM Macro Assembler    Page 4 


   88 00000000         
   89 00000000         
   90 00000000         __ENGINE_INIT
   91 00000000 4E71            LDR              R6, = SYSCTL_RCGC0
   92 00000002 6830            LDR              R0, [R6]
   93 00000004 F440 1080       ORR              R0, R0, #0x00100000 ;;bit 20 = 
                                                            PWM recoit clock: O
                                                            N (p271)
   94 00000008 6030            STR              R0, [R6]
   95 0000000A         
   96 0000000A         ;ROM_SysCtlPWMClockSet(SYSCTL_PWMDIV_1);PWM clock is pro
                       cessor clock /1
   97 0000000A         ;Je ne fais rien car par defaut = OK!!
   98 0000000A         ;*(int *) (0x400FE060)= *(int *)(0x4 
   99 0000000A         ;RCGC2 :  Enable port D GPIO(p291 ) car ENGINE RIGHT sur
                        port D
  100 0000000A 4E70            LDR              R6, = SYSCTL_RCGC2
  101 0000000C 6830            LDR              R0, [R6]
  102 0000000E F040 0008       ORR              R0, R0, #0x08 ;; Enable port D 
                                                            GPIO
  103 00000012 6030            STR              R0, [R6]
  104 00000014         
  105 00000014         ;MOT2 : RCGC2 :  Enable port H GPIO  (2eme ENGINEs)
  106 00000014 4E6D            LDR              R6, = SYSCTL_RCGC2
  107 00000016 6830            LDR              R0, [R6]
  108 00000018 F040 0080       ORR              R0, R0, #0x80 ;; Enable port H 
                                                            GPIO
  109 0000001C 6030            STR              R0, [R6]
  110 0000001E         
  111 0000001E BF00            NOP
  112 00000020 BF00            NOP
  113 00000022 BF00            NOP
  114 00000024         
  115 00000024         ;;Pin muxing pour PWM, port D, reg. GPIOPCTL(p444), 4bit
                       s de PCM0=0001<=>PWM (voir p1261)
  116 00000024         ;;il faut mettre 1 pour avoir PD0=PWM0 et PD1=PWM1
  117 00000024 4E6A            LDR              R6, = GPIOPCTL_D
  118 00000026         ;LDR R0, [R6]   ;; *(int *)(0x40007000+0x0000052C)=1;
  119 00000026         ;ORR R0, R0, #0x01 ;; Port D, pin 1 = PWM
  120 00000026 F04F 0001       MOV              R0, #0x01
  121 0000002A 6030            STR              R0, [R6]
  122 0000002C         
  123 0000002C         ;;MOT2 : Pin muxing pour PWM, port H, reg. GPIOPCTL(p444
                       ), 4bits de PCM0=0001<=>PWM (voir p1261)
  124 0000002C         ;;il faut mettre mux = 2 pour avoir PH0=PWM2 et PH1=PWM3
                       
  125 0000002C 4E69            LDR              R6, = GPIOPCTL_H
  126 0000002E F04F 0002       MOV              R0, #0x02
  127 00000032 6030            STR              R0, [R6]
  128 00000034         
  129 00000034         ;;Alternate Function Select (p 426), PD0 utilise alernat
                       e fonction (PWM au dessus)
  130 00000034         ;;donc PD0 = 1
  131 00000034 4E68            LDR              R6, = GPIOAFSEL_D
  132 00000036 6830            LDR              R0, [R6]    ;*(int *)(0x4000700
                                                            0+0x00000420)= *(in
                                                            t *)(0x40007000+0x0
                                                            0000420) | 0x000000
                                                            01;



ARM Macro Assembler    Page 5 


  133 00000038 F040 0001       ORR              R0, R0, #0x01 ;
  134 0000003C 6030            STR              R0, [R6]
  135 0000003E         
  136 0000003E         ;;MOT2 : Alternate Function Select (p 426), PH0 utilise 
                       PWM donc Alternate funct
  137 0000003E         ;;donc PH0 = 1
  138 0000003E 4E67            LDR              R6, = GPIOAFSEL_H
  139 00000040 6830            LDR              R0, [R6]    ;*(int *)(0x4000700
                                                            0+0x00000420)= *(in
                                                            t *)(0x40007000+0x0
                                                            0000420) | 0x000000
                                                            01;
  140 00000042 F040 0001       ORR              R0, R0, #0x01 ;
  141 00000046 6030            STR              R0, [R6]
  142 00000048         
  143 00000048         ;;-----------PWM0 pour ENGINE 1 connect� � PD0
  144 00000048         ;;PWM0 produit PWM0 et PWM1 output
  145 00000048         ;;Config Modes PWM0 + mode GenA + mode GenB
  146 00000048 4E65            LDR              R6, = PWM0CTL
  147 0000004A F04F 0002       MOV              R0, #2      ;Mode up-down-up-do
                                                            wn, pas synchro
  148 0000004E 6030            STR              R0, [R6]
  149 00000050         
  150 00000050 4E64            LDR              R6, =PWM0GENA ;en decomptage, q
                                                            d comparateurA = co
                                                            mpteur => sortie pw
                                                            mA=0
  151 00000052         ;en comptage croissant, qd comparateurA = compteur => so
                       rtie pwmA=1
  152 00000052 F04F 00B0       MOV              R0, #0x0B0  ;0B0=10110000 => AC
                                                            TCMPBD=00 (B down:r
                                                            ien), ACTCMPBU=00(B
                                                             up rien)
  153 00000056 6030            STR              R0, [R6]    ;ACTCMPAD=10 (A dow
                                                            n:pwmA low), ACTCMP
                                                            AU=11 (A up:pwmA hi
                                                            gh) , ACTLOAD=00,AC
                                                            TZERO=00
  154 00000058         
  155 00000058 4E63            LDR              R6, =PWM0GENB ;en comptage croi
                                                            ssant, qd comparate
                                                            urB = compteur => s
                                                            ortie pwmA=1
  156 0000005A F44F 6030       MOV              R0, #0x0B00 ;en decomptage, qd 
                                                            comparateurB = comp
                                                            teur => sortie pwmB
                                                            =0
  157 0000005E 6030            STR              R0, [R6]
  158 00000060         ;Config Compteur, comparateur A et comparateur B
  159 00000060         ;;#define PWM_PERIOD (ROM_SysCtlClockGet() / 16000),
  160 00000060         ;;en mesure : SysCtlClockGet=0F42400h, /16=0x3E8,
  161 00000060         ;;on divise par 2 car ENGINE 6v sur alim 12v
  162 00000060 4E62            LDR              R6, =PWM0LOAD ;PWM0LOAD=periode
                                                            /2 =0x1F4
  163 00000062 F44F 70FA       MOV              R0, #0x1F4
  164 00000066 6030            STR              R0,[R6]
  165 00000068         
  166 00000068 4E61            LDR              R6, =PWM0CMPA ;Valeur rapport c
                                                            yclique : pour 10% 



ARM Macro Assembler    Page 6 


                                                            => 1C2h si clock = 
                                                            0F42400
  167 0000006A F44F 70C9       MOV              R0, #VITESSE
  168 0000006E 6030            STR              R0, [R6]
  169 00000070         
  170 00000070 4E60            LDR              R6, =PWM0CMPB ;PWM0CMPB recoit 
                                                            meme valeur. (rappo
                                                            rt cyclique depend 
                                                            de CMPA)
  171 00000072 F44F 70FA       MOV              R0, #0x1F4
  172 00000076 6030            STR              R0, [R6]
  173 00000078         
  174 00000078         ;Control PWM : active PWM Generator 0 (p1167): Enable+up
                       /down + Enable counter debug mod
  175 00000078 4E59            LDR              R6, =PWM0CTL
  176 0000007A 6830            LDR              R0, [R6]
  177 0000007C F040 0007       ORR              R0, R0, #0x07
  178 00000080 6030            STR              R0, [R6]
  179 00000082         
  180 00000082         ;;-----------PWM2 pour ENGINE 2 connect� � PH0
  181 00000082         ;;PWM1block produit PWM2 et PWM3 output
  182 00000082         ;;Config Modes PWM2 + mode GenA + mode GenB
  183 00000082 4E5D            LDR              R6, = PWM1CTL
  184 00000084 F04F 0002       MOV              R0, #2      ;Mode up-down-up-do
                                                            wn, pas synchro
  185 00000088 6030            STR              R0, [R6]    ;*(int *)(0x4002800
                                                            0+0x040)=2;
  186 0000008A         
  187 0000008A 4E5C            LDR              R6, =PWM1GENA ;en decomptage, q
                                                            d comparateurA = co
                                                            mpteur => sortie pw
                                                            mA=0
  188 0000008C         ;en comptage croissant, qd comparateurA = compteur => so
                       rtie pwmA=1
  189 0000008C F04F 00B0       MOV              R0, #0x0B0  ;0B0=10110000 => AC
                                                            TCMPBD=00 (B down:r
                                                            ien), ACTCMPBU=00(B
                                                             up rien)
  190 00000090 6030            STR              R0, [R6]    ;ACTCMPAD=10 (A dow
                                                            n:pwmA low), ACTCMP
                                                            AU=11 (A up:pwmA hi
                                                            gh) , ACTLOAD=00,AC
                                                            TZERO=00
  191 00000092         
  192 00000092         ;*(int *)(0x40028000+0x060)=0x0B0; //
  193 00000092 4E5B            LDR              R6, =PWM1GENB ;*(int *)(0x40028
                                                            000+0x064)=0x0B00;
  194 00000094 F44F 6030       MOV              R0, #0x0B00 ;en decomptage, qd 
                                                            comparateurB = comp
                                                            teur => sortie pwmB
                                                            =0
  195 00000098 6030            STR              R0, [R6]    ;en comptage croiss
                                                            ant, qd comparateur
                                                            B = compteur => sor
                                                            tie pwmA=1
  196 0000009A         ;Config Compteur, comparateur A et comparateur B
  197 0000009A         ;;#define PWM_PERIOD (ROM_SysCtlClockGet() / 16000),
  198 0000009A         ;;en mesure : SysCtlClockGet=0F42400h, /16=0x3E8,
  199 0000009A         ;;on divise par 2 car ENGINE 6v sur alim 12v



ARM Macro Assembler    Page 7 


  200 0000009A         ;*(int *)(0x40028000+0x050)=0x1F4; //PWM0LOAD=periode/2 
                       =0x1F4
  201 0000009A 4E5A            LDR              R6, =PWM1LOAD
  202 0000009C F44F 70FA       MOV              R0, #0x1F4
  203 000000A0 6030            STR              R0,[R6]
  204 000000A2         
  205 000000A2 4E59            LDR              R6, =PWM1CMPA ;Valeur rapport c
                                                            yclique : pour 10% 
                                                            => 1C2h si clock = 
                                                            0F42400
  206 000000A4 F44F 70C9       MOV              R0, #VITESSE
  207 000000A8 6030            STR              R0, [R6]    ;*(int *)(0x4002800
                                                            0+0x058)=0x01C2;
  208 000000AA         
  209 000000AA 4E58            LDR              R6, =PWM1CMPB ;PWM0CMPB recoit 
                                                            meme valeur. (CMPA 
                                                            depend du rapport c
                                                            yclique)
  210 000000AC F44F 70FA       MOV              R0, #0x1F4  ; *(int *)(0x400280
                                                            00+0x05C)=0x1F4;
  211 000000B0 6030            STR              R0, [R6]
  212 000000B2         
  213 000000B2         ;Control PWM : active PWM Generator 0 (p1167): Enable+up
                       /down + Enable counter debug mod
  214 000000B2 4E51            LDR              R6, =PWM1CTL
  215 000000B4 6830            LDR              R0, [R6]    ;*(int *) (0x400280
                                                            00+0x40)= *(int *)(
                                                            0x40028000+0x40) | 
                                                            0x07;
  216 000000B6 F040 0007       ORR              R0, R0, #0x07
  217 000000BA 6030            STR              R0, [R6]
  218 000000BC         
  219 000000BC         ;;-----Fin config des PWMs
  220 000000BC         
  221 000000BC         ;PORT D OUTPUT pin0 (pwm)=pin1(direction)=pin2(slow deca
                       y)=pin5(12v enable)
  222 000000BC 4E54            LDR              R6, =GPIODIR_D
  223 000000BE 6830            LDR              R0, [R6]
  224 000000C0 F040 0027       ORR              R0, #(GPIO_0+GPIO_1+GPIO_2+GPIO
_5)
  225 000000C4 6030            STR              R0,[R6]
  226 000000C6         ;Port D, 2mA les meme
  227 000000C6 4E53            LDR              R6, =GPIODR2R_D ;
  228 000000C8 6830            LDR              R0, [R6]
  229 000000CA F040 0027       ORR              R0, #(GPIO_0+GPIO_1+GPIO_2+GPIO
_5)
  230 000000CE 6030            STR              R0,[R6]
  231 000000D0         ;Port D, Digital Enable
  232 000000D0 4E51            LDR              R6, =GPIODEN_D ;
  233 000000D2 6830            LDR              R0, [R6]
  234 000000D4 F040 0027       ORR              R0, #(GPIO_0+GPIO_1+GPIO_2+GPIO
_5)
  235 000000D8 6030            STR              R0,[R6]
  236 000000DA         ;Port D : mise à 1 de slow Decay et 12V et mise � 0 p
                       our dir et pwm
  237 000000DA 4E50            LDR              R6, =(GPIODATA_D+((GPIO_0+GPIO_
1+GPIO_2+GPIO_5)<<2))
  238 000000DC F04F 0024       MOV              R0, #(GPIO_2+GPIO_5) ; #0x24
  239 000000E0 6030            STR              R0,[R6]



ARM Macro Assembler    Page 8 


  240 000000E2         
  241 000000E2         ;MOT2, PH1 pour sens ENGINE ouput
  242 000000E2 4E4F            LDR              R6, =GPIODIR_H
  243 000000E4 F04F 0003       MOV              R0, #0x03   ;
  244 000000E8 6030            STR              R0,[R6]
  245 000000EA         ;Port H, 2mA les meme
  246 000000EA 4E4E            LDR              R6, =GPIODR2R_H
  247 000000EC F04F 0003       MOV              R0, #0x03
  248 000000F0 6030            STR              R0,[R6]
  249 000000F2         ;Port H, Digital Enable
  250 000000F2 4E4D            LDR              R6, =GPIODEN_H
  251 000000F4 F04F 0003       MOV              R0, #0x03
  252 000000F8 6030            STR              R0,[R6]
  253 000000FA         ;Port H : mise à 1 pour dir
  254 000000FA 4E4C            LDR              R6, =(GPIODATA_H +(GPIO_1<<2))
  255 000000FC F04F 0002       MOV              R0, #0x02
  256 00000100 6030            STR              R0,[R6]
  257 00000102         
  258 00000102 4770            BX               LR          ; FIN du sous progr
                                                            amme d'init.
  259 00000104         
  260 00000104         ;Enable PWM0 (bit 0) et PWM2 (bit 2) p1145
  261 00000104         ;Attention ici c'est les sorties PWM0 et PWM2
  262 00000104         ;qu'on controle, pas les blocks PWM0 et PWM1!!!
  263 00000104         __ENGINE_RIGHT_ON
  264 00000104         ;Enable sortie PWM0 (bit 0), p1145
  265 00000104 4E4A            LDR              R6, =PWMENABLE
  266 00000106 6830            LDR              R0, [R6]
  267 00000108 F040 0001       ORR              R0, #0x01   ;bit 0 = 1
  268 0000010C 6030            STR              R0, [R6]
  269 0000010E 4770            BX               LR
  270 00000110         
  271 00000110         __ENGINE_RIGHT_OFF
  272 00000110 4E47            LDR              R6, =PWMENABLE
  273 00000112 6830            LDR              R0, [R6]
  274 00000114 F000 000E       AND              R0, #0x0E   ;bit 0 = 0
  275 00000118 6030            STR              R0, [R6]
  276 0000011A 4770            BX               LR
  277 0000011C         
  278 0000011C         __ENGINE_LEFT_ON
  279 0000011C 4E44            LDR              R6, =PWMENABLE
  280 0000011E 6830            LDR              R0, [R6]
  281 00000120 F040 0004       ORR              R0, #0x04   ;bit 2 = 1
  282 00000124 6030            STR              R0, [R6]
  283 00000126 4770            BX               LR
  284 00000128         
  285 00000128         __ENGINE_LEFT_OFF
  286 00000128 4E41            LDR              R6, =PWMENABLE
  287 0000012A 6830            LDR              R0, [R6]
  288 0000012C F000 000B       AND              R0, #0x0B   ;bit 2 = 0
  289 00000130 6030            STR              R0, [R6]
  290 00000132 4770            BX               LR
  291 00000134         
  292 00000134         __ENGINE_LEFT_RIGHT_ON
  293 00000134 B541            PUSH             { R0, R6, LR}
  294 00000136 F7FF FFFE       BL               __ENGINE_LEFT_ON
  295 0000013A F7FF FFFE       BL               __ENGINE_RIGHT_ON
  296 0000013E BD41            POP              { R0, R6, PC}
  297 00000140         



ARM Macro Assembler    Page 9 


  298 00000140         __ENGINE_LEFT_RIGHT_OFF
  299 00000140 B541            PUSH             { R0, R6, LR}
  300 00000142 F7FF FFFE       BL               __ENGINE_LEFT_OFF
  301 00000146 F7FF FFFE       BL               __ENGINE_RIGHT_OFF
  302 0000014A BD41            POP              { R0, R6, PC}
  303 0000014C         
  304 0000014C         __ENGINE_RIGHT_BACK
  305 0000014C         ;Inverse Direction (GPIO_D1)
  306 0000014C 4E39            LDR              R6, =(GPIODATA_D+(GPIO_1<<2))
  307 0000014E F04F 0000       MOV              R0, #0
  308 00000152 6030            STR              R0,[R6]
  309 00000154 4770            BX               LR
  310 00000156         
  311 00000156         __ENGINE_RIGHT_FRONT
  312 00000156         ;Inverse Direction (GPIO_D1)
  313 00000156 4E37            LDR              R6, =(GPIODATA_D+(GPIO_1<<2))
  314 00000158 F04F 0002       MOV              R0, #2
  315 0000015C 6030            STR              R0,[R6]
  316 0000015E 4770            BX               LR
  317 00000160         
  318 00000160         __ENGINE_LEFT_BACK
  319 00000160         ;Inverse Direction (GPIO_D1)
  320 00000160 4E32            LDR              R6, =(GPIODATA_H+(GPIO_1<<2))
  321 00000162 F04F 0002       MOV              R0, #2      ; contraire du ENGI
                                                            NE RIGHT
  322 00000166 6030            STR              R0,[R6]
  323 00000168 4770            BX               LR
  324 0000016A         
  325 0000016A         __ENGINE_LEFT_FRONT
  326 0000016A         ;Inverse Direction (GPIO_D1)
  327 0000016A 4E30            LDR              R6, =(GPIODATA_H+(GPIO_1<<2))
  328 0000016C F04F 0000       MOV              R0, #0
  329 00000170 6030            STR              R0,[R6]
  330 00000172 4770            BX               LR
  331 00000174         
  332 00000174         __ENGINE_RIGHT_INVERSE
  333 00000174         ;Inverse Direction (GPIO_D1)
  334 00000174 4E2F            LDR              R6, =(GPIODATA_D+(GPIO_1<<2))
  335 00000176 6831            LDR              r1, [R6]
  336 00000178 F081 0002       EOR              R0, r1, #GPIO_1
  337 0000017C 6030            STR              R0,[R6]
  338 0000017E 4770            BX               LR
  339 00000180         
  340 00000180         __ENGINE_LEFT_INVERSE
  341 00000180         ;Inverse Direction (GPIO_D1)
  342 00000180 4E2A            LDR              R6, =(GPIODATA_H+(GPIO_1<<2))
  343 00000182 6831            LDR              r1, [R6]
  344 00000184 F081 0002       EOR              R0, r1, #GPIO_1
  345 00000188 6030            STR              R0,[R6]
  346 0000018A 4770            BX               LR
  347 0000018C         
  348 0000018C         __ENGINE_LEFT_RIGHT_FRONT
  349 0000018C B541            PUSH             { R0, R6, LR}
  350 0000018E F7FF FFFE       BL               __ENGINE_LEFT_FRONT
  351 00000192 F7FF FFFE       BL               __ENGINE_RIGHT_FRONT
  352 00000196 BD41            POP              { R0, R6, PC}
  353 00000198         
  354 00000198         __ENGINE_LEFT_RIGHT_BACK
  355 00000198 B541            PUSH             { R0, R6, LR}



ARM Macro Assembler    Page 10 


  356 0000019A F7FF FFFE       BL               __ENGINE_LEFT_BACK
  357 0000019E F7FF FFFE       BL               __ENGINE_RIGHT_BACK
  358 000001A2 BD41            POP              { R0, R6, PC}
  359 000001A4         
  360 000001A4         __ENGINE_LEFT_FRONT_RIGHT_BACK
  361 000001A4 B541            PUSH             { R0, R6, LR}
  362 000001A6 F7FF FFFE       BL               __ENGINE_LEFT_FRONT
  363 000001AA F7FF FFFE       BL               __ENGINE_RIGHT_BACK
  364 000001AE BD41            POP              { R0, R6, PC}
  365 000001B0         
  366 000001B0         
  367 000001B0         __ENGINE_LEFT_BACK_RIGHT_FRONT
  368 000001B0 B541            PUSH             { R0, R6, LR}
  369 000001B2 F7FF FFFE       BL               __ENGINE_LEFT_BACK
  370 000001B6 F7FF FFFE       BL               __ENGINE_RIGHT_FRONT
  371 000001BA BD41            POP              { R0, R6, PC}
  372 000001BC         
  373 000001BC         __ENGINE_LEFT_RIGHT_INVERSE
  374 000001BC B543            PUSH             { R0, R1, R6, LR}
  375 000001BE F7FF FFFE       BL               __ENGINE_LEFT_INVERSE
  376 000001C2 F7FF FFFE       BL               __ENGINE_RIGHT_INVERSE
  377 000001C6 BD43            POP              { R0, R1, R6, PC}
  378 000001C8         
  379 000001C8                 END
              400FE100 
              400FE108 
              4000752C 
              4002752C 
              40007420 
              40027420 
              40028040 
              40028060 
              40028064 
              40028050 
              40028058 
              4002805C 
              40028080 
              400280A0 
              400280A4 
              40028090 
              40028098 
              4002809C 
              40007400 
              40007500 
              4000751C 
              4000709C 
              40027400 
              40027500 
              4002751C 
              40027008 
              40028008 
              40007008 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M3 --apcs=interw
ork --depend=.\objects\rd_bv_config_moteur.d -o.\objects\rd_bv_config_moteur.o 
-I.\RTE\_Target_1 -ID:\ProgramFiles\Armv52\ARM\CMSIS\5.5.1\CMSIS\Core\Include -
ID:\ProgramFiles\Armv52\ARM\CMSIS\5.5.1\Device\ARM\ARMCM3\Include --predefine="
__EVAL SETA 1" --predefine="__UVISION_VERSION SETA 528" --predefine="_RTE_ SETA
 1" --predefine="ARMCM3 SETA 1" --list=.\listings\rd_bv_config_moteur.lst RD_BV
_CONFIG_MOTEUR.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

_CONFIG_ENGINE_ 00000000

Symbol: _CONFIG_ENGINE_
   Definitions
      At line 66 in file RD_BV_CONFIG_MOTEUR.s
   Uses
      None
Comment: _CONFIG_ENGINE_ unused
__ENGINE_INIT 00000000

Symbol: __ENGINE_INIT
   Definitions
      At line 90 in file RD_BV_CONFIG_MOTEUR.s
   Uses
      At line 70 in file RD_BV_CONFIG_MOTEUR.s
Comment: __ENGINE_INIT used once
__ENGINE_LEFT_BACK 00000160

Symbol: __ENGINE_LEFT_BACK
   Definitions
      At line 318 in file RD_BV_CONFIG_MOTEUR.s
   Uses
      At line 79 in file RD_BV_CONFIG_MOTEUR.s
      At line 356 in file RD_BV_CONFIG_MOTEUR.s
      At line 369 in file RD_BV_CONFIG_MOTEUR.s

__ENGINE_LEFT_BACK_RIGHT_FRONT 000001B0

Symbol: __ENGINE_LEFT_BACK_RIGHT_FRONT
   Definitions
      At line 367 in file RD_BV_CONFIG_MOTEUR.s
   Uses
      At line 85 in file RD_BV_CONFIG_MOTEUR.s
Comment: __ENGINE_LEFT_BACK_RIGHT_FRONT used once
__ENGINE_LEFT_FRONT 0000016A

Symbol: __ENGINE_LEFT_FRONT
   Definitions
      At line 325 in file RD_BV_CONFIG_MOTEUR.s
   Uses
      At line 78 in file RD_BV_CONFIG_MOTEUR.s
      At line 350 in file RD_BV_CONFIG_MOTEUR.s
      At line 362 in file RD_BV_CONFIG_MOTEUR.s

__ENGINE_LEFT_FRONT_RIGHT_BACK 000001A4

Symbol: __ENGINE_LEFT_FRONT_RIGHT_BACK
   Definitions
      At line 360 in file RD_BV_CONFIG_MOTEUR.s
   Uses
      At line 86 in file RD_BV_CONFIG_MOTEUR.s
Comment: __ENGINE_LEFT_FRONT_RIGHT_BACK used once
__ENGINE_LEFT_INVERSE 00000180

Symbol: __ENGINE_LEFT_INVERSE
   Definitions
      At line 340 in file RD_BV_CONFIG_MOTEUR.s
   Uses
      At line 80 in file RD_BV_CONFIG_MOTEUR.s



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

      At line 375 in file RD_BV_CONFIG_MOTEUR.s

__ENGINE_LEFT_OFF 00000128

Symbol: __ENGINE_LEFT_OFF
   Definitions
      At line 285 in file RD_BV_CONFIG_MOTEUR.s
   Uses
      At line 77 in file RD_BV_CONFIG_MOTEUR.s
      At line 300 in file RD_BV_CONFIG_MOTEUR.s

__ENGINE_LEFT_ON 0000011C

Symbol: __ENGINE_LEFT_ON
   Definitions
      At line 278 in file RD_BV_CONFIG_MOTEUR.s
   Uses
      At line 76 in file RD_BV_CONFIG_MOTEUR.s
      At line 294 in file RD_BV_CONFIG_MOTEUR.s

__ENGINE_LEFT_RIGHT_BACK 00000198

Symbol: __ENGINE_LEFT_RIGHT_BACK
   Definitions
      At line 354 in file RD_BV_CONFIG_MOTEUR.s
   Uses
      At line 84 in file RD_BV_CONFIG_MOTEUR.s
Comment: __ENGINE_LEFT_RIGHT_BACK used once
__ENGINE_LEFT_RIGHT_FRONT 0000018C

Symbol: __ENGINE_LEFT_RIGHT_FRONT
   Definitions
      At line 348 in file RD_BV_CONFIG_MOTEUR.s
   Uses
      At line 83 in file RD_BV_CONFIG_MOTEUR.s
Comment: __ENGINE_LEFT_RIGHT_FRONT used once
__ENGINE_LEFT_RIGHT_INVERSE 000001BC

Symbol: __ENGINE_LEFT_RIGHT_INVERSE
   Definitions
      At line 373 in file RD_BV_CONFIG_MOTEUR.s
   Uses
      At line 87 in file RD_BV_CONFIG_MOTEUR.s
Comment: __ENGINE_LEFT_RIGHT_INVERSE used once
__ENGINE_LEFT_RIGHT_OFF 00000140

Symbol: __ENGINE_LEFT_RIGHT_OFF
   Definitions
      At line 298 in file RD_BV_CONFIG_MOTEUR.s
   Uses
      At line 82 in file RD_BV_CONFIG_MOTEUR.s
Comment: __ENGINE_LEFT_RIGHT_OFF used once
__ENGINE_LEFT_RIGHT_ON 00000134

Symbol: __ENGINE_LEFT_RIGHT_ON
   Definitions
      At line 292 in file RD_BV_CONFIG_MOTEUR.s
   Uses
      At line 81 in file RD_BV_CONFIG_MOTEUR.s



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols

Comment: __ENGINE_LEFT_RIGHT_ON used once
__ENGINE_RIGHT_BACK 0000014C

Symbol: __ENGINE_RIGHT_BACK
   Definitions
      At line 304 in file RD_BV_CONFIG_MOTEUR.s
   Uses
      At line 74 in file RD_BV_CONFIG_MOTEUR.s
      At line 357 in file RD_BV_CONFIG_MOTEUR.s
      At line 363 in file RD_BV_CONFIG_MOTEUR.s

__ENGINE_RIGHT_FRONT 00000156

Symbol: __ENGINE_RIGHT_FRONT
   Definitions
      At line 311 in file RD_BV_CONFIG_MOTEUR.s
   Uses
      At line 73 in file RD_BV_CONFIG_MOTEUR.s
      At line 351 in file RD_BV_CONFIG_MOTEUR.s
      At line 370 in file RD_BV_CONFIG_MOTEUR.s

__ENGINE_RIGHT_INVERSE 00000174

Symbol: __ENGINE_RIGHT_INVERSE
   Definitions
      At line 332 in file RD_BV_CONFIG_MOTEUR.s
   Uses
      At line 75 in file RD_BV_CONFIG_MOTEUR.s
      At line 376 in file RD_BV_CONFIG_MOTEUR.s

__ENGINE_RIGHT_OFF 00000110

Symbol: __ENGINE_RIGHT_OFF
   Definitions
      At line 271 in file RD_BV_CONFIG_MOTEUR.s
   Uses
      At line 72 in file RD_BV_CONFIG_MOTEUR.s
      At line 301 in file RD_BV_CONFIG_MOTEUR.s

__ENGINE_RIGHT_ON 00000104

Symbol: __ENGINE_RIGHT_ON
   Definitions
      At line 263 in file RD_BV_CONFIG_MOTEUR.s
   Uses
      At line 71 in file RD_BV_CONFIG_MOTEUR.s
      At line 295 in file RD_BV_CONFIG_MOTEUR.s

19 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

GPIOAFSEL_D 40007420

Symbol: GPIOAFSEL_D
   Definitions
      At line 31 in file RD_BV_CONFIG_MOTEUR.s
   Uses
      At line 131 in file RD_BV_CONFIG_MOTEUR.s
Comment: GPIOAFSEL_D used once
GPIOAFSEL_H 40027420

Symbol: GPIOAFSEL_H
   Definitions
      At line 39 in file RD_BV_CONFIG_MOTEUR.s
   Uses
      At line 138 in file RD_BV_CONFIG_MOTEUR.s
Comment: GPIOAFSEL_H used once
GPIODATA_D 40007000

Symbol: GPIODATA_D
   Definitions
      At line 26 in file RD_BV_CONFIG_MOTEUR.s
   Uses
      At line 237 in file RD_BV_CONFIG_MOTEUR.s
      At line 306 in file RD_BV_CONFIG_MOTEUR.s
      At line 313 in file RD_BV_CONFIG_MOTEUR.s
      At line 334 in file RD_BV_CONFIG_MOTEUR.s

GPIODATA_H 40027000

Symbol: GPIODATA_H
   Definitions
      At line 34 in file RD_BV_CONFIG_MOTEUR.s
   Uses
      At line 254 in file RD_BV_CONFIG_MOTEUR.s
      At line 320 in file RD_BV_CONFIG_MOTEUR.s
      At line 327 in file RD_BV_CONFIG_MOTEUR.s
      At line 342 in file RD_BV_CONFIG_MOTEUR.s

GPIODEN_D 4000751C

Symbol: GPIODEN_D
   Definitions
      At line 29 in file RD_BV_CONFIG_MOTEUR.s
   Uses
      At line 232 in file RD_BV_CONFIG_MOTEUR.s
Comment: GPIODEN_D used once
GPIODEN_H 4002751C

Symbol: GPIODEN_H
   Definitions
      At line 37 in file RD_BV_CONFIG_MOTEUR.s
   Uses
      At line 250 in file RD_BV_CONFIG_MOTEUR.s
Comment: GPIODEN_H used once
GPIODIR_D 40007400

Symbol: GPIODIR_D
   Definitions
      At line 27 in file RD_BV_CONFIG_MOTEUR.s



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

   Uses
      At line 222 in file RD_BV_CONFIG_MOTEUR.s
Comment: GPIODIR_D used once
GPIODIR_H 40027400

Symbol: GPIODIR_H
   Definitions
      At line 35 in file RD_BV_CONFIG_MOTEUR.s
   Uses
      At line 242 in file RD_BV_CONFIG_MOTEUR.s
Comment: GPIODIR_H used once
GPIODR2R_D 40007500

Symbol: GPIODR2R_D
   Definitions
      At line 28 in file RD_BV_CONFIG_MOTEUR.s
   Uses
      At line 227 in file RD_BV_CONFIG_MOTEUR.s
Comment: GPIODR2R_D used once
GPIODR2R_H 40027500

Symbol: GPIODR2R_H
   Definitions
      At line 36 in file RD_BV_CONFIG_MOTEUR.s
   Uses
      At line 246 in file RD_BV_CONFIG_MOTEUR.s
Comment: GPIODR2R_H used once
GPIOPCTL_D 4000752C

Symbol: GPIOPCTL_D
   Definitions
      At line 30 in file RD_BV_CONFIG_MOTEUR.s
   Uses
      At line 117 in file RD_BV_CONFIG_MOTEUR.s
Comment: GPIOPCTL_D used once
GPIOPCTL_H 4002752C

Symbol: GPIOPCTL_H
   Definitions
      At line 38 in file RD_BV_CONFIG_MOTEUR.s
   Uses
      At line 125 in file RD_BV_CONFIG_MOTEUR.s
Comment: GPIOPCTL_H used once
GPIO_0 00000001

Symbol: GPIO_0
   Definitions
      At line 15 in file RD_BV_CONFIG_MOTEUR.s
   Uses
      At line 224 in file RD_BV_CONFIG_MOTEUR.s
      At line 229 in file RD_BV_CONFIG_MOTEUR.s
      At line 234 in file RD_BV_CONFIG_MOTEUR.s
      At line 237 in file RD_BV_CONFIG_MOTEUR.s

GPIO_1 00000002

Symbol: GPIO_1
   Definitions
      At line 16 in file RD_BV_CONFIG_MOTEUR.s



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Absolute symbols

   Uses
      At line 224 in file RD_BV_CONFIG_MOTEUR.s
      At line 229 in file RD_BV_CONFIG_MOTEUR.s
      At line 234 in file RD_BV_CONFIG_MOTEUR.s
      At line 237 in file RD_BV_CONFIG_MOTEUR.s
      At line 254 in file RD_BV_CONFIG_MOTEUR.s
      At line 306 in file RD_BV_CONFIG_MOTEUR.s
      At line 313 in file RD_BV_CONFIG_MOTEUR.s
      At line 320 in file RD_BV_CONFIG_MOTEUR.s
      At line 327 in file RD_BV_CONFIG_MOTEUR.s
      At line 334 in file RD_BV_CONFIG_MOTEUR.s
      At line 336 in file RD_BV_CONFIG_MOTEUR.s
      At line 342 in file RD_BV_CONFIG_MOTEUR.s
      At line 344 in file RD_BV_CONFIG_MOTEUR.s

GPIO_2 00000004

Symbol: GPIO_2
   Definitions
      At line 17 in file RD_BV_CONFIG_MOTEUR.s
   Uses
      At line 224 in file RD_BV_CONFIG_MOTEUR.s
      At line 229 in file RD_BV_CONFIG_MOTEUR.s
      At line 234 in file RD_BV_CONFIG_MOTEUR.s
      At line 237 in file RD_BV_CONFIG_MOTEUR.s
      At line 238 in file RD_BV_CONFIG_MOTEUR.s

GPIO_5 00000020

Symbol: GPIO_5
   Definitions
      At line 18 in file RD_BV_CONFIG_MOTEUR.s
   Uses
      At line 224 in file RD_BV_CONFIG_MOTEUR.s
      At line 229 in file RD_BV_CONFIG_MOTEUR.s
      At line 234 in file RD_BV_CONFIG_MOTEUR.s
      At line 237 in file RD_BV_CONFIG_MOTEUR.s
      At line 238 in file RD_BV_CONFIG_MOTEUR.s

PORTD_BASE 40007000

Symbol: PORTD_BASE
   Definitions
      At line 25 in file RD_BV_CONFIG_MOTEUR.s
   Uses
      At line 26 in file RD_BV_CONFIG_MOTEUR.s
      At line 27 in file RD_BV_CONFIG_MOTEUR.s
      At line 28 in file RD_BV_CONFIG_MOTEUR.s
      At line 29 in file RD_BV_CONFIG_MOTEUR.s
      At line 30 in file RD_BV_CONFIG_MOTEUR.s
      At line 31 in file RD_BV_CONFIG_MOTEUR.s

PORTH_BASE 40027000

Symbol: PORTH_BASE
   Definitions
      At line 33 in file RD_BV_CONFIG_MOTEUR.s
   Uses
      At line 34 in file RD_BV_CONFIG_MOTEUR.s



ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Absolute symbols

      At line 35 in file RD_BV_CONFIG_MOTEUR.s
      At line 36 in file RD_BV_CONFIG_MOTEUR.s
      At line 37 in file RD_BV_CONFIG_MOTEUR.s
      At line 38 in file RD_BV_CONFIG_MOTEUR.s
      At line 39 in file RD_BV_CONFIG_MOTEUR.s

PWM0CMPA 40028058

Symbol: PWM0CMPA
   Definitions
      At line 48 in file RD_BV_CONFIG_MOTEUR.s
   Uses
      At line 166 in file RD_BV_CONFIG_MOTEUR.s
Comment: PWM0CMPA used once
PWM0CMPB 4002805C

Symbol: PWM0CMPB
   Definitions
      At line 49 in file RD_BV_CONFIG_MOTEUR.s
   Uses
      At line 170 in file RD_BV_CONFIG_MOTEUR.s
Comment: PWM0CMPB used once
PWM0CTL 40028040

Symbol: PWM0CTL
   Definitions
      At line 46 in file RD_BV_CONFIG_MOTEUR.s
   Uses
      At line 146 in file RD_BV_CONFIG_MOTEUR.s
      At line 175 in file RD_BV_CONFIG_MOTEUR.s

PWM0GENA 40028060

Symbol: PWM0GENA
   Definitions
      At line 50 in file RD_BV_CONFIG_MOTEUR.s
   Uses
      At line 150 in file RD_BV_CONFIG_MOTEUR.s
Comment: PWM0GENA used once
PWM0GENB 40028064

Symbol: PWM0GENB
   Definitions
      At line 51 in file RD_BV_CONFIG_MOTEUR.s
   Uses
      At line 155 in file RD_BV_CONFIG_MOTEUR.s
Comment: PWM0GENB used once
PWM0LOAD 40028050

Symbol: PWM0LOAD
   Definitions
      At line 47 in file RD_BV_CONFIG_MOTEUR.s
   Uses
      At line 162 in file RD_BV_CONFIG_MOTEUR.s
Comment: PWM0LOAD used once
PWM1CMPA 40028098

Symbol: PWM1CMPA
   Definitions



ARM Macro Assembler    Page 5 Alphabetic symbol ordering
Absolute symbols

      At line 56 in file RD_BV_CONFIG_MOTEUR.s
   Uses
      At line 205 in file RD_BV_CONFIG_MOTEUR.s
Comment: PWM1CMPA used once
PWM1CMPB 4002809C

Symbol: PWM1CMPB
   Definitions
      At line 57 in file RD_BV_CONFIG_MOTEUR.s
   Uses
      At line 209 in file RD_BV_CONFIG_MOTEUR.s
Comment: PWM1CMPB used once
PWM1CTL 40028080

Symbol: PWM1CTL
   Definitions
      At line 54 in file RD_BV_CONFIG_MOTEUR.s
   Uses
      At line 183 in file RD_BV_CONFIG_MOTEUR.s
      At line 214 in file RD_BV_CONFIG_MOTEUR.s

PWM1GENA 400280A0

Symbol: PWM1GENA
   Definitions
      At line 58 in file RD_BV_CONFIG_MOTEUR.s
   Uses
      At line 187 in file RD_BV_CONFIG_MOTEUR.s
Comment: PWM1GENA used once
PWM1GENB 400280A4

Symbol: PWM1GENB
   Definitions
      At line 59 in file RD_BV_CONFIG_MOTEUR.s
   Uses
      At line 193 in file RD_BV_CONFIG_MOTEUR.s
Comment: PWM1GENB used once
PWM1LOAD 40028090

Symbol: PWM1LOAD
   Definitions
      At line 55 in file RD_BV_CONFIG_MOTEUR.s
   Uses
      At line 201 in file RD_BV_CONFIG_MOTEUR.s
Comment: PWM1LOAD used once
PWMENABLE 40028008

Symbol: PWMENABLE
   Definitions
      At line 43 in file RD_BV_CONFIG_MOTEUR.s
   Uses
      At line 265 in file RD_BV_CONFIG_MOTEUR.s
      At line 272 in file RD_BV_CONFIG_MOTEUR.s
      At line 279 in file RD_BV_CONFIG_MOTEUR.s
      At line 286 in file RD_BV_CONFIG_MOTEUR.s

PWM_BASE 40028000

Symbol: PWM_BASE



ARM Macro Assembler    Page 6 Alphabetic symbol ordering
Absolute symbols

   Definitions
      At line 42 in file RD_BV_CONFIG_MOTEUR.s
   Uses
      At line 43 in file RD_BV_CONFIG_MOTEUR.s
      At line 46 in file RD_BV_CONFIG_MOTEUR.s
      At line 47 in file RD_BV_CONFIG_MOTEUR.s
      At line 48 in file RD_BV_CONFIG_MOTEUR.s
      At line 49 in file RD_BV_CONFIG_MOTEUR.s
      At line 50 in file RD_BV_CONFIG_MOTEUR.s
      At line 51 in file RD_BV_CONFIG_MOTEUR.s
      At line 54 in file RD_BV_CONFIG_MOTEUR.s
      At line 55 in file RD_BV_CONFIG_MOTEUR.s
      At line 56 in file RD_BV_CONFIG_MOTEUR.s
      At line 57 in file RD_BV_CONFIG_MOTEUR.s
      At line 58 in file RD_BV_CONFIG_MOTEUR.s
      At line 59 in file RD_BV_CONFIG_MOTEUR.s

SYSCTL_RCGC0 400FE100

Symbol: SYSCTL_RCGC0
   Definitions
      At line 21 in file RD_BV_CONFIG_MOTEUR.s
   Uses
      At line 91 in file RD_BV_CONFIG_MOTEUR.s
Comment: SYSCTL_RCGC0 used once
SYSCTL_RCGC2 400FE108

Symbol: SYSCTL_RCGC2
   Definitions
      At line 22 in file RD_BV_CONFIG_MOTEUR.s
   Uses
      At line 100 in file RD_BV_CONFIG_MOTEUR.s
      At line 106 in file RD_BV_CONFIG_MOTEUR.s

VITESSE 00000192

Symbol: VITESSE
   Definitions
      At line 62 in file RD_BV_CONFIG_MOTEUR.s
   Uses
      At line 167 in file RD_BV_CONFIG_MOTEUR.s
      At line 206 in file RD_BV_CONFIG_MOTEUR.s

35 symbols
390 symbols in table
