


ARM Macro Assembler    Page 1 


    1 00000000         ;; RD BV - Evalbot (Cortex M3 de Texas Instrument);
    2 00000000         ; programme - Pilotage 2 ENGINEs Evalbot par PWM tout en
                        ASM (configure les pwms + GPIO)
    3 00000000         
    4 00000000         ;Les pages se réfèrent au datasheet lm3s9b92.pdf
    5 00000000         
    6 00000000         ;Cablage :
    7 00000000         ;pin 10/PD0/PWM0 => input PWM du pont en H DRV8801RT
    8 00000000         ;pin 11/PD1/PWM1 => input Phase_R  du pont en H DRV8801R
                       T
    9 00000000         ;pin 12/PD2   => input SlowDecay commune aux 2 ponts en 
                       H
   10 00000000         ;pin 98/PD5   => input Enable 12v du conv DC/DC
   11 00000000         ;pin 86/PH0/PWM2 => input PWM du 2nd pont en H
   12 00000000         ;pin 85/PH1/PWM3 => input Phase du 2nd pont en H
   13 00000000         
   14 00000000         ;; Hexa cORResponding values to pin numbers
   15 00000000 00000001 
                       GPIO_0  EQU              0x1
   16 00000000 00000002 
                       GPIO_1  EQU              0x2
   17 00000000 00000004 
                       GPIO_2  EQU              0x4
   18 00000000 00000008 
                       GPIO_3  EQU              0x08
   19 00000000 00000020 
                       GPIO_5  EQU              0x20
   20 00000000 00000040 
                       GPIO_6  EQU              0x40
   21 00000000 00000080 
                       GPIO_7  EQU              0x80
   22 00000000         
   23 00000000         ;; pour enable clock    0x400FE000
   24 00000000 400FE100 
                       SYSCTL_RCGC0
                               EQU              0x400FE100  ;SYSCTL_RCGC0: offs
                                                            et 0x100 (p271 data
                                                            sheet de lm3s9b92.p
                                                            df)
   25 00000000 400FE108 
                       SYSCTL_RCGC2
                               EQU              0x400FE108  ;SYSCTL_RCGC2: offs
                                                            et 0x108 (p291 data
                                                            sheet de lm3s9b92.p
                                                            df)
   26 00000000         
   27 00000000         ;; General-Purpose Input/Outputs (GPIO) configuration
   28 00000000 40007000 
                       PORTD_BASE
                               EQU              0x40007000
   29 00000000 40007000 
                       GPIODATA_D
                               EQU              PORTD_BASE
   30 00000000 40007400 
                       GPIODIR_D
                               EQU              PORTD_BASE+0x00000400
   31 00000000 40007500 
                       GPIODR2R_D
                               EQU              PORTD_BASE+0x00000500



ARM Macro Assembler    Page 2 


   32 00000000 4000751C 
                       GPIODEN_D
                               EQU              PORTD_BASE+0x0000051C
   33 00000000 4000752C 
                       GPIOPCTL_D
                               EQU              PORTD_BASE+0x0000052C ; GPIO Po
                                                            rt Control (GPIOPCT
                                                            L), offset 0x52C; p
                                                            444
   34 00000000 40007420 
                       GPIOAFSEL_D
                               EQU              PORTD_BASE+0x00000420 ; GPIO Al
                                                            ternate Function Se
                                                            lect (GPIOAFSEL), o
                                                            ffset 0x420; p426
   35 00000000         
   36 00000000 40027000 
                       PORTH_BASE
                               EQU              0x40027000
   37 00000000 40027000 
                       GPIODATA_H
                               EQU              PORTH_BASE
   38 00000000 40027400 
                       GPIODIR_H
                               EQU              PORTH_BASE+0x00000400
   39 00000000 40027500 
                       GPIODR2R_H
                               EQU              PORTH_BASE+0x00000500
   40 00000000 4002751C 
                       GPIODEN_H
                               EQU              PORTH_BASE+0x0000051C
   41 00000000 4002752C 
                       GPIOPCTL_H
                               EQU              PORTH_BASE+0x0000052C ; GPIO Po
                                                            rt Control (GPIOPCT
                                                            L), offset 0x52C; p
                                                            444
   42 00000000 40027420 
                       GPIOAFSEL_H
                               EQU              PORTH_BASE+0x00000420 ; GPIO Al
                                                            ternate Function Se
                                                            lect (GPIOAFSEL), o
                                                            ffset 0x420; p426
   43 00000000         
   44 00000000 4005C000 
                       GPIO_PORT_E_BASE
                               EQU              0x4005C000
   45 00000000 4005C000 
                       GPIODATA_E
                               EQU              GPIO_PORT_E_BASE
   46 00000000 4005C400 
                       GPIODIR_E
                               EQU              GPIO_PORT_E_BASE+0x00000400
   47 00000000 4005C500 
                       GPIODR2R_E
                               EQU              GPIO_PORT_E_BASE+0x00000500
   48 00000000 4005C51C 
                       GPIODEN_E
                               EQU              GPIO_PORT_E_BASE+0x0000051C



ARM Macro Assembler    Page 3 


   49 00000000 4005C52C 
                       GPIOPCTL_E
                               EQU              GPIO_PORT_E_BASE+0x0000052C ; G
                                                            PIO Port Control (G
                                                            PIOPCTL), offset 0x
                                                            52C; p444
   50 00000000 4005C420 
                       GPIOAFSEL_E
                               EQU              GPIO_PORT_E_BASE+0x00000420 ; G
                                                            PIO Alternate Funct
                                                            ion Select (GPIOAFS
                                                            EL), offset 0x420; 
                                                            p426
   51 00000000         
   52 00000000         ;; Pulse Width Modulator (PWM) configuration
   53 00000000 40028000 
                       PWM_BASE
                               EQU              0x040028000 ;BASE des Block PWM
                                                             p.1138
   54 00000000 40028008 
                       PWMENABLE
                               EQU              PWM_BASE+0x008 ; p1145
   55 00000000         
   56 00000000         ;Block PWM0 pour sorties PWM0 et PWM1 (ENGINE 1)
   57 00000000 40028040 
                       PWM0CTL EQU              PWM_BASE+0x040 ;p1167
   58 00000000 40028050 
                       PWM0LOAD
                               EQU              PWM_BASE+0x050
   59 00000000 40028058 
                       PWM0CMPA
                               EQU              PWM_BASE+0x058
   60 00000000 4002805C 
                       PWM0CMPB
                               EQU              PWM_BASE+0x05C
   61 00000000 40028060 
                       PWM0GENA
                               EQU              PWM_BASE+0x060
   62 00000000 40028064 
                       PWM0GENB
                               EQU              PWM_BASE+0x064
   63 00000000         
   64 00000000         ;Block PWM1 pour sorties PWM1 et PWM2 (ENGINE 2)
   65 00000000 40028080 
                       PWM1CTL EQU              PWM_BASE+0x080
   66 00000000 40028090 
                       PWM1LOAD
                               EQU              PWM_BASE+0x090
   67 00000000 40028098 
                       PWM1CMPA
                               EQU              PWM_BASE+0x098
   68 00000000 4002809C 
                       PWM1CMPB
                               EQU              PWM_BASE+0x09C
   69 00000000 400280A0 
                       PWM1GENA
                               EQU              PWM_BASE+0x0A0
   70 00000000 400280A4 
                       PWM1GENB



ARM Macro Assembler    Page 4 


                               EQU              PWM_BASE+0x0A4
   71 00000000         
   72 00000000         ;;Quadrature Encoder Interface (QEI) configuration (p120
                       4)
   73 00000000 4002C000 
                       QEI_0   EQU              0x4002C000
   74 00000000 4002D000 
                       QEI_1   EQU              0x4002D000
   75 00000000         
   76 00000000 00000004 
                       PortE_R_QEI_A
                               EQU              GPIO_2      ;(0000 0100)
   77 00000000 00000008 
                       PortE_L_QEI_A
                               EQU              GPIO_3      ;(0000 1000)
   78 00000000 0000000C 
                       PortE_LR_QEI_A
                               EQU              GPIO_2+GPIO_3 ;(0000 1100)
   79 00000000         
   80 00000000         ;0x1A2
   81 00000000 00000192 
                       VITESSE EQU              0x192       ; Valeures plus pet
                                                            ites => Vitesse plu
                                                            s rapide exemple 0x
                                                            192
   82 00000000         ; Valeures plus grANDes => Vitesse moins rapide exemple 
                       0x1B2
   83 00000000         
   84 00000000         
   85 00000000                 AREA             _CONFIG_ENGINE_, CODE, READONLY
   86 00000000                 ENTRY
   87 00000000         
   88 00000000         ;; The EXPORT commAND specifies that a symbol can be acc
                       essed by other shared objects or executables.
   89 00000000                 EXPORT           __ENGINE_INIT
   90 00000000                 EXPORT           __ENGINE_RIGHT_ON
   91 00000000                 EXPORT           __ENGINE_RIGHT_OFF
   92 00000000                 EXPORT           __ENGINE_RIGHT_FRONT
   93 00000000                 EXPORT           __ENGINE_RIGHT_BACK
   94 00000000                 EXPORT           __ENGINE_RIGHT_INVERSE
   95 00000000                 EXPORT           __ENGINE_LEFT_ON
   96 00000000                 EXPORT           __ENGINE_LEFT_OFF
   97 00000000                 EXPORT           __ENGINE_LEFT_FRONT
   98 00000000                 EXPORT           __ENGINE_LEFT_BACK
   99 00000000                 EXPORT           __ENGINE_LEFT_INVERSE
  100 00000000                 EXPORT           __ENGINE_LEFT_RIGHT_ON
  101 00000000                 EXPORT           __ENGINE_LEFT_RIGHT_OFF
  102 00000000                 EXPORT           __ENGINE_LEFT_RIGHT_FRONT
  103 00000000                 EXPORT           __ENGINE_LEFT_RIGHT_BACK
  104 00000000                 EXPORT           __ENGINE_LEFT_BACK_RIGHT_FRONT
  105 00000000                 EXPORT           __ENGINE_LEFT_FRONT_RIGHT_BACK
  106 00000000                 EXPORT           __ENGINE_LEFT_RIGHT_INVERSE
  107 00000000         
  108 00000000         
  109 00000000         __ENGINE_INIT
  110 00000000 4E78            LDR              R6, = SYSCTL_RCGC0
  111 00000002 6830            LDR              R0, [R6]
  112 00000004 F440 1080       ORR              R0, R0, #0x00100000 ;;bit 20 = 
                                                            PWM recoit clock: O



ARM Macro Assembler    Page 5 


                                                            N (p271)
  113 00000008 6030            STR              R0, [R6]
  114 0000000A         
  115 0000000A 4E76            LDR              R6, = SYSCTL_RCGC0
  116 0000000C 6830            LDR              R0, [R6]
  117 0000000E F440 7080       ORR              R0, R0, #0x00000100 ;;bit 04 = 
                                                            QEI recoit clock: O
                                                            N (p1209)
  118 00000012 6030            STR              R0, [R6]
  119 00000014         
  120 00000014         ;ROM_SysCtlPWMClockSet(SYSCTL_PWMDIV_1);PWM clock is pro
                       cessor clock /1
  121 00000014         ;Je ne fais rien car par defaut = OK!!
  122 00000014         ;*(int *) (0x400FE060)= *(int *)(0x4
  123 00000014         ;RCGC2 :  Enable port D GPIO(p291 ) car ENGINE RIGHT sur
                        port D
  124 00000014 4E74            LDR              R6, = SYSCTL_RCGC2
  125 00000016 6830            LDR              R0, [R6]
  126 00000018 F040 0008       ORR              R0, R0, #0x08 ;; Enable port D 
                                                            GPIO
  127 0000001C 6030            STR              R0, [R6]
  128 0000001E         
  129 0000001E         ;MOT2 : RCGC2 :  Enable port H GPIO  (2eme ENGINEs)
  130 0000001E 4E72            LDR              R6, = SYSCTL_RCGC2
  131 00000020 6830            LDR              R0, [R6]
  132 00000022 F040 0080       ORR              R0, R0, #0x80 ;; Enable port H 
                                                            GPIO
  133 00000026 6030            STR              R0, [R6]
  134 00000028         
  135 00000028         ;RCGC2 :  Enable port E GPIO  (QEI (p1204))
  136 00000028 4E6F            LDR              R6, = SYSCTL_RCGC2
  137 0000002A 6830            LDR              R0, [R6]
  138 0000002C F040 0010       ORR              R0, R0, #0x10 ;; Enable port E 
                                                            GPIO :(0000 0000) /
                                                             (HGFE DCBA)
  139 00000030 6030            STR              R0, [R6]
  140 00000032         
  141 00000032 BF00            NOP
  142 00000034 BF00            NOP
  143 00000036 BF00            NOP
  144 00000038         
  145 00000038         ;;Pin muxing pour PWM, port D, reg. GPIOPCTL(p444), 4bit
                       s de PCM0=0001<=>PWM (voir p1261)
  146 00000038         ;;il faut mettre 1 pour avoir PD0=PWM0 et PD1=PWM1
  147 00000038 4E6C            LDR              R6, = GPIOPCTL_D
  148 0000003A         ;LDR R0, [R6]   ;; *(int *)(0x40007000+0x0000052C)=1;
  149 0000003A         ;ORR R0, R0, #0x01 ;; Port D, pin 1 = PWM
  150 0000003A F04F 0001       MOV              R0, #0x01
  151 0000003E 6030            STR              R0, [R6]
  152 00000040         
  153 00000040         ;;MOT2 : Pin muxing pour PWM, port H, reg. GPIOPCTL(p444
                       ), 4bits de PCM0=0001<=>PWM (voir p1261)
  154 00000040         ;;il faut mettre mux = 2 pour avoir PH0=PWM2 et PH1=PWM3
                       
  155 00000040 4E6B            LDR              R6, = GPIOPCTL_H
  156 00000042 F04F 0002       MOV              R0, #0x02
  157 00000046 6030            STR              R0, [R6]
  158 00000048         
  159 00000048         ;;In port E GPIOPCTL(p444), We need the PHA0 and PHB0 se



ARM Macro Assembler    Page 6 


                       t in PORT E 2 & 3
  160 00000048         ;;We need to put mux = 4 to have PE0=PHA0 & PE1=PHA1
  161 00000048 4E6A            LDR              R6, = GPIOPCTL_E
  162 0000004A F04F 0004       MOV              R0, #0x04
  163 0000004E 6030            STR              R0, [R6]
  164 00000050         
  165 00000050         ;;Alternate Function Select (p 426), PD0 utilise alernat
                       e fonction (PWM au dessus)
  166 00000050         ;;donc PD0 = 1
  167 00000050 4E69            LDR              R6, =GPIOAFSEL_D
  168 00000052 6830            LDR              R0, [R6]    ;*(int *)(0x4000700
                                                            0+0x00000420)= *(in
                                                            t *)(0x40007000+0x0
                                                            0000420) | 0x000000
                                                            01;
  169 00000054 F040 0001       ORR              R0, R0, #0x01 ;
  170 00000058 6030            STR              R0, [R6]
  171 0000005A         
  172 0000005A         ;;MOT2 : Alternate Function Select (p 426), PH0 utilise 
                       PWM donc Alternate funct
  173 0000005A         ;;donc PH0 = 1
  174 0000005A 4E68            LDR              R6, =GPIOAFSEL_H
  175 0000005C 6830            LDR              R0, [R6]    ;*(int *)(0x4000700
                                                            0+0x00000420)= *(in
                                                            t *)(0x40007000+0x0
                                                            0000420) | 0x000000
                                                            01;
  176 0000005E F040 0001       ORR              R0, R0, #0x01 ;
  177 00000062 6030            STR              R0, [R6]
  178 00000064         
  179 00000064         ;Alternate Function Select (p 426), PE2 et PE3 utilise Q
                       EI so Alternate funct
  180 00000064         ;;donc PE2 et PE3 = 1
  181 00000064         ;LDR R6, =GPIOAFSEL_E
  182 00000064         ;LDR R0, [R6]
  183 00000064         ;ORR R0, #0x01
  184 00000064         ;STR R0, [R6]
  185 00000064         
  186 00000064         ;;-----------PWM0 pour ENGINE 1 connect� � PD0
  187 00000064         ;;PWM0 produit PWM0 et PWM1 output
  188 00000064         ;;Config Modes PWM0 + mode GenA + mode GenB
  189 00000064 4E66            LDR              R6, = PWM0CTL
  190 00000066 F04F 0002       MOV              R0, #2      ;Mode up-down-up-do
                                                            wn, pas synchro
  191 0000006A 6030            STR              R0, [R6]
  192 0000006C         
  193 0000006C 4E65            LDR              R6, =PWM0GENA ;en decomptage, q
                                                            d comparateurA = co
                                                            mpteur => sortie pw
                                                            mA=0
  194 0000006E         ;en comptage croissant, qd comparateurA = compteur => so
                       rtie pwmA=1
  195 0000006E F04F 00B0       MOV              R0, #0x0B0  ;0B0=10110000 => AC
                                                            TCMPBD=00 (B down:r
                                                            ien), ACTCMPBU=00(B
                                                             up rien)
  196 00000072 6030            STR              R0, [R6]    ;ACTCMPAD=10 (A dow
                                                            n:pwmA low), ACTCMP
                                                            AU=11 (A up:pwmA hi



ARM Macro Assembler    Page 7 


                                                            gh) , ACTLOAD=00,AC
                                                            TZERO=00
  197 00000074         
  198 00000074 4E64            LDR              R6, =PWM0GENB ;en comptage croi
                                                            ssant, qd comparate
                                                            urB = compteur => s
                                                            ortie pwmA=1
  199 00000076 F44F 6030       MOV              R0, #0x0B00 ;en decomptage, qd 
                                                            comparateurB = comp
                                                            teur => sortie pwmB
                                                            =0
  200 0000007A 6030            STR              R0, [R6]
  201 0000007C         ;Config Compteur, comparateur A et comparateur B
  202 0000007C         ;;#define PWM_PERIOD (ROM_SysCtlClockGet() / 16000),
  203 0000007C         ;;en mesure : SysCtlClockGet=0F42400h, /16=0x3E8,
  204 0000007C         ;;on divise par 2 car ENGINE 6v sur alim 12v
  205 0000007C 4E63            LDR              R6, =PWM0LOAD ;PWM0LOAD=periode
                                                            /2 =0x1F4
  206 0000007E F44F 70FA       MOV              R0, #0x1F4
  207 00000082 6030            STR              R0,[R6]
  208 00000084         
  209 00000084 4E62            LDR              R6, =PWM0CMPA ;Valeur rapport c
                                                            yclique : pour 10% 
                                                            => 1C2h si clock = 
                                                            0F42400
  210 00000086 F44F 70C9       MOV              R0, #VITESSE
  211 0000008A 6030            STR              R0, [R6]
  212 0000008C         
  213 0000008C 4E61            LDR              R6, =PWM0CMPB ;PWM0CMPB recoit 
                                                            meme valeur. (rappo
                                                            rt cyclique depend 
                                                            de CMPA)
  214 0000008E F44F 70FA       MOV              R0, #0x1F4
  215 00000092 6030            STR              R0, [R6]
  216 00000094         
  217 00000094         ;Control PWM : active PWM Generator 0 (p1167): Enable+up
                       /down + Enable counter debug mod
  218 00000094 4E5A            LDR              R6, =PWM0CTL
  219 00000096 6830            LDR              R0, [R6]
  220 00000098 F040 0007       ORR              R0, R0, #0x07
  221 0000009C 6030            STR              R0, [R6]
  222 0000009E         
  223 0000009E         ;;-----------PWM2 pour ENGINE 2 connect� � PH0
  224 0000009E         ;;PWM1block produit PWM2 et PWM3 output
  225 0000009E         ;;Config Modes PWM2 + mode GenA + mode GenB
  226 0000009E 4E5E            LDR              R6, = PWM1CTL
  227 000000A0 F04F 0002       MOV              R0, #2      ;Mode up-down-up-do
                                                            wn, pas synchro
  228 000000A4 6030            STR              R0, [R6]    ;*(int *)(0x4002800
                                                            0+0x040)=2;
  229 000000A6         
  230 000000A6 4E5D            LDR              R6, =PWM1GENA ;en decomptage, q
                                                            d comparateurA = co
                                                            mpteur => sortie pw
                                                            mA=0
  231 000000A8         ;en comptage croissant, qd comparateurA = compteur => so
                       rtie pwmA=1
  232 000000A8 F04F 00B0       MOV              R0, #0x0B0  ;0B0=10110000 => AC
                                                            TCMPBD=00 (B down:r



ARM Macro Assembler    Page 8 


                                                            ien), ACTCMPBU=00(B
                                                             up rien)
  233 000000AC 6030            STR              R0, [R6]    ;ACTCMPAD=10 (A dow
                                                            n:pwmA low), ACTCMP
                                                            AU=11 (A up:pwmA hi
                                                            gh) , ACTLOAD=00,AC
                                                            TZERO=00
  234 000000AE         
  235 000000AE         ;*(int *)(0x40028000+0x060)=0x0B0; //
  236 000000AE 4E5C            LDR              R6, =PWM1GENB ;*(int *)(0x40028
                                                            000+0x064)=0x0B00;
  237 000000B0 F44F 6030       MOV              R0, #0x0B00 ;en decomptage, qd 
                                                            comparateurB = comp
                                                            teur => sortie pwmB
                                                            =0
  238 000000B4 6030            STR              R0, [R6]    ;en comptage croiss
                                                            ant, qd comparateur
                                                            B = compteur => sor
                                                            tie pwmA=1
  239 000000B6         ;Config Compteur, comparateur A et comparateur B
  240 000000B6         ;;#define PWM_PERIOD (ROM_SysCtlClockGet() / 16000),
  241 000000B6         ;;en mesure : SysCtlClockGet=0F42400h, /16=0x3E8,
  242 000000B6         ;;on divise par 2 car ENGINE 6v sur alim 12v
  243 000000B6         ;*(int *)(0x40028000+0x050)=0x1F4; //PWM0LOAD=periode/2 
                       =0x1F4
  244 000000B6 4E5B            LDR              R6, =PWM1LOAD
  245 000000B8 F44F 70FA       MOV              R0, #0x1F4
  246 000000BC 6030            STR              R0,[R6]
  247 000000BE         
  248 000000BE 4E5A            LDR              R6, =PWM1CMPA ;Valeur rapport c
                                                            yclique : pour 10% 
                                                            => 1C2h si clock = 
                                                            0F42400
  249 000000C0 F44F 70C9       MOV              R0, #VITESSE
  250 000000C4 6030            STR              R0, [R6]    ;*(int *)(0x4002800
                                                            0+0x058)=0x01C2;
  251 000000C6         
  252 000000C6 4E59            LDR              R6, =PWM1CMPB ;PWM0CMPB recoit 
                                                            meme valeur. (CMPA 
                                                            depend du rapport c
                                                            yclique)
  253 000000C8 F44F 70FA       MOV              R0, #0x1F4  ; *(int *)(0x400280
                                                            00+0x05C)=0x1F4;
  254 000000CC 6030            STR              R0, [R6]
  255 000000CE         
  256 000000CE         ;Control PWM : active PWM Generator 0 (p1167): Enable+up
                       /down + Enable counter debug mod
  257 000000CE 4E52            LDR              R6, =PWM1CTL
  258 000000D0 6830            LDR              R0, [R6]    ;*(int *) (0x400280
                                                            00+0x40)= *(int *)(
                                                            0x40028000+0x40) | 
                                                            0x07;
  259 000000D2 F040 0007       ORR              R0, R0, #0x07
  260 000000D6 6030            STR              R0, [R6]
  261 000000D8         
  262 000000D8         ;;-----Fin config des PWMs
  263 000000D8         
  264 000000D8         ;PORT D OUTPUT pin0 (pwm)=pin1(direction)=pin2(slow deca
                       y)=pin5(12v enable)



ARM Macro Assembler    Page 9 


  265 000000D8 4E55            LDR              R6, =GPIODIR_D
  266 000000DA 6830            LDR              R0, [R6]
  267 000000DC F040 0027       ORR              R0, #(GPIO_0+GPIO_1+GPIO_2+GPIO
_5)
  268 000000E0 6030            STR              R0,[R6]
  269 000000E2         ;Port D, 2mA les meme
  270 000000E2 4E54            LDR              R6, =GPIODR2R_D ;
  271 000000E4 6830            LDR              R0, [R6]
  272 000000E6 F040 0027       ORR              R0, #(GPIO_0+GPIO_1+GPIO_2+GPIO
_5)
  273 000000EA 6030            STR              R0,[R6]
  274 000000EC         ;Port D, Digital Enable
  275 000000EC 4E52            LDR              R6, =GPIODEN_D ;
  276 000000EE 6830            LDR              R0, [R6]
  277 000000F0 F040 0027       ORR              R0, #(GPIO_0+GPIO_1+GPIO_2+GPIO
_5)
  278 000000F4 6030            STR              R0,[R6]
  279 000000F6         ;Port D : mise à 1 de slow Decay et 12V et mise � 0 p
                       our dir et pwm
  280 000000F6 4E51            LDR              R6, =(GPIODATA_D+((GPIO_0+GPIO_
1+GPIO_2+GPIO_5)<<2))
  281 000000F8 F04F 0024       MOV              R0, #(GPIO_2+GPIO_5) ; #0x24
  282 000000FC 6030            STR              R0,[R6]
  283 000000FE         
  284 000000FE         ;MOT2, PH1 pour sens ENGINE ouput
  285 000000FE 4E50            LDR              R6, =GPIODIR_H
  286 00000100 F04F 0003       MOV              R0, #0x03   ;
  287 00000104 6030            STR              R0,[R6]
  288 00000106         ;Port H, 2mA les meme
  289 00000106 4E4F            LDR              R6, =GPIODR2R_H
  290 00000108 F04F 0003       MOV              R0, #0x03
  291 0000010C 6030            STR              R0,[R6]
  292 0000010E         ;Port H, Digital Enable
  293 0000010E 4E4E            LDR              R6, =GPIODEN_H
  294 00000110 F04F 0003       MOV              R0, #0x03
  295 00000114 6030            STR              R0,[R6]
  296 00000116         ;Port H : mise à 1 pour dir
  297 00000116 4E4D            LDR              R6, =(GPIODATA_H +(GPIO_1<<2))
  298 00000118 F04F 0002       MOV              R0, #0x02
  299 0000011C 6030            STR              R0,[R6]
  300 0000011E         
  301 0000011E         ;;InfraLed Configuration
  302 0000011E         
  303 0000011E         ;LDR R6, =GPIODIR_E    ;; 1 Pin du portF en sortie (broc
                       he 4 et 5 : 00110000)
  304 0000011E         ;LDR R0, [R6]
  305 0000011E         ;ORR R0, #GPIO_6
  306 0000011E         ;STR R0, [R6]
  307 0000011E         
  308 0000011E         ;LDR R6, =GPIODEN_E ;; Enable Digital Function
  309 0000011E         ;LDR R0, [R6]
  310 0000011E         ;ORR R0, #GPIO_6
  311 0000011E         ;STR R0, [R6]
  312 0000011E         
  313 0000011E         ;LDR R6, =GPIODR2R_E ;; Choix de l'intensite de sortie (
                       2mA)
  314 0000011E         ;LDR R0, [R6]
  315 0000011E         ;ORR R0, #GPIO_6
  316 0000011E         ;STR R0, [R6]



ARM Macro Assembler    Page 10 


  317 0000011E         
  318 0000011E         ;LDR R4, =GPIO_PORT_E_BASE + (GPIO_6<<2)  ;; @data Regis
                       ter = @base + (mask<<2) ==> LED1
  319 0000011E         ;MOV R2, #GPIO_6
  320 0000011E         ;ORR R2, R4
  321 0000011E         ;STR R2, [R4]
  322 0000011E         
  323 0000011E 4770            BX               LR          ; FIN du sous progr
                                                            amme d'init.
  324 00000120         
  325 00000120         ;Enable PWM0 (bit 0) et PWM2 (bit 2) p1145
  326 00000120         ;Attention ici c'est les sorties PWM0 et PWM2
  327 00000120         ;qu'on controle, pas les blocks PWM0 et PWM1!!!
  328 00000120         __ENGINE_RIGHT_ON
  329 00000120         ;Enable sortie PWM0 (bit 0), p1145
  330 00000120 4E4B            LDR              R6, =PWMENABLE
  331 00000122 6830            LDR              R0, [R6]
  332 00000124 F040 0001       ORR              R0, #0x01   ;bit 0 = 1
  333 00000128 6030            STR              R0, [R6]
  334 0000012A 4770            BX               LR
  335 0000012C         
  336 0000012C         __ENGINE_RIGHT_OFF
  337 0000012C 4E48            LDR              R6, =PWMENABLE
  338 0000012E 6830            LDR              R0, [R6]
  339 00000130 F000 000E       AND              R0, #0x0E   ;bit 0 = 0
  340 00000134 6030            STR              R0, [R6]
  341 00000136 4770            BX               LR
  342 00000138         
  343 00000138         __ENGINE_LEFT_ON
  344 00000138 4E45            LDR              R6, =PWMENABLE
  345 0000013A 6830            LDR              R0, [R6]
  346 0000013C F040 0004       ORR              R0, #0x04   ;bit 2 = 1
  347 00000140 6030            STR              R0, [R6]
  348 00000142 4770            BX               LR
  349 00000144         
  350 00000144         __ENGINE_LEFT_OFF
  351 00000144 4E42            LDR              R6, =PWMENABLE
  352 00000146 6830            LDR              R0, [R6]
  353 00000148 F000 000B       AND              R0, #0x0B   ;bit 2 = 0
  354 0000014C 6030            STR              R0, [R6]
  355 0000014E 4770            BX               LR
  356 00000150         
  357 00000150         __ENGINE_LEFT_RIGHT_ON
  358 00000150 B541            PUSH             { R0, R6, LR}
  359 00000152 F7FF FFFE       BL               __ENGINE_LEFT_ON
  360 00000156 F7FF FFFE       BL               __ENGINE_RIGHT_ON
  361 0000015A BD41            POP              { R0, R6, PC}
  362 0000015C         
  363 0000015C         __ENGINE_LEFT_RIGHT_OFF
  364 0000015C B541            PUSH             { R0, R6, LR}
  365 0000015E F7FF FFFE       BL               __ENGINE_LEFT_OFF
  366 00000162 F7FF FFFE       BL               __ENGINE_RIGHT_OFF
  367 00000166 BD41            POP              { R0, R6, PC}
  368 00000168         
  369 00000168         __ENGINE_RIGHT_BACK
  370 00000168         ;Inverse Direction (GPIO_D1)
  371 00000168 4E3A            LDR              R6, =(GPIODATA_D+(GPIO_1<<2))
  372 0000016A F04F 0000       MOV              R0, #0
  373 0000016E 6030            STR              R0,[R6]



ARM Macro Assembler    Page 11 


  374 00000170 4770            BX               LR
  375 00000172         
  376 00000172         __ENGINE_RIGHT_FRONT
  377 00000172         ;Inverse Direction (GPIO_D1)
  378 00000172 4E38            LDR              R6, =(GPIODATA_D+(GPIO_1<<2))
  379 00000174 F04F 0002       MOV              R0, #2
  380 00000178 6030            STR              R0,[R6]
  381 0000017A 4770            BX               LR
  382 0000017C         
  383 0000017C         __ENGINE_LEFT_BACK
  384 0000017C         ;Inverse Direction (GPIO_D1)
  385 0000017C 4E33            LDR              R6, =(GPIODATA_H+(GPIO_1<<2))
  386 0000017E F04F 0002       MOV              R0, #2      ; contraire du ENGI
                                                            NE RIGHT
  387 00000182 6030            STR              R0,[R6]
  388 00000184 4770            BX               LR
  389 00000186         
  390 00000186         __ENGINE_LEFT_FRONT
  391 00000186         ;Inverse Direction (GPIO_D1)
  392 00000186 4E31            LDR              R6, =(GPIODATA_H+(GPIO_1<<2))
  393 00000188 F04F 0000       MOV              R0, #0
  394 0000018C 6030            STR              R0,[R6]
  395 0000018E 4770            BX               LR
  396 00000190         
  397 00000190         __ENGINE_RIGHT_INVERSE
  398 00000190         ;Inverse Direction (GPIO_D1)
  399 00000190 4E30            LDR              R6, =(GPIODATA_D+(GPIO_1<<2))
  400 00000192 6831            LDR              r1, [R6]
  401 00000194 F081 0002       EOR              R0, r1, #GPIO_1
  402 00000198 6030            STR              R0,[R6]
  403 0000019A 4770            BX               LR
  404 0000019C         
  405 0000019C         __ENGINE_LEFT_INVERSE
  406 0000019C         ;Inverse Direction (GPIO_D1)
  407 0000019C 4E2B            LDR              R6, =(GPIODATA_H+(GPIO_1<<2))
  408 0000019E 6831            LDR              r1, [R6]
  409 000001A0 F081 0002       EOR              R0, r1, #GPIO_1
  410 000001A4 6030            STR              R0,[R6]
  411 000001A6 4770            BX               LR
  412 000001A8         
  413 000001A8         __ENGINE_LEFT_RIGHT_FRONT
  414 000001A8 B541            PUSH             { R0, R6, LR}
  415 000001AA F7FF FFFE       BL               __ENGINE_LEFT_FRONT
  416 000001AE F7FF FFFE       BL               __ENGINE_RIGHT_FRONT
  417 000001B2 BD41            POP              { R0, R6, PC}
  418 000001B4         
  419 000001B4         __ENGINE_LEFT_RIGHT_BACK
  420 000001B4 B541            PUSH             { R0, R6, LR}
  421 000001B6 F7FF FFFE       BL               __ENGINE_LEFT_BACK
  422 000001BA F7FF FFFE       BL               __ENGINE_RIGHT_BACK
  423 000001BE BD41            POP              { R0, R6, PC}
  424 000001C0         
  425 000001C0         __ENGINE_LEFT_FRONT_RIGHT_BACK
  426 000001C0 B541            PUSH             { R0, R6, LR}
  427 000001C2 F7FF FFFE       BL               __ENGINE_LEFT_FRONT
  428 000001C6 F7FF FFFE       BL               __ENGINE_RIGHT_BACK
  429 000001CA BD41            POP              { R0, R6, PC}
  430 000001CC         
  431 000001CC         



ARM Macro Assembler    Page 12 


  432 000001CC         __ENGINE_LEFT_BACK_RIGHT_FRONT
  433 000001CC B541            PUSH             { R0, R6, LR}
  434 000001CE F7FF FFFE       BL               __ENGINE_LEFT_BACK
  435 000001D2 F7FF FFFE       BL               __ENGINE_RIGHT_FRONT
  436 000001D6 BD41            POP              { R0, R6, PC}
  437 000001D8         
  438 000001D8         __ENGINE_LEFT_RIGHT_INVERSE
  439 000001D8 B543            PUSH             { R0, R1, R6, LR}
  440 000001DA F7FF FFFE       BL               __ENGINE_LEFT_INVERSE
  441 000001DE F7FF FFFE       BL               __ENGINE_RIGHT_INVERSE
  442 000001E2 BD43            POP              { R0, R1, R6, PC}
  443 000001E4         
  444 000001E4                 END
              400FE100 
              400FE108 
              4000752C 
              4002752C 
              4005C52C 
              40007420 
              40027420 
              40028040 
              40028060 
              40028064 
              40028050 
              40028058 
              4002805C 
              40028080 
              400280A0 
              400280A4 
              40028090 
              40028098 
              4002809C 
              40007400 
              40007500 
              4000751C 
              4000709C 
              40027400 
              40027500 
              4002751C 
              40027008 
              40028008 
              40007008 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M3 --apcs=interw
ork --depend=.\objects\rd_bv_config_moteur.d -o.\objects\rd_bv_config_moteur.o 
-I.\RTE\_Target_1 -ID:\ProgramFiles\Armv52\ARM\CMSIS\5.5.1\CMSIS\Core\Include -
ID:\ProgramFiles\Armv52\ARM\CMSIS\5.5.1\Device\ARM\ARMCM3\Include --predefine="
__EVAL SETA 1" --predefine="__UVISION_VERSION SETA 528" --predefine="_RTE_ SETA
 1" --predefine="ARMCM3 SETA 1" --list=.\listings\rd_bv_config_moteur.lst RD_BV
_CONFIG_MOTEUR.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

_CONFIG_ENGINE_ 00000000

Symbol: _CONFIG_ENGINE_
   Definitions
      At line 85 in file RD_BV_CONFIG_MOTEUR.s
   Uses
      None
Comment: _CONFIG_ENGINE_ unused
__ENGINE_INIT 00000000

Symbol: __ENGINE_INIT
   Definitions
      At line 109 in file RD_BV_CONFIG_MOTEUR.s
   Uses
      At line 89 in file RD_BV_CONFIG_MOTEUR.s
Comment: __ENGINE_INIT used once
__ENGINE_LEFT_BACK 0000017C

Symbol: __ENGINE_LEFT_BACK
   Definitions
      At line 383 in file RD_BV_CONFIG_MOTEUR.s
   Uses
      At line 98 in file RD_BV_CONFIG_MOTEUR.s
      At line 421 in file RD_BV_CONFIG_MOTEUR.s
      At line 434 in file RD_BV_CONFIG_MOTEUR.s

__ENGINE_LEFT_BACK_RIGHT_FRONT 000001CC

Symbol: __ENGINE_LEFT_BACK_RIGHT_FRONT
   Definitions
      At line 432 in file RD_BV_CONFIG_MOTEUR.s
   Uses
      At line 104 in file RD_BV_CONFIG_MOTEUR.s
Comment: __ENGINE_LEFT_BACK_RIGHT_FRONT used once
__ENGINE_LEFT_FRONT 00000186

Symbol: __ENGINE_LEFT_FRONT
   Definitions
      At line 390 in file RD_BV_CONFIG_MOTEUR.s
   Uses
      At line 97 in file RD_BV_CONFIG_MOTEUR.s
      At line 415 in file RD_BV_CONFIG_MOTEUR.s
      At line 427 in file RD_BV_CONFIG_MOTEUR.s

__ENGINE_LEFT_FRONT_RIGHT_BACK 000001C0

Symbol: __ENGINE_LEFT_FRONT_RIGHT_BACK
   Definitions
      At line 425 in file RD_BV_CONFIG_MOTEUR.s
   Uses
      At line 105 in file RD_BV_CONFIG_MOTEUR.s
Comment: __ENGINE_LEFT_FRONT_RIGHT_BACK used once
__ENGINE_LEFT_INVERSE 0000019C

Symbol: __ENGINE_LEFT_INVERSE
   Definitions
      At line 405 in file RD_BV_CONFIG_MOTEUR.s
   Uses
      At line 99 in file RD_BV_CONFIG_MOTEUR.s



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

      At line 440 in file RD_BV_CONFIG_MOTEUR.s

__ENGINE_LEFT_OFF 00000144

Symbol: __ENGINE_LEFT_OFF
   Definitions
      At line 350 in file RD_BV_CONFIG_MOTEUR.s
   Uses
      At line 96 in file RD_BV_CONFIG_MOTEUR.s
      At line 365 in file RD_BV_CONFIG_MOTEUR.s

__ENGINE_LEFT_ON 00000138

Symbol: __ENGINE_LEFT_ON
   Definitions
      At line 343 in file RD_BV_CONFIG_MOTEUR.s
   Uses
      At line 95 in file RD_BV_CONFIG_MOTEUR.s
      At line 359 in file RD_BV_CONFIG_MOTEUR.s

__ENGINE_LEFT_RIGHT_BACK 000001B4

Symbol: __ENGINE_LEFT_RIGHT_BACK
   Definitions
      At line 419 in file RD_BV_CONFIG_MOTEUR.s
   Uses
      At line 103 in file RD_BV_CONFIG_MOTEUR.s
Comment: __ENGINE_LEFT_RIGHT_BACK used once
__ENGINE_LEFT_RIGHT_FRONT 000001A8

Symbol: __ENGINE_LEFT_RIGHT_FRONT
   Definitions
      At line 413 in file RD_BV_CONFIG_MOTEUR.s
   Uses
      At line 102 in file RD_BV_CONFIG_MOTEUR.s
Comment: __ENGINE_LEFT_RIGHT_FRONT used once
__ENGINE_LEFT_RIGHT_INVERSE 000001D8

Symbol: __ENGINE_LEFT_RIGHT_INVERSE
   Definitions
      At line 438 in file RD_BV_CONFIG_MOTEUR.s
   Uses
      At line 106 in file RD_BV_CONFIG_MOTEUR.s
Comment: __ENGINE_LEFT_RIGHT_INVERSE used once
__ENGINE_LEFT_RIGHT_OFF 0000015C

Symbol: __ENGINE_LEFT_RIGHT_OFF
   Definitions
      At line 363 in file RD_BV_CONFIG_MOTEUR.s
   Uses
      At line 101 in file RD_BV_CONFIG_MOTEUR.s
Comment: __ENGINE_LEFT_RIGHT_OFF used once
__ENGINE_LEFT_RIGHT_ON 00000150

Symbol: __ENGINE_LEFT_RIGHT_ON
   Definitions
      At line 357 in file RD_BV_CONFIG_MOTEUR.s
   Uses
      At line 100 in file RD_BV_CONFIG_MOTEUR.s



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols

Comment: __ENGINE_LEFT_RIGHT_ON used once
__ENGINE_RIGHT_BACK 00000168

Symbol: __ENGINE_RIGHT_BACK
   Definitions
      At line 369 in file RD_BV_CONFIG_MOTEUR.s
   Uses
      At line 93 in file RD_BV_CONFIG_MOTEUR.s
      At line 422 in file RD_BV_CONFIG_MOTEUR.s
      At line 428 in file RD_BV_CONFIG_MOTEUR.s

__ENGINE_RIGHT_FRONT 00000172

Symbol: __ENGINE_RIGHT_FRONT
   Definitions
      At line 376 in file RD_BV_CONFIG_MOTEUR.s
   Uses
      At line 92 in file RD_BV_CONFIG_MOTEUR.s
      At line 416 in file RD_BV_CONFIG_MOTEUR.s
      At line 435 in file RD_BV_CONFIG_MOTEUR.s

__ENGINE_RIGHT_INVERSE 00000190

Symbol: __ENGINE_RIGHT_INVERSE
   Definitions
      At line 397 in file RD_BV_CONFIG_MOTEUR.s
   Uses
      At line 94 in file RD_BV_CONFIG_MOTEUR.s
      At line 441 in file RD_BV_CONFIG_MOTEUR.s

__ENGINE_RIGHT_OFF 0000012C

Symbol: __ENGINE_RIGHT_OFF
   Definitions
      At line 336 in file RD_BV_CONFIG_MOTEUR.s
   Uses
      At line 91 in file RD_BV_CONFIG_MOTEUR.s
      At line 366 in file RD_BV_CONFIG_MOTEUR.s

__ENGINE_RIGHT_ON 00000120

Symbol: __ENGINE_RIGHT_ON
   Definitions
      At line 328 in file RD_BV_CONFIG_MOTEUR.s
   Uses
      At line 90 in file RD_BV_CONFIG_MOTEUR.s
      At line 360 in file RD_BV_CONFIG_MOTEUR.s

19 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

GPIOAFSEL_D 40007420

Symbol: GPIOAFSEL_D
   Definitions
      At line 34 in file RD_BV_CONFIG_MOTEUR.s
   Uses
      At line 167 in file RD_BV_CONFIG_MOTEUR.s
Comment: GPIOAFSEL_D used once
GPIOAFSEL_E 4005C420

Symbol: GPIOAFSEL_E
   Definitions
      At line 50 in file RD_BV_CONFIG_MOTEUR.s
   Uses
      None
Comment: GPIOAFSEL_E unused
GPIOAFSEL_H 40027420

Symbol: GPIOAFSEL_H
   Definitions
      At line 42 in file RD_BV_CONFIG_MOTEUR.s
   Uses
      At line 174 in file RD_BV_CONFIG_MOTEUR.s
Comment: GPIOAFSEL_H used once
GPIODATA_D 40007000

Symbol: GPIODATA_D
   Definitions
      At line 29 in file RD_BV_CONFIG_MOTEUR.s
   Uses
      At line 280 in file RD_BV_CONFIG_MOTEUR.s
      At line 371 in file RD_BV_CONFIG_MOTEUR.s
      At line 378 in file RD_BV_CONFIG_MOTEUR.s
      At line 399 in file RD_BV_CONFIG_MOTEUR.s

GPIODATA_E 4005C000

Symbol: GPIODATA_E
   Definitions
      At line 45 in file RD_BV_CONFIG_MOTEUR.s
   Uses
      None
Comment: GPIODATA_E unused
GPIODATA_H 40027000

Symbol: GPIODATA_H
   Definitions
      At line 37 in file RD_BV_CONFIG_MOTEUR.s
   Uses
      At line 297 in file RD_BV_CONFIG_MOTEUR.s
      At line 385 in file RD_BV_CONFIG_MOTEUR.s
      At line 392 in file RD_BV_CONFIG_MOTEUR.s
      At line 407 in file RD_BV_CONFIG_MOTEUR.s

GPIODEN_D 4000751C

Symbol: GPIODEN_D
   Definitions
      At line 32 in file RD_BV_CONFIG_MOTEUR.s



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

   Uses
      At line 275 in file RD_BV_CONFIG_MOTEUR.s
Comment: GPIODEN_D used once
GPIODEN_E 4005C51C

Symbol: GPIODEN_E
   Definitions
      At line 48 in file RD_BV_CONFIG_MOTEUR.s
   Uses
      None
Comment: GPIODEN_E unused
GPIODEN_H 4002751C

Symbol: GPIODEN_H
   Definitions
      At line 40 in file RD_BV_CONFIG_MOTEUR.s
   Uses
      At line 293 in file RD_BV_CONFIG_MOTEUR.s
Comment: GPIODEN_H used once
GPIODIR_D 40007400

Symbol: GPIODIR_D
   Definitions
      At line 30 in file RD_BV_CONFIG_MOTEUR.s
   Uses
      At line 265 in file RD_BV_CONFIG_MOTEUR.s
Comment: GPIODIR_D used once
GPIODIR_E 4005C400

Symbol: GPIODIR_E
   Definitions
      At line 46 in file RD_BV_CONFIG_MOTEUR.s
   Uses
      None
Comment: GPIODIR_E unused
GPIODIR_H 40027400

Symbol: GPIODIR_H
   Definitions
      At line 38 in file RD_BV_CONFIG_MOTEUR.s
   Uses
      At line 285 in file RD_BV_CONFIG_MOTEUR.s
Comment: GPIODIR_H used once
GPIODR2R_D 40007500

Symbol: GPIODR2R_D
   Definitions
      At line 31 in file RD_BV_CONFIG_MOTEUR.s
   Uses
      At line 270 in file RD_BV_CONFIG_MOTEUR.s
Comment: GPIODR2R_D used once
GPIODR2R_E 4005C500

Symbol: GPIODR2R_E
   Definitions
      At line 47 in file RD_BV_CONFIG_MOTEUR.s
   Uses
      None
Comment: GPIODR2R_E unused



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Absolute symbols

GPIODR2R_H 40027500

Symbol: GPIODR2R_H
   Definitions
      At line 39 in file RD_BV_CONFIG_MOTEUR.s
   Uses
      At line 289 in file RD_BV_CONFIG_MOTEUR.s
Comment: GPIODR2R_H used once
GPIOPCTL_D 4000752C

Symbol: GPIOPCTL_D
   Definitions
      At line 33 in file RD_BV_CONFIG_MOTEUR.s
   Uses
      At line 147 in file RD_BV_CONFIG_MOTEUR.s
Comment: GPIOPCTL_D used once
GPIOPCTL_E 4005C52C

Symbol: GPIOPCTL_E
   Definitions
      At line 49 in file RD_BV_CONFIG_MOTEUR.s
   Uses
      At line 161 in file RD_BV_CONFIG_MOTEUR.s
Comment: GPIOPCTL_E used once
GPIOPCTL_H 4002752C

Symbol: GPIOPCTL_H
   Definitions
      At line 41 in file RD_BV_CONFIG_MOTEUR.s
   Uses
      At line 155 in file RD_BV_CONFIG_MOTEUR.s
Comment: GPIOPCTL_H used once
GPIO_0 00000001

Symbol: GPIO_0
   Definitions
      At line 15 in file RD_BV_CONFIG_MOTEUR.s
   Uses
      At line 267 in file RD_BV_CONFIG_MOTEUR.s
      At line 272 in file RD_BV_CONFIG_MOTEUR.s
      At line 277 in file RD_BV_CONFIG_MOTEUR.s
      At line 280 in file RD_BV_CONFIG_MOTEUR.s

GPIO_1 00000002

Symbol: GPIO_1
   Definitions
      At line 16 in file RD_BV_CONFIG_MOTEUR.s
   Uses
      At line 267 in file RD_BV_CONFIG_MOTEUR.s
      At line 272 in file RD_BV_CONFIG_MOTEUR.s
      At line 277 in file RD_BV_CONFIG_MOTEUR.s
      At line 280 in file RD_BV_CONFIG_MOTEUR.s
      At line 297 in file RD_BV_CONFIG_MOTEUR.s
      At line 371 in file RD_BV_CONFIG_MOTEUR.s
      At line 378 in file RD_BV_CONFIG_MOTEUR.s
      At line 385 in file RD_BV_CONFIG_MOTEUR.s
      At line 392 in file RD_BV_CONFIG_MOTEUR.s
      At line 399 in file RD_BV_CONFIG_MOTEUR.s



ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Absolute symbols

      At line 401 in file RD_BV_CONFIG_MOTEUR.s
      At line 407 in file RD_BV_CONFIG_MOTEUR.s
      At line 409 in file RD_BV_CONFIG_MOTEUR.s

GPIO_2 00000004

Symbol: GPIO_2
   Definitions
      At line 17 in file RD_BV_CONFIG_MOTEUR.s
   Uses
      At line 76 in file RD_BV_CONFIG_MOTEUR.s
      At line 78 in file RD_BV_CONFIG_MOTEUR.s
      At line 267 in file RD_BV_CONFIG_MOTEUR.s
      At line 272 in file RD_BV_CONFIG_MOTEUR.s
      At line 277 in file RD_BV_CONFIG_MOTEUR.s
      At line 280 in file RD_BV_CONFIG_MOTEUR.s
      At line 281 in file RD_BV_CONFIG_MOTEUR.s

GPIO_3 00000008

Symbol: GPIO_3
   Definitions
      At line 18 in file RD_BV_CONFIG_MOTEUR.s
   Uses
      At line 77 in file RD_BV_CONFIG_MOTEUR.s
      At line 78 in file RD_BV_CONFIG_MOTEUR.s

GPIO_5 00000020

Symbol: GPIO_5
   Definitions
      At line 19 in file RD_BV_CONFIG_MOTEUR.s
   Uses
      At line 267 in file RD_BV_CONFIG_MOTEUR.s
      At line 272 in file RD_BV_CONFIG_MOTEUR.s
      At line 277 in file RD_BV_CONFIG_MOTEUR.s
      At line 280 in file RD_BV_CONFIG_MOTEUR.s
      At line 281 in file RD_BV_CONFIG_MOTEUR.s

GPIO_6 00000040

Symbol: GPIO_6
   Definitions
      At line 20 in file RD_BV_CONFIG_MOTEUR.s
   Uses
      None
Comment: GPIO_6 unused
GPIO_7 00000080

Symbol: GPIO_7
   Definitions
      At line 21 in file RD_BV_CONFIG_MOTEUR.s
   Uses
      None
Comment: GPIO_7 unused
GPIO_PORT_E_BASE 4005C000

Symbol: GPIO_PORT_E_BASE
   Definitions



ARM Macro Assembler    Page 5 Alphabetic symbol ordering
Absolute symbols

      At line 44 in file RD_BV_CONFIG_MOTEUR.s
   Uses
      At line 45 in file RD_BV_CONFIG_MOTEUR.s
      At line 46 in file RD_BV_CONFIG_MOTEUR.s
      At line 47 in file RD_BV_CONFIG_MOTEUR.s
      At line 48 in file RD_BV_CONFIG_MOTEUR.s
      At line 49 in file RD_BV_CONFIG_MOTEUR.s
      At line 50 in file RD_BV_CONFIG_MOTEUR.s

PORTD_BASE 40007000

Symbol: PORTD_BASE
   Definitions
      At line 28 in file RD_BV_CONFIG_MOTEUR.s
   Uses
      At line 29 in file RD_BV_CONFIG_MOTEUR.s
      At line 30 in file RD_BV_CONFIG_MOTEUR.s
      At line 31 in file RD_BV_CONFIG_MOTEUR.s
      At line 32 in file RD_BV_CONFIG_MOTEUR.s
      At line 33 in file RD_BV_CONFIG_MOTEUR.s
      At line 34 in file RD_BV_CONFIG_MOTEUR.s

PORTH_BASE 40027000

Symbol: PORTH_BASE
   Definitions
      At line 36 in file RD_BV_CONFIG_MOTEUR.s
   Uses
      At line 37 in file RD_BV_CONFIG_MOTEUR.s
      At line 38 in file RD_BV_CONFIG_MOTEUR.s
      At line 39 in file RD_BV_CONFIG_MOTEUR.s
      At line 40 in file RD_BV_CONFIG_MOTEUR.s
      At line 41 in file RD_BV_CONFIG_MOTEUR.s
      At line 42 in file RD_BV_CONFIG_MOTEUR.s

PWM0CMPA 40028058

Symbol: PWM0CMPA
   Definitions
      At line 59 in file RD_BV_CONFIG_MOTEUR.s
   Uses
      At line 209 in file RD_BV_CONFIG_MOTEUR.s
Comment: PWM0CMPA used once
PWM0CMPB 4002805C

Symbol: PWM0CMPB
   Definitions
      At line 60 in file RD_BV_CONFIG_MOTEUR.s
   Uses
      At line 213 in file RD_BV_CONFIG_MOTEUR.s
Comment: PWM0CMPB used once
PWM0CTL 40028040

Symbol: PWM0CTL
   Definitions
      At line 57 in file RD_BV_CONFIG_MOTEUR.s
   Uses
      At line 189 in file RD_BV_CONFIG_MOTEUR.s
      At line 218 in file RD_BV_CONFIG_MOTEUR.s



ARM Macro Assembler    Page 6 Alphabetic symbol ordering
Absolute symbols


PWM0GENA 40028060

Symbol: PWM0GENA
   Definitions
      At line 61 in file RD_BV_CONFIG_MOTEUR.s
   Uses
      At line 193 in file RD_BV_CONFIG_MOTEUR.s
Comment: PWM0GENA used once
PWM0GENB 40028064

Symbol: PWM0GENB
   Definitions
      At line 62 in file RD_BV_CONFIG_MOTEUR.s
   Uses
      At line 198 in file RD_BV_CONFIG_MOTEUR.s
Comment: PWM0GENB used once
PWM0LOAD 40028050

Symbol: PWM0LOAD
   Definitions
      At line 58 in file RD_BV_CONFIG_MOTEUR.s
   Uses
      At line 205 in file RD_BV_CONFIG_MOTEUR.s
Comment: PWM0LOAD used once
PWM1CMPA 40028098

Symbol: PWM1CMPA
   Definitions
      At line 67 in file RD_BV_CONFIG_MOTEUR.s
   Uses
      At line 248 in file RD_BV_CONFIG_MOTEUR.s
Comment: PWM1CMPA used once
PWM1CMPB 4002809C

Symbol: PWM1CMPB
   Definitions
      At line 68 in file RD_BV_CONFIG_MOTEUR.s
   Uses
      At line 252 in file RD_BV_CONFIG_MOTEUR.s
Comment: PWM1CMPB used once
PWM1CTL 40028080

Symbol: PWM1CTL
   Definitions
      At line 65 in file RD_BV_CONFIG_MOTEUR.s
   Uses
      At line 226 in file RD_BV_CONFIG_MOTEUR.s
      At line 257 in file RD_BV_CONFIG_MOTEUR.s

PWM1GENA 400280A0

Symbol: PWM1GENA
   Definitions
      At line 69 in file RD_BV_CONFIG_MOTEUR.s
   Uses
      At line 230 in file RD_BV_CONFIG_MOTEUR.s
Comment: PWM1GENA used once
PWM1GENB 400280A4



ARM Macro Assembler    Page 7 Alphabetic symbol ordering
Absolute symbols


Symbol: PWM1GENB
   Definitions
      At line 70 in file RD_BV_CONFIG_MOTEUR.s
   Uses
      At line 236 in file RD_BV_CONFIG_MOTEUR.s
Comment: PWM1GENB used once
PWM1LOAD 40028090

Symbol: PWM1LOAD
   Definitions
      At line 66 in file RD_BV_CONFIG_MOTEUR.s
   Uses
      At line 244 in file RD_BV_CONFIG_MOTEUR.s
Comment: PWM1LOAD used once
PWMENABLE 40028008

Symbol: PWMENABLE
   Definitions
      At line 54 in file RD_BV_CONFIG_MOTEUR.s
   Uses
      At line 330 in file RD_BV_CONFIG_MOTEUR.s
      At line 337 in file RD_BV_CONFIG_MOTEUR.s
      At line 344 in file RD_BV_CONFIG_MOTEUR.s
      At line 351 in file RD_BV_CONFIG_MOTEUR.s

PWM_BASE 40028000

Symbol: PWM_BASE
   Definitions
      At line 53 in file RD_BV_CONFIG_MOTEUR.s
   Uses
      At line 54 in file RD_BV_CONFIG_MOTEUR.s
      At line 57 in file RD_BV_CONFIG_MOTEUR.s
      At line 58 in file RD_BV_CONFIG_MOTEUR.s
      At line 59 in file RD_BV_CONFIG_MOTEUR.s
      At line 60 in file RD_BV_CONFIG_MOTEUR.s
      At line 61 in file RD_BV_CONFIG_MOTEUR.s
      At line 62 in file RD_BV_CONFIG_MOTEUR.s
      At line 65 in file RD_BV_CONFIG_MOTEUR.s
      At line 66 in file RD_BV_CONFIG_MOTEUR.s
      At line 67 in file RD_BV_CONFIG_MOTEUR.s
      At line 68 in file RD_BV_CONFIG_MOTEUR.s
      At line 69 in file RD_BV_CONFIG_MOTEUR.s
      At line 70 in file RD_BV_CONFIG_MOTEUR.s

PortE_LR_QEI_A 0000000C

Symbol: PortE_LR_QEI_A
   Definitions
      At line 78 in file RD_BV_CONFIG_MOTEUR.s
   Uses
      None
Comment: PortE_LR_QEI_A unused
PortE_L_QEI_A 00000008

Symbol: PortE_L_QEI_A
   Definitions
      At line 77 in file RD_BV_CONFIG_MOTEUR.s



ARM Macro Assembler    Page 8 Alphabetic symbol ordering
Absolute symbols

   Uses
      None
Comment: PortE_L_QEI_A unused
PortE_R_QEI_A 00000004

Symbol: PortE_R_QEI_A
   Definitions
      At line 76 in file RD_BV_CONFIG_MOTEUR.s
   Uses
      None
Comment: PortE_R_QEI_A unused
QEI_0 4002C000

Symbol: QEI_0
   Definitions
      At line 73 in file RD_BV_CONFIG_MOTEUR.s
   Uses
      None
Comment: QEI_0 unused
QEI_1 4002D000

Symbol: QEI_1
   Definitions
      At line 74 in file RD_BV_CONFIG_MOTEUR.s
   Uses
      None
Comment: QEI_1 unused
SYSCTL_RCGC0 400FE100

Symbol: SYSCTL_RCGC0
   Definitions
      At line 24 in file RD_BV_CONFIG_MOTEUR.s
   Uses
      At line 110 in file RD_BV_CONFIG_MOTEUR.s
      At line 115 in file RD_BV_CONFIG_MOTEUR.s

SYSCTL_RCGC2 400FE108

Symbol: SYSCTL_RCGC2
   Definitions
      At line 25 in file RD_BV_CONFIG_MOTEUR.s
   Uses
      At line 124 in file RD_BV_CONFIG_MOTEUR.s
      At line 130 in file RD_BV_CONFIG_MOTEUR.s
      At line 136 in file RD_BV_CONFIG_MOTEUR.s

VITESSE 00000192

Symbol: VITESSE
   Definitions
      At line 81 in file RD_BV_CONFIG_MOTEUR.s
   Uses
      At line 210 in file RD_BV_CONFIG_MOTEUR.s
      At line 249 in file RD_BV_CONFIG_MOTEUR.s

50 symbols
405 symbols in table
