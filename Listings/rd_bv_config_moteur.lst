


ARM Macro Assembler    Page 1 


    1 00000000         ;; RD BV - Evalbot (Cortex M3 de Texas Instrument);
    2 00000000         ; programme - Pilotage 2 ENGINEs Evalbot par PWM tout en
                        ASM (configure les pwms + GPIO)
    3 00000000         
    4 00000000         ;Les pages se réfèrent au datasheet lm3s9b92.pdf
    5 00000000         
    6 00000000         ;Cablage :
    7 00000000         ;pin 10/PD0/PWM0 => input PWM du pont en H DRV8801RT
    8 00000000         ;pin 11/PD1/PWM1 => input Phase_R  du pont en H DRV8801R
                       T
    9 00000000         ;pin 12/PD2   => input SlowDecay commune aux 2 ponts en 
                       H
   10 00000000         ;pin 98/PD5   => input Enable 12v du conv DC/DC
   11 00000000         ;pin 86/PH0/PWM2 => input PWM du 2nd pont en H
   12 00000000         ;pin 85/PH1/PWM3 => input Phase du 2nd pont en H
   13 00000000         
   14 00000000         ;; Hexa cORResponding values to pin numbers
   15 00000000 00000001 
                       GPIO_0  EQU              0x1
   16 00000000 00000002 
                       GPIO_1  EQU              0x2
   17 00000000 00000004 
                       GPIO_2  EQU              0x4
   18 00000000 00000008 
                       GPIO_3  EQU              0x08
   19 00000000 00000020 
                       GPIO_5  EQU              0x20
   20 00000000 00000040 
                       GPIO_6  EQU              0x40
   21 00000000 00000080 
                       GPIO_7  EQU              0x80
   22 00000000         
   23 00000000         ;; pour enable clock    0x400FE000
   24 00000000 400FE100 
                       SYSCTL_RCGC0
                               EQU              0x400FE100  ;SYSCTL_RCGC0: offs
                                                            et 0x100 (p271 data
                                                            sheet de lm3s9b92.p
                                                            df)
   25 00000000 400FE104 
                       SYSCTL_RCGC1
                               EQU              0X400FE104  ;SYSCTL_RCGC1: offs
                                                            et 0x100 (p279 data
                                                            sheet de lm3s9b92.p
                                                            df)
   26 00000000 400FE108 
                       SYSCTL_RCGC2
                               EQU              0x400FE108  ;SYSCTL_RCGC2: offs
                                                            et 0x108 (p291 data
                                                            sheet de lm3s9b92.p
                                                            df)
   27 00000000         
   28 00000000         ;; General-Purpose Input/Outputs (GPIO) configuration
   29 00000000 40007000 
                       PORTD_BASE
                               EQU              0x40007000
   30 00000000 40007000 
                       GPIODATA_D
                               EQU              PORTD_BASE



ARM Macro Assembler    Page 2 


   31 00000000 40007400 
                       GPIODIR_D
                               EQU              PORTD_BASE+0x00000400
   32 00000000 40007500 
                       GPIODR2R_D
                               EQU              PORTD_BASE+0x00000500
   33 00000000 4000751C 
                       GPIODEN_D
                               EQU              PORTD_BASE+0x0000051C
   34 00000000 4000752C 
                       GPIOPCTL_D
                               EQU              PORTD_BASE+0x0000052C ; GPIO Po
                                                            rt Control (GPIOPCT
                                                            L), offset 0x52C; p
                                                            444
   35 00000000 40007420 
                       GPIOAFSEL_D
                               EQU              PORTD_BASE+0x00000420 ; GPIO Al
                                                            ternate Function Se
                                                            lect (GPIOAFSEL), o
                                                            ffset 0x420; p426
   36 00000000         
   37 00000000 40027000 
                       PORTH_BASE
                               EQU              0x40027000
   38 00000000 40027000 
                       GPIODATA_H
                               EQU              PORTH_BASE
   39 00000000 40027400 
                       GPIODIR_H
                               EQU              PORTH_BASE+0x00000400
   40 00000000 40027500 
                       GPIODR2R_H
                               EQU              PORTH_BASE+0x00000500
   41 00000000 4002751C 
                       GPIODEN_H
                               EQU              PORTH_BASE+0x0000051C
   42 00000000 4002752C 
                       GPIOPCTL_H
                               EQU              PORTH_BASE+0x0000052C ; GPIO Po
                                                            rt Control (GPIOPCT
                                                            L), offset 0x52C; p
                                                            444
   43 00000000 40027420 
                       GPIOAFSEL_H
                               EQU              PORTH_BASE+0x00000420 ; GPIO Al
                                                            ternate Function Se
                                                            lect (GPIOAFSEL), o
                                                            ffset 0x420; p426
   44 00000000         
   45 00000000 40024000 
                       GPIO_PORT_E_BASE
                               EQU              0x40024000
   46 00000000 40024000 
                       GPIODATA_E
                               EQU              GPIO_PORT_E_BASE
   47 00000000 40024400 
                       GPIODIR_E
                               EQU              GPIO_PORT_E_BASE+0x400



ARM Macro Assembler    Page 3 


   48 00000000 40024500 
                       GPIODR2R_E
                               EQU              GPIO_PORT_E_BASE+0x500
   49 00000000 4002451C 
                       GPIODEN_E
                               EQU              GPIO_PORT_E_BASE+0x51C
   50 00000000 4002452C 
                       GPIOPCTL_E
                               EQU              GPIO_PORT_E_BASE+0x52C ; GPIO P
                                                            ort Control (GPIOPC
                                                            TL), offset 0x52C; 
                                                            p444
   51 00000000 40024420 
                       GPIOAFSEL_E
                               EQU              GPIO_PORT_E_BASE+0x420 ; GPIO A
                                                            lternate Function S
                                                            elect (GPIOAFSEL), 
                                                            offset 0x420; p426
   52 00000000         
   53 00000000         ;; Pulse Width Modulator (PWM) configuration
   54 00000000 40028000 
                       PWM_BASE
                               EQU              0x040028000 ;BASE des Block PWM
                                                             p.1138
   55 00000000 40028008 
                       PWMENABLE
                               EQU              PWM_BASE+0x008 ; p1145
   56 00000000         
   57 00000000         ;Block PWM0 pour sorties PWM0 et PWM1 (ENGINE 1)
   58 00000000 40028040 
                       PWM0CTL EQU              PWM_BASE+0x040 ;p1167
   59 00000000 40028050 
                       PWM0LOAD
                               EQU              PWM_BASE+0x050
   60 00000000 40028058 
                       PWM0CMPA
                               EQU              PWM_BASE+0x058
   61 00000000 4002805C 
                       PWM0CMPB
                               EQU              PWM_BASE+0x05C
   62 00000000 40028060 
                       PWM0GENA
                               EQU              PWM_BASE+0x060
   63 00000000 40028064 
                       PWM0GENB
                               EQU              PWM_BASE+0x064
   64 00000000         
   65 00000000         ;Block PWM1 pour sorties PWM1 et PWM2 (ENGINE 2)
   66 00000000 40028080 
                       PWM1CTL EQU              PWM_BASE+0x080
   67 00000000 40028090 
                       PWM1LOAD
                               EQU              PWM_BASE+0x090
   68 00000000 40028098 
                       PWM1CMPA
                               EQU              PWM_BASE+0x098
   69 00000000 4002809C 
                       PWM1CMPB
                               EQU              PWM_BASE+0x09C



ARM Macro Assembler    Page 4 


   70 00000000 400280A0 
                       PWM1GENA
                               EQU              PWM_BASE+0x0A0
   71 00000000 400280A4 
                       PWM1GENB
                               EQU              PWM_BASE+0x0A4
   72 00000000         
   73 00000000         ;;Quadrature Encoder Interface (QEI) configuration (p120
                       4)
   74 00000000 4002C000 
                       QEI_0   EQU              0x4002C000
   75 00000000 4002D000 
                       QEI_1   EQU              0x4002D000
   76 00000000         
   77 00000000 00000004 
                       PortE_R_QEI_A
                               EQU              GPIO_2      ;(0000 0100)
   78 00000000 00000008 
                       PortE_L_QEI_A
                               EQU              GPIO_3      ;(0000 1000)
   79 00000000 0000000C 
                       PortE_LR_QEI_A
                               EQU              GPIO_2+GPIO_3 ;(0000 1100)
   80 00000000         
   81 00000000         ;0x1A2
   82 00000000 00000192 
                       VITESSE EQU              0x192       ; Valeures plus pet
                                                            ites => Vitesse plu
                                                            s rapide exemple 0x
                                                            192
   83 00000000         ; Valeures plus grANDes => Vitesse moins rapide exemple 
                       0x1B2
   84 00000000         
   85 00000000         
   86 00000000                 AREA             _CONFIG_ENGINE_, CODE, READONLY
   87 00000000                 ENTRY
   88 00000000         
   89 00000000         ;; The EXPORT commAND specifies that a symbol can be acc
                       essed by other shared objects or executables.
   90 00000000                 EXPORT           __ENGINE_INIT
   91 00000000                 EXPORT           __ENGINE_RIGHT_ON
   92 00000000                 EXPORT           __ENGINE_RIGHT_OFF
   93 00000000                 EXPORT           __ENGINE_RIGHT_FRONT
   94 00000000                 EXPORT           __ENGINE_RIGHT_BACK
   95 00000000                 EXPORT           __ENGINE_RIGHT_INVERSE
   96 00000000                 EXPORT           __ENGINE_LEFT_ON
   97 00000000                 EXPORT           __ENGINE_LEFT_OFF
   98 00000000                 EXPORT           __ENGINE_LEFT_FRONT
   99 00000000                 EXPORT           __ENGINE_LEFT_BACK
  100 00000000                 EXPORT           __ENGINE_LEFT_INVERSE
  101 00000000                 EXPORT           __ENGINE_LEFT_RIGHT_ON
  102 00000000                 EXPORT           __ENGINE_LEFT_RIGHT_OFF
  103 00000000                 EXPORT           __ENGINE_LEFT_RIGHT_FRONT
  104 00000000                 EXPORT           __ENGINE_LEFT_RIGHT_BACK
  105 00000000                 EXPORT           __ENGINE_LEFT_BACK_RIGHT_FRONT
  106 00000000                 EXPORT           __ENGINE_LEFT_FRONT_RIGHT_BACK
  107 00000000                 EXPORT           __ENGINE_LEFT_RIGHT_INVERSE
  108 00000000         
  109 00000000         



ARM Macro Assembler    Page 5 


  110 00000000         __ENGINE_INIT
  111 00000000 4E8B            LDR              R6, = SYSCTL_RCGC0
  112 00000002 6830            LDR              R0, [R6]
  113 00000004 F440 1080       ORR              R0, R0, #0x00100000 ;;bit 20 = 
                                                            PWM recoit clock: O
                                                            N (p271)
  114 00000008 6030            STR              R0, [R6]
  115 0000000A         
  116 0000000A BF00            NOP
  117 0000000C BF00            NOP
  118 0000000E BF00            NOP
  119 00000010         
  120 00000010 4E88            LDR              R6, =SYSCTL_RCGC1
  121 00000012 6830            LDR              R0, [R6]
  122 00000014 F440 7080       ORR              R0, R0, #0x00000100 ;;bit 04 = 
                                                            QEI recoit clock: O
                                                            N (p1209)
  123 00000018 6030            STR              R0, [R6]
  124 0000001A         
  125 0000001A BF00            NOP
  126 0000001C BF00            NOP
  127 0000001E BF00            NOP
  128 00000020         
  129 00000020         ;ROM_SysCtlPWMClockSet(SYSCTL_PWMDIV_1);PWM clock is pro
                       cessor clock /1
  130 00000020         ;Je ne fais rien car par defaut = OK!!
  131 00000020         ;*(int *) (0x400FE060)= *(int *)(0x4
  132 00000020         ;RCGC2 :  Enable port D GPIO(p291 ) car ENGINE RIGHT sur
                        port D
  133 00000020 4E85            LDR              R6, = SYSCTL_RCGC2
  134 00000022 6830            LDR              R0, [R6]
  135 00000024 F040 0008       ORR              R0, R0, #0x08 ;; Enable port D 
                                                            GPIO
  136 00000028 6030            STR              R0, [R6]
  137 0000002A         
  138 0000002A BF00            NOP
  139 0000002C BF00            NOP
  140 0000002E BF00            NOP
  141 00000030         
  142 00000030         
  143 00000030         ;MOT2 : RCGC2 :  Enable port H GPIO  (2eme ENGINEs)
  144 00000030 4E81            LDR              R6, = SYSCTL_RCGC2
  145 00000032 6830            LDR              R0, [R6]
  146 00000034 F040 0080       ORR              R0, R0, #0x80 ;; Enable port H 
                                                            GPIO
  147 00000038 6030            STR              R0, [R6]
  148 0000003A         
  149 0000003A BF00            NOP
  150 0000003C BF00            NOP
  151 0000003E BF00            NOP
  152 00000040         
  153 00000040         
  154 00000040         ;RCGC2 :  Enable port E GPIO  (QEI (p1204))
  155 00000040 4E7D            LDR              R6, = SYSCTL_RCGC2
  156 00000042 6830            LDR              R0, [R6]
  157 00000044 F040 0010       ORR              R0, R0, #0x10 ;; Enable port E 
                                                            GPIO :(0001 0000) /
                                                             (HGFE DCBA)
  158 00000048 6030            STR              R0, [R6]



ARM Macro Assembler    Page 6 


  159 0000004A         
  160 0000004A BF00            NOP
  161 0000004C BF00            NOP
  162 0000004E BF00            NOP
  163 00000050         
  164 00000050         ;;Pin muxing pour PWM, port D, reg. GPIOPCTL(p444), 4bit
                       s de PCM0=0001<=>PWM (voir p1261)
  165 00000050         ;;il faut mettre 1 pour avoir PD0=PWM0 et PD1=PWM1
  166 00000050 4E7A            LDR              R6, = GPIOPCTL_D
  167 00000052         ;LDR R0, [R6]   ;; *(int *)(0x40007000+0x0000052C)=1;
  168 00000052         ;ORR R0, R0, #0x01 ;; Port D, pin 1 = PWM
  169 00000052 F04F 0001       MOV              R0, #0x01
  170 00000056 6030            STR              R0, [R6]
  171 00000058         
  172 00000058         ;;MOT2 : Pin muxing pour PWM, port H, reg. GPIOPCTL(p444
                       ), 4bits de PCM0=0001<=>PWM (voir p1261)
  173 00000058         ;;il faut mettre mux = 2 pour avoir PH0=PWM2 et PH1=PWM3
                       
  174 00000058 4E79            LDR              R6, = GPIOPCTL_H
  175 0000005A F04F 0002       MOV              R0, #0x02
  176 0000005E 6030            STR              R0, [R6]
  177 00000060         
  178 00000060         ;;In port E GPIOPCTL(p444), We need the PHA0 and PHB0 se
                       t in PORT E 2 & 3
  179 00000060         ;We need to put mux = 4 to have PE0=PHA0 & PE1=PHA1
  180 00000060 4E78            LDR              R6, = GPIOPCTL_E
  181 00000062 F04F 0004       MOV              R0, #0x04
  182 00000066 6030            STR              R0, [R6]
  183 00000068         
  184 00000068         ;;Alternate Function Select (p 426), PD0 utilise alernat
                       e fonction (PWM au dessus)
  185 00000068         ;;donc PD0 = 1
  186 00000068 4E77            LDR              R6, =GPIOAFSEL_D
  187 0000006A 6830            LDR              R0, [R6]    ;*(int *)(0x4000700
                                                            0+0x00000420)= *(in
                                                            t *)(0x40007000+0x0
                                                            0000420) | 0x000000
                                                            01;
  188 0000006C F040 0001       ORR              R0, R0, #0x01 ;
  189 00000070 6030            STR              R0, [R6]
  190 00000072         
  191 00000072         ;;MOT2 : Alternate Function Select (p 426), PH0 utilise 
                       PWM donc Alternate funct
  192 00000072         ;;donc PH0 = 1
  193 00000072 4E76            LDR              R6, =GPIOAFSEL_H
  194 00000074 6830            LDR              R0, [R6]    ;*(int *)(0x4000700
                                                            0+0x00000420)= *(in
                                                            t *)(0x40007000+0x0
                                                            0000420) | 0x000000
                                                            01;
  195 00000076 F040 0001       ORR              R0, R0, #0x01 ;
  196 0000007A 6030            STR              R0, [R6]
  197 0000007C         
  198 0000007C         ;Alternate Function Select (p 426), PE2 et PE3 utilise Q
                       EI so Alternate funct
  199 0000007C         ;;donc PE2 et PE3 = 1
  200 0000007C 4E74            LDR              R6, =GPIOAFSEL_E
  201 0000007E 6830            LDR              R0, [R6]
  202 00000080 F040 0001       ORR              R0, #0x01



ARM Macro Assembler    Page 7 


  203 00000084 6030            STR              R0, [R6]
  204 00000086         
  205 00000086         ;;-----------PWM0 pour ENGINE 1 connect� � PD0
  206 00000086         ;;PWM0 produit PWM0 et PWM1 output
  207 00000086         ;;Config Modes PWM0 + mode GenA + mode GenB
  208 00000086 4E73            LDR              R6, = PWM0CTL
  209 00000088 F04F 0002       MOV              R0, #2      ;Mode up-down-up-do
                                                            wn, pas synchro
  210 0000008C 6030            STR              R0, [R6]
  211 0000008E         
  212 0000008E 4E72            LDR              R6, =PWM0GENA ;en decomptage, q
                                                            d comparateurA = co
                                                            mpteur => sortie pw
                                                            mA=0
  213 00000090         ;en comptage croissant, qd comparateurA = compteur => so
                       rtie pwmA=1
  214 00000090 F04F 00B0       MOV              R0, #0x0B0  ;0B0=10110000 => AC
                                                            TCMPBD=00 (B down:r
                                                            ien), ACTCMPBU=00(B
                                                             up rien)
  215 00000094 6030            STR              R0, [R6]    ;ACTCMPAD=10 (A dow
                                                            n:pwmA low), ACTCMP
                                                            AU=11 (A up:pwmA hi
                                                            gh) , ACTLOAD=00,AC
                                                            TZERO=00
  216 00000096         
  217 00000096 4E71            LDR              R6, =PWM0GENB ;en comptage croi
                                                            ssant, qd comparate
                                                            urB = compteur => s
                                                            ortie pwmA=1
  218 00000098 F44F 6030       MOV              R0, #0x0B00 ;en decomptage, qd 
                                                            comparateurB = comp
                                                            teur => sortie pwmB
                                                            =0
  219 0000009C 6030            STR              R0, [R6]
  220 0000009E         ;Config Compteur, comparateur A et comparateur B
  221 0000009E         ;;#define PWM_PERIOD (ROM_SysCtlClockGet() / 16000),
  222 0000009E         ;;en mesure : SysCtlClockGet=0F42400h, /16=0x3E8,
  223 0000009E         ;;on divise par 2 car ENGINE 6v sur alim 12v
  224 0000009E 4E70            LDR              R6, =PWM0LOAD ;PWM0LOAD=periode
                                                            /2 =0x1F4
  225 000000A0 F44F 70FA       MOV              R0, #0x1F4
  226 000000A4 6030            STR              R0,[R6]
  227 000000A6         
  228 000000A6 4E6F            LDR              R6, =PWM0CMPA ;Valeur rapport c
                                                            yclique : pour 10% 
                                                            => 1C2h si clock = 
                                                            0F42400
  229 000000A8 F44F 70C9       MOV              R0, #VITESSE
  230 000000AC 6030            STR              R0, [R6]
  231 000000AE         
  232 000000AE 4E6E            LDR              R6, =PWM0CMPB ;PWM0CMPB recoit 
                                                            meme valeur. (rappo
                                                            rt cyclique depend 
                                                            de CMPA)
  233 000000B0 F44F 70FA       MOV              R0, #0x1F4
  234 000000B4 6030            STR              R0, [R6]
  235 000000B6         
  236 000000B6         ;Control PWM : active PWM Generator 0 (p1167): Enable+up



ARM Macro Assembler    Page 8 


                       /down + Enable counter debug mod
  237 000000B6 4E67            LDR              R6, =PWM0CTL
  238 000000B8 6830            LDR              R0, [R6]
  239 000000BA F040 0007       ORR              R0, R0, #0x07
  240 000000BE 6030            STR              R0, [R6]
  241 000000C0         
  242 000000C0         ;;-----------PWM2 pour ENGINE 2 connect� � PH0
  243 000000C0         ;;PWM1block produit PWM2 et PWM3 output
  244 000000C0         ;;Config Modes PWM2 + mode GenA + mode GenB
  245 000000C0 4E6A            LDR              R6, = PWM1CTL
  246 000000C2 F04F 0002       MOV              R0, #2      ;Mode up-down-up-do
                                                            wn, pas synchro
  247 000000C6 6030            STR              R0, [R6]    ;*(int *)(0x4002800
                                                            0+0x040)=2;
  248 000000C8         
  249 000000C8 4E69            LDR              R6, =PWM1GENA ;en decomptage, q
                                                            d comparateurA = co
                                                            mpteur => sortie pw
                                                            mA=0
  250 000000CA         ;en comptage croissant, qd comparateurA = compteur => so
                       rtie pwmA=1
  251 000000CA F04F 00B0       MOV              R0, #0x0B0  ;0B0=10110000 => AC
                                                            TCMPBD=00 (B down:r
                                                            ien), ACTCMPBU=00(B
                                                             up rien)
  252 000000CE 6030            STR              R0, [R6]    ;ACTCMPAD=10 (A dow
                                                            n:pwmA low), ACTCMP
                                                            AU=11 (A up:pwmA hi
                                                            gh) , ACTLOAD=00,AC
                                                            TZERO=00
  253 000000D0         
  254 000000D0         ;*(int *)(0x40028000+0x060)=0x0B0; //
  255 000000D0 4E68            LDR              R6, =PWM1GENB ;*(int *)(0x40028
                                                            000+0x064)=0x0B00;
  256 000000D2 F44F 6030       MOV              R0, #0x0B00 ;en decomptage, qd 
                                                            comparateurB = comp
                                                            teur => sortie pwmB
                                                            =0
  257 000000D6 6030            STR              R0, [R6]    ;en comptage croiss
                                                            ant, qd comparateur
                                                            B = compteur => sor
                                                            tie pwmA=1
  258 000000D8         ;Config Compteur, comparateur A et comparateur B
  259 000000D8         ;;#define PWM_PERIOD (ROM_SysCtlClockGet() / 16000),
  260 000000D8         ;;en mesure : SysCtlClockGet=0F42400h, /16=0x3E8,
  261 000000D8         ;;on divise par 2 car ENGINE 6v sur alim 12v
  262 000000D8         ;*(int *)(0x40028000+0x050)=0x1F4; //PWM0LOAD=periode/2 
                       =0x1F4
  263 000000D8 4E67            LDR              R6, =PWM1LOAD
  264 000000DA F44F 70FA       MOV              R0, #0x1F4
  265 000000DE 6030            STR              R0,[R6]
  266 000000E0         
  267 000000E0 4E66            LDR              R6, =PWM1CMPA ;Valeur rapport c
                                                            yclique : pour 10% 
                                                            => 1C2h si clock = 
                                                            0F42400
  268 000000E2 F44F 70C9       MOV              R0, #VITESSE
  269 000000E6 6030            STR              R0, [R6]    ;*(int *)(0x4002800
                                                            0+0x058)=0x01C2;



ARM Macro Assembler    Page 9 


  270 000000E8         
  271 000000E8 4E65            LDR              R6, =PWM1CMPB ;PWM0CMPB recoit 
                                                            meme valeur. (CMPA 
                                                            depend du rapport c
                                                            yclique)
  272 000000EA F44F 70FA       MOV              R0, #0x1F4  ; *(int *)(0x400280
                                                            00+0x05C)=0x1F4;
  273 000000EE 6030            STR              R0, [R6]
  274 000000F0         
  275 000000F0         ;Control PWM : active PWM Generator 0 (p1167): Enable+up
                       /down + Enable counter debug mod
  276 000000F0 4E5E            LDR              R6, =PWM1CTL
  277 000000F2 6830            LDR              R0, [R6]    ;*(int *) (0x400280
                                                            00+0x40)= *(int *)(
                                                            0x40028000+0x40) | 
                                                            0x07;
  278 000000F4 F040 0007       ORR              R0, R0, #0x07
  279 000000F8 6030            STR              R0, [R6]
  280 000000FA         
  281 000000FA         ;;-----Fin config des PWMs
  282 000000FA         
  283 000000FA         ;PORT D OUTPUT pin0 (pwm)=pin1(direction)=pin2(slow deca
                       y)=pin5(12v enable)
  284 000000FA 4E62            LDR              R6, =GPIODIR_D
  285 000000FC 6830            LDR              R0, [R6]
  286 000000FE F040 0027       ORR              R0, #(GPIO_0+GPIO_1+GPIO_2+GPIO
_5)
  287 00000102 6030            STR              R0,[R6]
  288 00000104         ;Port D, 2mA les meme
  289 00000104 4E60            LDR              R6, =GPIODR2R_D ;
  290 00000106 6830            LDR              R0, [R6]
  291 00000108 F040 0027       ORR              R0, #(GPIO_0+GPIO_1+GPIO_2+GPIO
_5)
  292 0000010C 6030            STR              R0,[R6]
  293 0000010E         ;Port D, Digital Enable
  294 0000010E 4E5F            LDR              R6, =GPIODEN_D ;
  295 00000110 6830            LDR              R0, [R6]
  296 00000112 F040 0027       ORR              R0, #(GPIO_0+GPIO_1+GPIO_2+GPIO
_5)
  297 00000116 6030            STR              R0,[R6]
  298 00000118         ;Port D : mise à 1 de slow Decay et 12V et mise � 0 p
                       our dir et pwm
  299 00000118 4E5D            LDR              R6, =(GPIODATA_D+((GPIO_0+GPIO_
1+GPIO_2+GPIO_5)<<2))
  300 0000011A F04F 0024       MOV              R0, #(GPIO_2+GPIO_5) ; #0x24
  301 0000011E 6030            STR              R0,[R6]
  302 00000120         
  303 00000120         ;MOT2, PH1 pour sens ENGINE ouput
  304 00000120 4E5C            LDR              R6, =GPIODIR_H
  305 00000122 F04F 0003       MOV              R0, #0x03   ;
  306 00000126 6030            STR              R0,[R6]
  307 00000128         ;Port H, 2mA les meme
  308 00000128 4E5B            LDR              R6, =GPIODR2R_H
  309 0000012A F04F 0003       MOV              R0, #0x03
  310 0000012E 6030            STR              R0,[R6]
  311 00000130         ;Port H, Digital Enable
  312 00000130 4E5A            LDR              R6, =GPIODEN_H
  313 00000132 F04F 0003       MOV              R0, #0x03
  314 00000136 6030            STR              R0,[R6]



ARM Macro Assembler    Page 10 


  315 00000138         ;Port H : mise à 1 pour dir
  316 00000138 4E59            LDR              R6, =(GPIODATA_H +(GPIO_1<<2))
  317 0000013A F04F 0002       MOV              R0, #0x02
  318 0000013E 6030            STR              R0,[R6]
  319 00000140         
  320 00000140         ;;InfraLed Configuration
  321 00000140         
  322 00000140 4E58            LDR              R6, =GPIODIR_E ;; 1 Pin du port
                                                            F en sortie (broche
                                                             4 et 5 : 00110000)
                                                            
  323 00000142 6830            LDR              R0, [R6]
  324 00000144 F040 0040       ORR              R0, #GPIO_6
  325 00000148 6030            STR              R0, [R6]
  326 0000014A         
  327 0000014A 4E57            LDR              R6, =GPIODEN_E ;; Enable Digita
                                                            l Function
  328 0000014C 6830            LDR              R0, [R6]
  329 0000014E F040 0040       ORR              R0, #GPIO_6
  330 00000152 6030            STR              R0, [R6]
  331 00000154         
  332 00000154 4E55            LDR              R6, =GPIODR2R_E ;; Choix de l'i
                                                            ntensite de sortie 
                                                            (2mA)
  333 00000156 6830            LDR              R0, [R6]
  334 00000158 F040 0040       ORR              R0, #GPIO_6
  335 0000015C 6030            STR              R0, [R6]
  336 0000015E         
  337 0000015E 4C54            LDR              R4, =GPIO_PORT_E_BASE + (GPIO_6
<<2) 
                                                            ;; @data Register =
                                                             @base + (mask<<2) 
                                                            ==> LED1
  338 00000160 F04F 0240       MOV              R2, #GPIO_6
  339 00000164 EA42 0204       ORR              R2, R4
  340 00000168 6022            STR              R2, [R4]
  341 0000016A         
  342 0000016A 4770            BX               LR          ; FIN du sous progr
                                                            amme d'init.
  343 0000016C         
  344 0000016C         ;Enable PWM0 (bit 0) et PWM2 (bit 2) p1145
  345 0000016C         ;Attention ici c'est les sorties PWM0 et PWM2
  346 0000016C         ;qu'on controle, pas les blocks PWM0 et PWM1!!!
  347 0000016C         __ENGINE_RIGHT_ON
  348 0000016C         ;Enable sortie PWM0 (bit 0), p1145
  349 0000016C 4E51            LDR              R6, =PWMENABLE
  350 0000016E 6830            LDR              R0, [R6]
  351 00000170 F040 0001       ORR              R0, #0x01   ;bit 0 = 1
  352 00000174 6030            STR              R0, [R6]
  353 00000176 4770            BX               LR
  354 00000178         
  355 00000178         __ENGINE_RIGHT_OFF
  356 00000178 4E4E            LDR              R6, =PWMENABLE
  357 0000017A 6830            LDR              R0, [R6]
  358 0000017C F000 000E       AND              R0, #0x0E   ;bit 0 = 0
  359 00000180 6030            STR              R0, [R6]
  360 00000182 4770            BX               LR
  361 00000184         
  362 00000184         __ENGINE_LEFT_ON



ARM Macro Assembler    Page 11 


  363 00000184 4E4B            LDR              R6, =PWMENABLE
  364 00000186 6830            LDR              R0, [R6]
  365 00000188 F040 0004       ORR              R0, #0x04   ;bit 2 = 1
  366 0000018C 6030            STR              R0, [R6]
  367 0000018E 4770            BX               LR
  368 00000190         
  369 00000190         __ENGINE_LEFT_OFF
  370 00000190 4E48            LDR              R6, =PWMENABLE
  371 00000192 6830            LDR              R0, [R6]
  372 00000194 F000 000B       AND              R0, #0x0B   ;bit 2 = 0
  373 00000198 6030            STR              R0, [R6]
  374 0000019A 4770            BX               LR
  375 0000019C         
  376 0000019C         __ENGINE_LEFT_RIGHT_ON
  377 0000019C B541            PUSH             { R0, R6, LR}
  378 0000019E F7FF FFFE       BL               __ENGINE_LEFT_ON
  379 000001A2 F7FF FFFE       BL               __ENGINE_RIGHT_ON
  380 000001A6 BD41            POP              { R0, R6, PC}
  381 000001A8         
  382 000001A8         __ENGINE_LEFT_RIGHT_OFF
  383 000001A8 B541            PUSH             { R0, R6, LR}
  384 000001AA F7FF FFFE       BL               __ENGINE_LEFT_OFF
  385 000001AE F7FF FFFE       BL               __ENGINE_RIGHT_OFF
  386 000001B2 BD41            POP              { R0, R6, PC}
  387 000001B4         
  388 000001B4         __ENGINE_RIGHT_BACK
  389 000001B4         ;Inverse Direction (GPIO_D1)
  390 000001B4 4E40            LDR              R6, =(GPIODATA_D+(GPIO_1<<2))
  391 000001B6 F04F 0000       MOV              R0, #0
  392 000001BA 6030            STR              R0,[R6]
  393 000001BC 4770            BX               LR
  394 000001BE         
  395 000001BE         __ENGINE_RIGHT_FRONT
  396 000001BE         ;Inverse Direction (GPIO_D1)
  397 000001BE 4E3E            LDR              R6, =(GPIODATA_D+(GPIO_1<<2))
  398 000001C0 F04F 0002       MOV              R0, #2
  399 000001C4 6030            STR              R0,[R6]
  400 000001C6 4770            BX               LR
  401 000001C8         
  402 000001C8         __ENGINE_LEFT_BACK
  403 000001C8         ;Inverse Direction (GPIO_D1)
  404 000001C8 4E35            LDR              R6, =(GPIODATA_H+(GPIO_1<<2))
  405 000001CA F04F 0002       MOV              R0, #2      ; contraire du ENGI
                                                            NE RIGHT
  406 000001CE 6030            STR              R0,[R6]
  407 000001D0 4770            BX               LR
  408 000001D2         
  409 000001D2         __ENGINE_LEFT_FRONT
  410 000001D2         ;Inverse Direction (GPIO_D1)
  411 000001D2 4E33            LDR              R6, =(GPIODATA_H+(GPIO_1<<2))
  412 000001D4 F04F 0000       MOV              R0, #0
  413 000001D8 6030            STR              R0,[R6]
  414 000001DA 4770            BX               LR
  415 000001DC         
  416 000001DC         __ENGINE_RIGHT_INVERSE
  417 000001DC         ;Inverse Direction (GPIO_D1)
  418 000001DC 4E36            LDR              R6, =(GPIODATA_D+(GPIO_1<<2))
  419 000001DE 6831            LDR              r1, [R6]
  420 000001E0 F081 0002       EOR              R0, r1, #GPIO_1



ARM Macro Assembler    Page 12 


  421 000001E4 6030            STR              R0,[R6]
  422 000001E6 4770            BX               LR
  423 000001E8         
  424 000001E8         __ENGINE_LEFT_INVERSE
  425 000001E8         ;Inverse Direction (GPIO_D1)
  426 000001E8 4E2D            LDR              R6, =(GPIODATA_H+(GPIO_1<<2))
  427 000001EA 6831            LDR              r1, [R6]
  428 000001EC F081 0002       EOR              R0, r1, #GPIO_1
  429 000001F0 6030            STR              R0,[R6]
  430 000001F2 4770            BX               LR
  431 000001F4         
  432 000001F4         __ENGINE_LEFT_RIGHT_FRONT
  433 000001F4 B541            PUSH             { R0, R6, LR}
  434 000001F6 F7FF FFFE       BL               __ENGINE_LEFT_FRONT
  435 000001FA F7FF FFFE       BL               __ENGINE_RIGHT_FRONT
  436 000001FE BD41            POP              { R0, R6, PC}
  437 00000200         
  438 00000200         __ENGINE_LEFT_RIGHT_BACK
  439 00000200 B541            PUSH             { R0, R6, LR}
  440 00000202 F7FF FFFE       BL               __ENGINE_LEFT_BACK
  441 00000206 F7FF FFFE       BL               __ENGINE_RIGHT_BACK
  442 0000020A BD41            POP              { R0, R6, PC}
  443 0000020C         
  444 0000020C         __ENGINE_LEFT_FRONT_RIGHT_BACK
  445 0000020C B541            PUSH             { R0, R6, LR}
  446 0000020E F7FF FFFE       BL               __ENGINE_LEFT_FRONT
  447 00000212 F7FF FFFE       BL               __ENGINE_RIGHT_BACK
  448 00000216 BD41            POP              { R0, R6, PC}
  449 00000218         
  450 00000218         
  451 00000218         __ENGINE_LEFT_BACK_RIGHT_FRONT
  452 00000218 B541            PUSH             { R0, R6, LR}
  453 0000021A F7FF FFFE       BL               __ENGINE_LEFT_BACK
  454 0000021E F7FF FFFE       BL               __ENGINE_RIGHT_FRONT
  455 00000222 BD41            POP              { R0, R6, PC}
  456 00000224         
  457 00000224         __ENGINE_LEFT_RIGHT_INVERSE
  458 00000224 B543            PUSH             { R0, R1, R6, LR}
  459 00000226 F7FF FFFE       BL               __ENGINE_LEFT_INVERSE
  460 0000022A F7FF FFFE       BL               __ENGINE_RIGHT_INVERSE
  461 0000022E BD43            POP              { R0, R1, R6, PC}
  462 00000230         
  463 00000230                 END
              400FE100 
              400FE104 
              400FE108 
              4000752C 
              4002752C 
              4002452C 
              40007420 
              40027420 
              40024420 
              40028040 
              40028060 
              40028064 
              40028050 
              40028058 
              4002805C 
              40028080 



ARM Macro Assembler    Page 13 


              400280A0 
              400280A4 
              40028090 
              40028098 
              4002809C 
              40007400 
              40007500 
              4000751C 
              4000709C 
              40027400 
              40027500 
              4002751C 
              40027008 
              40024400 
              4002451C 
              40024500 
              40024100 
              40028008 
              40007008 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M3 --apcs=interw
ork --depend=.\objects\rd_bv_config_moteur.d -o.\objects\rd_bv_config_moteur.o 
-I.\RTE\_Target_1 -ID:\ProgramFiles\Armv52\ARM\CMSIS\5.5.1\CMSIS\Core\Include -
ID:\ProgramFiles\Armv52\ARM\CMSIS\5.5.1\Device\ARM\ARMCM3\Include --predefine="
__EVAL SETA 1" --predefine="__UVISION_VERSION SETA 528" --predefine="_RTE_ SETA
 1" --predefine="ARMCM3 SETA 1" --list=.\listings\rd_bv_config_moteur.lst RD_BV
_CONFIG_MOTEUR.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

_CONFIG_ENGINE_ 00000000

Symbol: _CONFIG_ENGINE_
   Definitions
      At line 86 in file RD_BV_CONFIG_MOTEUR.s
   Uses
      None
Comment: _CONFIG_ENGINE_ unused
__ENGINE_INIT 00000000

Symbol: __ENGINE_INIT
   Definitions
      At line 110 in file RD_BV_CONFIG_MOTEUR.s
   Uses
      At line 90 in file RD_BV_CONFIG_MOTEUR.s
Comment: __ENGINE_INIT used once
__ENGINE_LEFT_BACK 000001C8

Symbol: __ENGINE_LEFT_BACK
   Definitions
      At line 402 in file RD_BV_CONFIG_MOTEUR.s
   Uses
      At line 99 in file RD_BV_CONFIG_MOTEUR.s
      At line 440 in file RD_BV_CONFIG_MOTEUR.s
      At line 453 in file RD_BV_CONFIG_MOTEUR.s

__ENGINE_LEFT_BACK_RIGHT_FRONT 00000218

Symbol: __ENGINE_LEFT_BACK_RIGHT_FRONT
   Definitions
      At line 451 in file RD_BV_CONFIG_MOTEUR.s
   Uses
      At line 105 in file RD_BV_CONFIG_MOTEUR.s
Comment: __ENGINE_LEFT_BACK_RIGHT_FRONT used once
__ENGINE_LEFT_FRONT 000001D2

Symbol: __ENGINE_LEFT_FRONT
   Definitions
      At line 409 in file RD_BV_CONFIG_MOTEUR.s
   Uses
      At line 98 in file RD_BV_CONFIG_MOTEUR.s
      At line 434 in file RD_BV_CONFIG_MOTEUR.s
      At line 446 in file RD_BV_CONFIG_MOTEUR.s

__ENGINE_LEFT_FRONT_RIGHT_BACK 0000020C

Symbol: __ENGINE_LEFT_FRONT_RIGHT_BACK
   Definitions
      At line 444 in file RD_BV_CONFIG_MOTEUR.s
   Uses
      At line 106 in file RD_BV_CONFIG_MOTEUR.s
Comment: __ENGINE_LEFT_FRONT_RIGHT_BACK used once
__ENGINE_LEFT_INVERSE 000001E8

Symbol: __ENGINE_LEFT_INVERSE
   Definitions
      At line 424 in file RD_BV_CONFIG_MOTEUR.s
   Uses
      At line 100 in file RD_BV_CONFIG_MOTEUR.s



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

      At line 459 in file RD_BV_CONFIG_MOTEUR.s

__ENGINE_LEFT_OFF 00000190

Symbol: __ENGINE_LEFT_OFF
   Definitions
      At line 369 in file RD_BV_CONFIG_MOTEUR.s
   Uses
      At line 97 in file RD_BV_CONFIG_MOTEUR.s
      At line 384 in file RD_BV_CONFIG_MOTEUR.s

__ENGINE_LEFT_ON 00000184

Symbol: __ENGINE_LEFT_ON
   Definitions
      At line 362 in file RD_BV_CONFIG_MOTEUR.s
   Uses
      At line 96 in file RD_BV_CONFIG_MOTEUR.s
      At line 378 in file RD_BV_CONFIG_MOTEUR.s

__ENGINE_LEFT_RIGHT_BACK 00000200

Symbol: __ENGINE_LEFT_RIGHT_BACK
   Definitions
      At line 438 in file RD_BV_CONFIG_MOTEUR.s
   Uses
      At line 104 in file RD_BV_CONFIG_MOTEUR.s
Comment: __ENGINE_LEFT_RIGHT_BACK used once
__ENGINE_LEFT_RIGHT_FRONT 000001F4

Symbol: __ENGINE_LEFT_RIGHT_FRONT
   Definitions
      At line 432 in file RD_BV_CONFIG_MOTEUR.s
   Uses
      At line 103 in file RD_BV_CONFIG_MOTEUR.s
Comment: __ENGINE_LEFT_RIGHT_FRONT used once
__ENGINE_LEFT_RIGHT_INVERSE 00000224

Symbol: __ENGINE_LEFT_RIGHT_INVERSE
   Definitions
      At line 457 in file RD_BV_CONFIG_MOTEUR.s
   Uses
      At line 107 in file RD_BV_CONFIG_MOTEUR.s
Comment: __ENGINE_LEFT_RIGHT_INVERSE used once
__ENGINE_LEFT_RIGHT_OFF 000001A8

Symbol: __ENGINE_LEFT_RIGHT_OFF
   Definitions
      At line 382 in file RD_BV_CONFIG_MOTEUR.s
   Uses
      At line 102 in file RD_BV_CONFIG_MOTEUR.s
Comment: __ENGINE_LEFT_RIGHT_OFF used once
__ENGINE_LEFT_RIGHT_ON 0000019C

Symbol: __ENGINE_LEFT_RIGHT_ON
   Definitions
      At line 376 in file RD_BV_CONFIG_MOTEUR.s
   Uses
      At line 101 in file RD_BV_CONFIG_MOTEUR.s



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols

Comment: __ENGINE_LEFT_RIGHT_ON used once
__ENGINE_RIGHT_BACK 000001B4

Symbol: __ENGINE_RIGHT_BACK
   Definitions
      At line 388 in file RD_BV_CONFIG_MOTEUR.s
   Uses
      At line 94 in file RD_BV_CONFIG_MOTEUR.s
      At line 441 in file RD_BV_CONFIG_MOTEUR.s
      At line 447 in file RD_BV_CONFIG_MOTEUR.s

__ENGINE_RIGHT_FRONT 000001BE

Symbol: __ENGINE_RIGHT_FRONT
   Definitions
      At line 395 in file RD_BV_CONFIG_MOTEUR.s
   Uses
      At line 93 in file RD_BV_CONFIG_MOTEUR.s
      At line 435 in file RD_BV_CONFIG_MOTEUR.s
      At line 454 in file RD_BV_CONFIG_MOTEUR.s

__ENGINE_RIGHT_INVERSE 000001DC

Symbol: __ENGINE_RIGHT_INVERSE
   Definitions
      At line 416 in file RD_BV_CONFIG_MOTEUR.s
   Uses
      At line 95 in file RD_BV_CONFIG_MOTEUR.s
      At line 460 in file RD_BV_CONFIG_MOTEUR.s

__ENGINE_RIGHT_OFF 00000178

Symbol: __ENGINE_RIGHT_OFF
   Definitions
      At line 355 in file RD_BV_CONFIG_MOTEUR.s
   Uses
      At line 92 in file RD_BV_CONFIG_MOTEUR.s
      At line 385 in file RD_BV_CONFIG_MOTEUR.s

__ENGINE_RIGHT_ON 0000016C

Symbol: __ENGINE_RIGHT_ON
   Definitions
      At line 347 in file RD_BV_CONFIG_MOTEUR.s
   Uses
      At line 91 in file RD_BV_CONFIG_MOTEUR.s
      At line 379 in file RD_BV_CONFIG_MOTEUR.s

19 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

GPIOAFSEL_D 40007420

Symbol: GPIOAFSEL_D
   Definitions
      At line 35 in file RD_BV_CONFIG_MOTEUR.s
   Uses
      At line 186 in file RD_BV_CONFIG_MOTEUR.s
Comment: GPIOAFSEL_D used once
GPIOAFSEL_E 40024420

Symbol: GPIOAFSEL_E
   Definitions
      At line 51 in file RD_BV_CONFIG_MOTEUR.s
   Uses
      At line 200 in file RD_BV_CONFIG_MOTEUR.s
Comment: GPIOAFSEL_E used once
GPIOAFSEL_H 40027420

Symbol: GPIOAFSEL_H
   Definitions
      At line 43 in file RD_BV_CONFIG_MOTEUR.s
   Uses
      At line 193 in file RD_BV_CONFIG_MOTEUR.s
Comment: GPIOAFSEL_H used once
GPIODATA_D 40007000

Symbol: GPIODATA_D
   Definitions
      At line 30 in file RD_BV_CONFIG_MOTEUR.s
   Uses
      At line 299 in file RD_BV_CONFIG_MOTEUR.s
      At line 390 in file RD_BV_CONFIG_MOTEUR.s
      At line 397 in file RD_BV_CONFIG_MOTEUR.s
      At line 418 in file RD_BV_CONFIG_MOTEUR.s

GPIODATA_E 40024000

Symbol: GPIODATA_E
   Definitions
      At line 46 in file RD_BV_CONFIG_MOTEUR.s
   Uses
      None
Comment: GPIODATA_E unused
GPIODATA_H 40027000

Symbol: GPIODATA_H
   Definitions
      At line 38 in file RD_BV_CONFIG_MOTEUR.s
   Uses
      At line 316 in file RD_BV_CONFIG_MOTEUR.s
      At line 404 in file RD_BV_CONFIG_MOTEUR.s
      At line 411 in file RD_BV_CONFIG_MOTEUR.s
      At line 426 in file RD_BV_CONFIG_MOTEUR.s

GPIODEN_D 4000751C

Symbol: GPIODEN_D
   Definitions
      At line 33 in file RD_BV_CONFIG_MOTEUR.s



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

   Uses
      At line 294 in file RD_BV_CONFIG_MOTEUR.s
Comment: GPIODEN_D used once
GPIODEN_E 4002451C

Symbol: GPIODEN_E
   Definitions
      At line 49 in file RD_BV_CONFIG_MOTEUR.s
   Uses
      At line 327 in file RD_BV_CONFIG_MOTEUR.s
Comment: GPIODEN_E used once
GPIODEN_H 4002751C

Symbol: GPIODEN_H
   Definitions
      At line 41 in file RD_BV_CONFIG_MOTEUR.s
   Uses
      At line 312 in file RD_BV_CONFIG_MOTEUR.s
Comment: GPIODEN_H used once
GPIODIR_D 40007400

Symbol: GPIODIR_D
   Definitions
      At line 31 in file RD_BV_CONFIG_MOTEUR.s
   Uses
      At line 284 in file RD_BV_CONFIG_MOTEUR.s
Comment: GPIODIR_D used once
GPIODIR_E 40024400

Symbol: GPIODIR_E
   Definitions
      At line 47 in file RD_BV_CONFIG_MOTEUR.s
   Uses
      At line 322 in file RD_BV_CONFIG_MOTEUR.s
Comment: GPIODIR_E used once
GPIODIR_H 40027400

Symbol: GPIODIR_H
   Definitions
      At line 39 in file RD_BV_CONFIG_MOTEUR.s
   Uses
      At line 304 in file RD_BV_CONFIG_MOTEUR.s
Comment: GPIODIR_H used once
GPIODR2R_D 40007500

Symbol: GPIODR2R_D
   Definitions
      At line 32 in file RD_BV_CONFIG_MOTEUR.s
   Uses
      At line 289 in file RD_BV_CONFIG_MOTEUR.s
Comment: GPIODR2R_D used once
GPIODR2R_E 40024500

Symbol: GPIODR2R_E
   Definitions
      At line 48 in file RD_BV_CONFIG_MOTEUR.s
   Uses
      At line 332 in file RD_BV_CONFIG_MOTEUR.s
Comment: GPIODR2R_E used once



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Absolute symbols

GPIODR2R_H 40027500

Symbol: GPIODR2R_H
   Definitions
      At line 40 in file RD_BV_CONFIG_MOTEUR.s
   Uses
      At line 308 in file RD_BV_CONFIG_MOTEUR.s
Comment: GPIODR2R_H used once
GPIOPCTL_D 4000752C

Symbol: GPIOPCTL_D
   Definitions
      At line 34 in file RD_BV_CONFIG_MOTEUR.s
   Uses
      At line 166 in file RD_BV_CONFIG_MOTEUR.s
Comment: GPIOPCTL_D used once
GPIOPCTL_E 4002452C

Symbol: GPIOPCTL_E
   Definitions
      At line 50 in file RD_BV_CONFIG_MOTEUR.s
   Uses
      At line 180 in file RD_BV_CONFIG_MOTEUR.s
Comment: GPIOPCTL_E used once
GPIOPCTL_H 4002752C

Symbol: GPIOPCTL_H
   Definitions
      At line 42 in file RD_BV_CONFIG_MOTEUR.s
   Uses
      At line 174 in file RD_BV_CONFIG_MOTEUR.s
Comment: GPIOPCTL_H used once
GPIO_0 00000001

Symbol: GPIO_0
   Definitions
      At line 15 in file RD_BV_CONFIG_MOTEUR.s
   Uses
      At line 286 in file RD_BV_CONFIG_MOTEUR.s
      At line 291 in file RD_BV_CONFIG_MOTEUR.s
      At line 296 in file RD_BV_CONFIG_MOTEUR.s
      At line 299 in file RD_BV_CONFIG_MOTEUR.s

GPIO_1 00000002

Symbol: GPIO_1
   Definitions
      At line 16 in file RD_BV_CONFIG_MOTEUR.s
   Uses
      At line 286 in file RD_BV_CONFIG_MOTEUR.s
      At line 291 in file RD_BV_CONFIG_MOTEUR.s
      At line 296 in file RD_BV_CONFIG_MOTEUR.s
      At line 299 in file RD_BV_CONFIG_MOTEUR.s
      At line 316 in file RD_BV_CONFIG_MOTEUR.s
      At line 390 in file RD_BV_CONFIG_MOTEUR.s
      At line 397 in file RD_BV_CONFIG_MOTEUR.s
      At line 404 in file RD_BV_CONFIG_MOTEUR.s
      At line 411 in file RD_BV_CONFIG_MOTEUR.s
      At line 418 in file RD_BV_CONFIG_MOTEUR.s



ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Absolute symbols

      At line 420 in file RD_BV_CONFIG_MOTEUR.s
      At line 426 in file RD_BV_CONFIG_MOTEUR.s
      At line 428 in file RD_BV_CONFIG_MOTEUR.s

GPIO_2 00000004

Symbol: GPIO_2
   Definitions
      At line 17 in file RD_BV_CONFIG_MOTEUR.s
   Uses
      At line 77 in file RD_BV_CONFIG_MOTEUR.s
      At line 79 in file RD_BV_CONFIG_MOTEUR.s
      At line 286 in file RD_BV_CONFIG_MOTEUR.s
      At line 291 in file RD_BV_CONFIG_MOTEUR.s
      At line 296 in file RD_BV_CONFIG_MOTEUR.s
      At line 299 in file RD_BV_CONFIG_MOTEUR.s
      At line 300 in file RD_BV_CONFIG_MOTEUR.s

GPIO_3 00000008

Symbol: GPIO_3
   Definitions
      At line 18 in file RD_BV_CONFIG_MOTEUR.s
   Uses
      At line 78 in file RD_BV_CONFIG_MOTEUR.s
      At line 79 in file RD_BV_CONFIG_MOTEUR.s

GPIO_5 00000020

Symbol: GPIO_5
   Definitions
      At line 19 in file RD_BV_CONFIG_MOTEUR.s
   Uses
      At line 286 in file RD_BV_CONFIG_MOTEUR.s
      At line 291 in file RD_BV_CONFIG_MOTEUR.s
      At line 296 in file RD_BV_CONFIG_MOTEUR.s
      At line 299 in file RD_BV_CONFIG_MOTEUR.s
      At line 300 in file RD_BV_CONFIG_MOTEUR.s

GPIO_6 00000040

Symbol: GPIO_6
   Definitions
      At line 20 in file RD_BV_CONFIG_MOTEUR.s
   Uses
      At line 324 in file RD_BV_CONFIG_MOTEUR.s
      At line 329 in file RD_BV_CONFIG_MOTEUR.s
      At line 334 in file RD_BV_CONFIG_MOTEUR.s
      At line 337 in file RD_BV_CONFIG_MOTEUR.s
      At line 338 in file RD_BV_CONFIG_MOTEUR.s

GPIO_7 00000080

Symbol: GPIO_7
   Definitions
      At line 21 in file RD_BV_CONFIG_MOTEUR.s
   Uses
      None
Comment: GPIO_7 unused



ARM Macro Assembler    Page 5 Alphabetic symbol ordering
Absolute symbols

GPIO_PORT_E_BASE 40024000

Symbol: GPIO_PORT_E_BASE
   Definitions
      At line 45 in file RD_BV_CONFIG_MOTEUR.s
   Uses
      At line 46 in file RD_BV_CONFIG_MOTEUR.s
      At line 47 in file RD_BV_CONFIG_MOTEUR.s
      At line 48 in file RD_BV_CONFIG_MOTEUR.s
      At line 49 in file RD_BV_CONFIG_MOTEUR.s
      At line 50 in file RD_BV_CONFIG_MOTEUR.s
      At line 51 in file RD_BV_CONFIG_MOTEUR.s
      At line 337 in file RD_BV_CONFIG_MOTEUR.s

PORTD_BASE 40007000

Symbol: PORTD_BASE
   Definitions
      At line 29 in file RD_BV_CONFIG_MOTEUR.s
   Uses
      At line 30 in file RD_BV_CONFIG_MOTEUR.s
      At line 31 in file RD_BV_CONFIG_MOTEUR.s
      At line 32 in file RD_BV_CONFIG_MOTEUR.s
      At line 33 in file RD_BV_CONFIG_MOTEUR.s
      At line 34 in file RD_BV_CONFIG_MOTEUR.s
      At line 35 in file RD_BV_CONFIG_MOTEUR.s

PORTH_BASE 40027000

Symbol: PORTH_BASE
   Definitions
      At line 37 in file RD_BV_CONFIG_MOTEUR.s
   Uses
      At line 38 in file RD_BV_CONFIG_MOTEUR.s
      At line 39 in file RD_BV_CONFIG_MOTEUR.s
      At line 40 in file RD_BV_CONFIG_MOTEUR.s
      At line 41 in file RD_BV_CONFIG_MOTEUR.s
      At line 42 in file RD_BV_CONFIG_MOTEUR.s
      At line 43 in file RD_BV_CONFIG_MOTEUR.s

PWM0CMPA 40028058

Symbol: PWM0CMPA
   Definitions
      At line 60 in file RD_BV_CONFIG_MOTEUR.s
   Uses
      At line 228 in file RD_BV_CONFIG_MOTEUR.s
Comment: PWM0CMPA used once
PWM0CMPB 4002805C

Symbol: PWM0CMPB
   Definitions
      At line 61 in file RD_BV_CONFIG_MOTEUR.s
   Uses
      At line 232 in file RD_BV_CONFIG_MOTEUR.s
Comment: PWM0CMPB used once
PWM0CTL 40028040

Symbol: PWM0CTL



ARM Macro Assembler    Page 6 Alphabetic symbol ordering
Absolute symbols

   Definitions
      At line 58 in file RD_BV_CONFIG_MOTEUR.s
   Uses
      At line 208 in file RD_BV_CONFIG_MOTEUR.s
      At line 237 in file RD_BV_CONFIG_MOTEUR.s

PWM0GENA 40028060

Symbol: PWM0GENA
   Definitions
      At line 62 in file RD_BV_CONFIG_MOTEUR.s
   Uses
      At line 212 in file RD_BV_CONFIG_MOTEUR.s
Comment: PWM0GENA used once
PWM0GENB 40028064

Symbol: PWM0GENB
   Definitions
      At line 63 in file RD_BV_CONFIG_MOTEUR.s
   Uses
      At line 217 in file RD_BV_CONFIG_MOTEUR.s
Comment: PWM0GENB used once
PWM0LOAD 40028050

Symbol: PWM0LOAD
   Definitions
      At line 59 in file RD_BV_CONFIG_MOTEUR.s
   Uses
      At line 224 in file RD_BV_CONFIG_MOTEUR.s
Comment: PWM0LOAD used once
PWM1CMPA 40028098

Symbol: PWM1CMPA
   Definitions
      At line 68 in file RD_BV_CONFIG_MOTEUR.s
   Uses
      At line 267 in file RD_BV_CONFIG_MOTEUR.s
Comment: PWM1CMPA used once
PWM1CMPB 4002809C

Symbol: PWM1CMPB
   Definitions
      At line 69 in file RD_BV_CONFIG_MOTEUR.s
   Uses
      At line 271 in file RD_BV_CONFIG_MOTEUR.s
Comment: PWM1CMPB used once
PWM1CTL 40028080

Symbol: PWM1CTL
   Definitions
      At line 66 in file RD_BV_CONFIG_MOTEUR.s
   Uses
      At line 245 in file RD_BV_CONFIG_MOTEUR.s
      At line 276 in file RD_BV_CONFIG_MOTEUR.s

PWM1GENA 400280A0

Symbol: PWM1GENA
   Definitions



ARM Macro Assembler    Page 7 Alphabetic symbol ordering
Absolute symbols

      At line 70 in file RD_BV_CONFIG_MOTEUR.s
   Uses
      At line 249 in file RD_BV_CONFIG_MOTEUR.s
Comment: PWM1GENA used once
PWM1GENB 400280A4

Symbol: PWM1GENB
   Definitions
      At line 71 in file RD_BV_CONFIG_MOTEUR.s
   Uses
      At line 255 in file RD_BV_CONFIG_MOTEUR.s
Comment: PWM1GENB used once
PWM1LOAD 40028090

Symbol: PWM1LOAD
   Definitions
      At line 67 in file RD_BV_CONFIG_MOTEUR.s
   Uses
      At line 263 in file RD_BV_CONFIG_MOTEUR.s
Comment: PWM1LOAD used once
PWMENABLE 40028008

Symbol: PWMENABLE
   Definitions
      At line 55 in file RD_BV_CONFIG_MOTEUR.s
   Uses
      At line 349 in file RD_BV_CONFIG_MOTEUR.s
      At line 356 in file RD_BV_CONFIG_MOTEUR.s
      At line 363 in file RD_BV_CONFIG_MOTEUR.s
      At line 370 in file RD_BV_CONFIG_MOTEUR.s

PWM_BASE 40028000

Symbol: PWM_BASE
   Definitions
      At line 54 in file RD_BV_CONFIG_MOTEUR.s
   Uses
      At line 55 in file RD_BV_CONFIG_MOTEUR.s
      At line 58 in file RD_BV_CONFIG_MOTEUR.s
      At line 59 in file RD_BV_CONFIG_MOTEUR.s
      At line 60 in file RD_BV_CONFIG_MOTEUR.s
      At line 61 in file RD_BV_CONFIG_MOTEUR.s
      At line 62 in file RD_BV_CONFIG_MOTEUR.s
      At line 63 in file RD_BV_CONFIG_MOTEUR.s
      At line 66 in file RD_BV_CONFIG_MOTEUR.s
      At line 67 in file RD_BV_CONFIG_MOTEUR.s
      At line 68 in file RD_BV_CONFIG_MOTEUR.s
      At line 69 in file RD_BV_CONFIG_MOTEUR.s
      At line 70 in file RD_BV_CONFIG_MOTEUR.s
      At line 71 in file RD_BV_CONFIG_MOTEUR.s

PortE_LR_QEI_A 0000000C

Symbol: PortE_LR_QEI_A
   Definitions
      At line 79 in file RD_BV_CONFIG_MOTEUR.s
   Uses
      None
Comment: PortE_LR_QEI_A unused



ARM Macro Assembler    Page 8 Alphabetic symbol ordering
Absolute symbols

PortE_L_QEI_A 00000008

Symbol: PortE_L_QEI_A
   Definitions
      At line 78 in file RD_BV_CONFIG_MOTEUR.s
   Uses
      None
Comment: PortE_L_QEI_A unused
PortE_R_QEI_A 00000004

Symbol: PortE_R_QEI_A
   Definitions
      At line 77 in file RD_BV_CONFIG_MOTEUR.s
   Uses
      None
Comment: PortE_R_QEI_A unused
QEI_0 4002C000

Symbol: QEI_0
   Definitions
      At line 74 in file RD_BV_CONFIG_MOTEUR.s
   Uses
      None
Comment: QEI_0 unused
QEI_1 4002D000

Symbol: QEI_1
   Definitions
      At line 75 in file RD_BV_CONFIG_MOTEUR.s
   Uses
      None
Comment: QEI_1 unused
SYSCTL_RCGC0 400FE100

Symbol: SYSCTL_RCGC0
   Definitions
      At line 24 in file RD_BV_CONFIG_MOTEUR.s
   Uses
      At line 111 in file RD_BV_CONFIG_MOTEUR.s
Comment: SYSCTL_RCGC0 used once
SYSCTL_RCGC1 400FE104

Symbol: SYSCTL_RCGC1
   Definitions
      At line 25 in file RD_BV_CONFIG_MOTEUR.s
   Uses
      At line 120 in file RD_BV_CONFIG_MOTEUR.s
Comment: SYSCTL_RCGC1 used once
SYSCTL_RCGC2 400FE108

Symbol: SYSCTL_RCGC2
   Definitions
      At line 26 in file RD_BV_CONFIG_MOTEUR.s
   Uses
      At line 133 in file RD_BV_CONFIG_MOTEUR.s
      At line 144 in file RD_BV_CONFIG_MOTEUR.s
      At line 155 in file RD_BV_CONFIG_MOTEUR.s

VITESSE 00000192



ARM Macro Assembler    Page 9 Alphabetic symbol ordering
Absolute symbols


Symbol: VITESSE
   Definitions
      At line 82 in file RD_BV_CONFIG_MOTEUR.s
   Uses
      At line 229 in file RD_BV_CONFIG_MOTEUR.s
      At line 268 in file RD_BV_CONFIG_MOTEUR.s

51 symbols
406 symbols in table
