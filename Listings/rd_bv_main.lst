


ARM Macro Assembler    Page 1 


    1 00000000 0121EAC0 
                       TEMPS_X EQU              0x121EAC0
    2 00000000 011A49A0 
                       TEMPS_Y EQU              0x11A49A0
    3 00000000         
    4 00000000                 AREA             _MAIN_PROGRAM_, CODE, READONLY
    5 00000000                 ENTRY
    6 00000000                 EXPORT           __main
    7 00000000         
    8 00000000         ;----------------------------------------IMPORT---------
                       ---------------------------------------;
    9 00000000         ;----------------------ENGINE-----------------;
   10 00000000                 IMPORT           __ENGINE_INIT ; init engine (co
                                                            nfigure pwms + GPIO
                                                            )
   11 00000000                 IMPORT           __ENGINE_RIGHT_ON ; activate ri
                                                            ght engine
   12 00000000                 IMPORT           __ENGINE_RIGHT_OFF ; desactivat
                                                            e right engine
   13 00000000                 IMPORT           __ENGINE_RIGHT_FRONT ; right  e
                                                            ngine go forward
   14 00000000                 IMPORT           __ENGINE_RIGHT_BACK ; right eng
                                                            ine go backward
   15 00000000                 IMPORT           __ENGINE_RIGHT_INVERSE ; invers
                                                            e rotation directio
                                                            n of roght engine
   16 00000000                 IMPORT           __ENGINE_LEFT_ON ; activate lef
                                                            t engine
   17 00000000                 IMPORT           __ENGINE_LEFT_OFF ; desactivate
                                                             left engine
   18 00000000                 IMPORT           __ENGINE_LEFT_FRONT ; left  eng
                                                            ine go forward
   19 00000000                 IMPORT           __ENGINE_LEFT_BACK ; left  engi
                                                            ne go backward
   20 00000000                 IMPORT           __ENGINE_LEFT_INVERSE ; inverse
                                                             rotation direction
                                                             of left engine
   21 00000000                 IMPORT           __ENGINE_LEFT_RIGHT_ON ; activa
                                                            te right and left e
                                                            ngine
   22 00000000                 IMPORT           __ENGINE_LEFT_RIGHT_OFF ; desac
                                                            tivate right and le
                                                            ft engine
   23 00000000                 IMPORT           __ENGINE_LEFT_RIGHT_FRONT ; lef
                                                            t and right  engine
                                                             go forward
   24 00000000                 IMPORT           __ENGINE_LEFT_RIGHT_BACK ; left
                                                             and right  engine 
                                                            go backward
   25 00000000                 IMPORT           __ENGINE_LEFT_BACK_RIGHT_FRONT 
                                                            ; left engine go ba
                                                            ckward and right  e
                                                            ngine go frontward
   26 00000000                 IMPORT           __ENGINE_LEFT_FRONT_RIGHT_BACK 
                                                            ; left engine go fr
                                                            ontward and right  
                                                            engine go backward
   27 00000000                 IMPORT           __ENGINE_LEFT_RIGHT_INVERSE ; i
                                                            nverse rotation dir



ARM Macro Assembler    Page 2 


                                                            ection of right & l
                                                            eft engine
   28 00000000         
   29 00000000         ;----------------------SWITCH-----------------;
   30 00000000                 IMPORT           __CONFIG_SW ; configure SW (con
                                                            figure pwms + GPIO)
                                                            
   31 00000000                 IMPORT           __READ_STATE_SW_1 
                                                            ;Read state of SW1
   32 00000000                 IMPORT           __READ_STATE_SW_2 
                                                            ;Read state of SW2
   33 00000000         
   34 00000000         ;----------------------BUMPER-----------------;
   35 00000000                 IMPORT           __CONFIG_BUMPER ; configure Bum
                                                            per (configure pwms
                                                             + GPIO)
   36 00000000                 IMPORT           __READ_STATE_BUMPER_1 ;Read sta
                                                            te of Bumper 1
   37 00000000                 IMPORT           __READ_STATE_BUMPER_2 ;Read sta
                                                            te of Bumper 2
   38 00000000         
   39 00000000         ;----------------------LED-----------------;
   40 00000000                 IMPORT           __CONFIG_LED ; configure Led (c
                                                            onfigure pwms + GPI
                                                            O)
   41 00000000                 IMPORT           __SWITCH_ON_LED_1 
                                                            ;Switch on LED1
   42 00000000                 IMPORT           __SWITCH_ON_LED_2 
                                                            ;Switch off LED2
   43 00000000                 IMPORT           __SWITCH_ON_LED_1_2 ;Switch off
                                                             LED1 1 & 2
   44 00000000                 IMPORT           __SWITCH_OFF_LED_1 
                                                            ;Switch on LED2
   45 00000000                 IMPORT           __SWITCH_OFF_LED_2 
                                                            ;Switch off LED2
   46 00000000                 IMPORT           __SWITCH_OFF_LED_1_2 ;Switch of
                                                            f LED1 1 & 2
   47 00000000                 IMPORT           __BLINK_LED_1_2 
                                                            ;Blink LED 1 & 2
   48 00000000         
   49 00000000         ;----------------------TOOLS-----------------;
   50 00000000                 IMPORT           __WAIT
   51 00000000                 IMPORT           __WAIT_HALF_ROTATION
   52 00000000                 IMPORT           __WAIT_A_TIME
   53 00000000         
   54 00000000         ;----------------------------------------START MAIN-----
                       -------------------------------------------;
   55 00000000         
   56 00000000         __main
   57 00000000 F7FF FFFE       BL               __ENGINE_INIT
   58 00000004 F7FF FFFE       BL               __ENGINE_LEFT_RIGHT_ON
   59 00000008 F000 F82B       BL               __TURN_90_LEFT
   60 0000000C F000 F829       BL               __TURN_90_LEFT
   61 00000010 F000 F827       BL               __TURN_90_LEFT
   62 00000014 F000 F825       BL               __TURN_90_LEFT
   63 00000018 F000 F823       BL               __TURN_90_LEFT
   64 0000001C F000 F821       BL               __TURN_90_LEFT
   65 00000020 F000 F81F       BL               __TURN_90_LEFT
   66 00000024 F000 F81D       BL               __TURN_90_LEFT



ARM Macro Assembler    Page 3 


   67 00000028 F7FF FFFE       BL               __ENGINE_LEFT_RIGHT_OFF
   68 0000002C         ;BL __INIT_START
   69 0000002C         ;BL __CONFIG_BUMPER
   70 0000002C         
   71 0000002C         start_while_is_start_wall
   72 0000002C         ;BL __READ_STATE_BUMPER_1
   73 0000002C         ;BEQ end_while_is_start_wall
   74 0000002C         
   75 0000002C         ;BL __READ_STATE_BUMPER_2
   76 0000002C         ;BNE start_while_is_start_wall
   77 0000002C         
   78 0000002C         end_while_is_start_wall
   79 0000002C         ;BL __WHILE_IS_NOT_END_WALL
   80 0000002C         
   81 0000002C         ;BL __ENGINE_LEFT_RIGHT_OFF
   82 0000002C         ;BL __CONFIG_SW
   83 0000002C         ;BL __CONFIG_LED
   84 0000002C         sw1
   85 0000002C         ;BL __READ_STATE_SW_1
   86 0000002C         ;BNE sw1
   87 0000002C         
   88 0000002C         ;BL __DISPLAY_BINARY_MSG
   89 0000002C         
   90 0000002C E7FE            B                sw1
   91 0000002E         
   92 0000002E         ;----------------------------------------END MAIN-------
                       -----------------------------------------;
   93 0000002E         
   94 0000002E         ;----------------------------------------START INIT STAR
                       T------------------------------------------------;
   95 0000002E         
   96 0000002E         __INIT_START
   97 0000002E E92D 5C41       PUSH             { R0, R6, R10-R12, LR }
   98 00000032         
   99 00000032 F7FF FFFE       BL               __ENGINE_INIT
  100 00000036 F7FF FFFE       BL               __CONFIG_SW
  101 0000003A         
  102 0000003A         sw2
  103 0000003A F7FF FFFE       BL               __READ_STATE_SW_2
  104 0000003E D1FC            BNE              sw2
  105 00000040         
  106 00000040 F7FF FFFE       BL               __ENGINE_LEFT_RIGHT_ON
  107 00000044 F7FF FFFE       BL               __ENGINE_LEFT_RIGHT_FRONT
  108 00000048         
  109 00000048 E8BD 9C41       POP              { R0, R6, R10-R12, PC }
  110 0000004C         
  111 0000004C         ;----------------------------------------END INIT START-
                       -----------------------------------------------;
  112 0000004C         
  113 0000004C         ;----------------------------------------START INIT AFTE
                       R SW2------------------------------------------------;
  114 0000004C         
  115 0000004C         __INIT_AFTER_SW2
  116 0000004C 4A30            LDR              R2, =TEMPS_X
  117 0000004E 4B31            LDR              R3, =TEMPS_Y
  118 00000050 F04F 0700       LDR              R7, =2_00000000
  119 00000054 4770            BX               LR
  120 00000056         
  121 00000056         ;----------------------------------------END INIT AFTER 



ARM Macro Assembler    Page 4 


                       SW2------------------------------------------------;
  122 00000056         
  123 00000056         ;----------------------------------------START TURN 90 R
                       IGHT------------------------------------------------;
  124 00000056         
  125 00000056         __TURN_90_RIGHT
  126 00000056 B543            PUSH             { R0, R1, R6, LR }
  127 00000058 F7FF FFFE       BL               __ENGINE_LEFT_FRONT_RIGHT_BACK
  128 0000005C F7FF FFFE       BL               __WAIT_HALF_ROTATION
  129 00000060 BD43            POP              { R0, R1, R6, PC }
  130 00000062         
  131 00000062         ;----------------------------------------END TURN 90 RIG
                       HT------------------------------------------------;
  132 00000062         
  133 00000062         ;----------------------------------------START TURN 90 L
                       EFT------------------------------------------------;
  134 00000062         
  135 00000062         __TURN_90_LEFT
  136 00000062 B543            PUSH             { R0, R1, R6, LR }
  137 00000064 F7FF FFFE       BL               __ENGINE_LEFT_BACK_RIGHT_FRONT
  138 00000068 F7FF FFFE       BL               __WAIT_HALF_ROTATION
  139 0000006C BD43            POP              { R0, R1, R6, PC }
  140 0000006E         
  141 0000006E         ;----------------------------------------END TURN 90 LEF
                       T------------------------------------------------;
  142 0000006E         
  143 0000006E         
  144 0000006E         ;----------------------------------------START TURN_ARRO
                       UND------------------------------------------------;
  145 0000006E         
  146 0000006E         __TURN_ARROUND
  147 0000006E B543            PUSH             { R0, R1, R6, LR }
  148 00000070 F7FF FFF1       BL               __TURN_90_RIGHT
  149 00000074 F7FF FFEF       BL               __TURN_90_RIGHT
  150 00000078 BD43            POP              { R0, R1, R6, PC }
  151 0000007A         
  152 0000007A         ;----------------------------------------END TURN_ARROUN
                       D------------------------------------------------;
  153 0000007A         
  154 0000007A         ;----------------------------------------START WHILE IS 
                       NOT END WALL--------------------------------------------
                       ----;
  155 0000007A         
  156 0000007A         __WHILE_IS_NOT_END_WALL
  157 0000007A E92D 47FF       PUSH             { R0-R10, LR }
  158 0000007E         init_startup_while_var
  159 0000007E F7FF FFE5       BL               __INIT_AFTER_SW2
  160 00000082 F04F 0400       LDR              R4, =0
  161 00000086 F04F 0501       LDR              R5, =2_00000001
  162 0000008A         
  163 0000008A         start_while_is_not_end_wall
  164 0000008A         
  165 0000008A F7FF FFFE       BL               __ENGINE_LEFT_RIGHT_BACK
  166 0000008E         ;BL __TURN_ARROUND
  167 0000008E         ;BL __ENGINE_LEFT_RIGHT_FRONT
  168 0000008E         
  169 0000008E         wait_to_be_outside_range_Y_DOWN
  170 0000008E 4619            MOV              R1, R3
  171 00000090 F7FF FFFE       BL               __WAIT_A_TIME



ARM Macro Assembler    Page 5 


  172 00000094         
  173 00000094         move_to_the_right
  174 00000094 F7FF FFDF       BL               __TURN_90_RIGHT
  175 00000098 F7FF FFFE       BL               __ENGINE_LEFT_RIGHT_FRONT
  176 0000009C         
  177 0000009C         wait_to_be_outside_range_X
  178 0000009C 4611            MOV              R1, R2
  179 0000009E F7FF FFFE       BL               __WAIT_A_TIME
  180 000000A2         end_wall_is_bumped
  181 000000A2 F7FF FFFE       BL               __READ_STATE_BUMPER_1
  182 000000A6 D017            BEQ              end_while_is_not_end_wall
  183 000000A8         
  184 000000A8 F7FF FFFE       BL               __READ_STATE_BUMPER_2
  185 000000AC D014            BEQ              end_while_is_not_end_wall
  186 000000AE         move_to_the_up
  187 000000AE F7FF FFD8       BL               __TURN_90_LEFT
  188 000000B2 F7FF FFFE       BL               __ENGINE_LEFT_RIGHT_FRONT
  189 000000B6         
  190 000000B6         wait_to_be_outside_range_Y_UP
  191 000000B6 4619            MOV              R1, R3
  192 000000B8 F7FF FFFE       BL               __WAIT_A_TIME
  193 000000BC         
  194 000000BC         basic_wall_is_bumped
  195 000000BC F7FF FFFE       BL               __READ_STATE_BUMPER_1
  196 000000C0 D003            BEQ              save_1_binary
  197 000000C2         
  198 000000C2 F7FF FFFE       BL               __READ_STATE_BUMPER_2
  199 000000C6 D000            BEQ              save_1_binary
  200 000000C8 E001            B                shift_binary_mask
  201 000000CA         
  202 000000CA         save_1_binary
  203 000000CA EA45 0707       ORR              R7, R5, R7
  204 000000CE         
  205 000000CE         shift_binary_mask
  206 000000CE FA05 F504       LSL              R5, R5, R4
  207 000000D2 F104 0401       ADD              R4, #1
  208 000000D6 E7D8            B                start_while_is_not_end_wall
  209 000000D8         
  210 000000D8         end_while_is_not_end_wall
  211 000000D8 E8BD 87FF       POP              { R0-R10, PC }
  212 000000DC         
  213 000000DC         ;----------------------------------------END WHILE IS NO
                       T END WALL----------------------------------------------
                       --;
  214 000000DC         
  215 000000DC         ;----------------------------------------START DISPLAY_B
                       INARY_MSG-----------------------------------------------
                       -;
  216 000000DC         
  217 000000DC         __DISPLAY_BINARY_MSG
  218 000000DC B5DF            PUSH             { R0-R4, R6, R7, LR }
  219 000000DE         
  220 000000DE F04F 0300       LDR              R3, =0
  221 000000E2         start_while_binary_msg
  222 000000E2 2B07            CMP              R3, #7
  223 000000E4 D013            BEQ              end_while_binary_msg
  224 000000E6         
  225 000000E6 F007 0201       AND              R2, R7, #2_00000001
  226 000000EA         



ARM Macro Assembler    Page 6 


  227 000000EA 2A01            CMP              R2, #1
  228 000000EC D001            BEQ              display_1
  229 000000EE         
  230 000000EE 2A00            CMP              R2, #0
  231 000000F0 D002            BEQ              display_0
  232 000000F2         
  233 000000F2         display_1
  234 000000F2 F7FF FFFE       BL               __SWITCH_ON_LED_1
  235 000000F6 E001            B                end_display
  236 000000F8         
  237 000000F8         display_0
  238 000000F8 F7FF FFFE       BL               __SWITCH_ON_LED_2
  239 000000FC         end_display
  240 000000FC F7FF FFFE       BL               __WAIT
  241 00000100 F7FF FFFE       BL               __SWITCH_OFF_LED_1_2
  242 00000104         
  243 00000104 F103 0301       ADD              R3, #1
  244 00000108 FA27 F703       LSR              R7, R3
  245 0000010C E7E9            B                start_while_binary_msg
  246 0000010E         end_while_binary_msg
  247 0000010E         
  248 0000010E BDDF            POP              { R0-R4, R6, R7, PC }
  249 00000110         
  250 00000110         ;----------------------------------------END DISPLAY_BIN
                       ARY_MSG------------------------------------------------;
                       
  251 00000110         
  252 00000110         end_p
  253 00000110                 END
              0121EAC0 
              011A49A0 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M3 --apcs=interw
ork --depend=.\objects\rd_bv_main.d -o.\objects\rd_bv_main.o -I.\RTE\_Target_1 
-IC:\Keil_v5\ARM\PACK\ARM\CMSIS\5.4.0\CMSIS\Core\Include -IC:\Keil_v5\ARM\PACK\
ARM\CMSIS\5.4.0\Device\ARM\ARMCM3\Include --predefine="__EVAL SETA 1" --predefi
ne="__UVISION_VERSION SETA 526" --predefine="_RTE_ SETA 1" --predefine="ARMCM3 
SETA 1" --list=.\listings\rd_bv_main.lst RD_BV_MAIN.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

_MAIN_PROGRAM_ 00000000

Symbol: _MAIN_PROGRAM_
   Definitions
      At line 4 in file RD_BV_MAIN.s
   Uses
      None
Comment: _MAIN_PROGRAM_ unused
__DISPLAY_BINARY_MSG 000000DC

Symbol: __DISPLAY_BINARY_MSG
   Definitions
      At line 217 in file RD_BV_MAIN.s
   Uses
      None
Comment: __DISPLAY_BINARY_MSG unused
__INIT_AFTER_SW2 0000004C

Symbol: __INIT_AFTER_SW2
   Definitions
      At line 115 in file RD_BV_MAIN.s
   Uses
      At line 159 in file RD_BV_MAIN.s
Comment: __INIT_AFTER_SW2 used once
__INIT_START 0000002E

Symbol: __INIT_START
   Definitions
      At line 96 in file RD_BV_MAIN.s
   Uses
      None
Comment: __INIT_START unused
__TURN_90_LEFT 00000062

Symbol: __TURN_90_LEFT
   Definitions
      At line 135 in file RD_BV_MAIN.s
   Uses
      At line 59 in file RD_BV_MAIN.s
      At line 60 in file RD_BV_MAIN.s
      At line 61 in file RD_BV_MAIN.s
      At line 62 in file RD_BV_MAIN.s
      At line 63 in file RD_BV_MAIN.s
      At line 64 in file RD_BV_MAIN.s
      At line 65 in file RD_BV_MAIN.s
      At line 66 in file RD_BV_MAIN.s
      At line 187 in file RD_BV_MAIN.s

__TURN_90_RIGHT 00000056

Symbol: __TURN_90_RIGHT
   Definitions
      At line 125 in file RD_BV_MAIN.s
   Uses
      At line 148 in file RD_BV_MAIN.s
      At line 149 in file RD_BV_MAIN.s
      At line 174 in file RD_BV_MAIN.s

__TURN_ARROUND 0000006E



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols


Symbol: __TURN_ARROUND
   Definitions
      At line 146 in file RD_BV_MAIN.s
   Uses
      None
Comment: __TURN_ARROUND unused
__WHILE_IS_NOT_END_WALL 0000007A

Symbol: __WHILE_IS_NOT_END_WALL
   Definitions
      At line 156 in file RD_BV_MAIN.s
   Uses
      None
Comment: __WHILE_IS_NOT_END_WALL unused
__main 00000000

Symbol: __main
   Definitions
      At line 56 in file RD_BV_MAIN.s
   Uses
      At line 6 in file RD_BV_MAIN.s
Comment: __main used once
basic_wall_is_bumped 000000BC

Symbol: basic_wall_is_bumped
   Definitions
      At line 194 in file RD_BV_MAIN.s
   Uses
      None
Comment: basic_wall_is_bumped unused
display_0 000000F8

Symbol: display_0
   Definitions
      At line 237 in file RD_BV_MAIN.s
   Uses
      At line 231 in file RD_BV_MAIN.s
Comment: display_0 used once
display_1 000000F2

Symbol: display_1
   Definitions
      At line 233 in file RD_BV_MAIN.s
   Uses
      At line 228 in file RD_BV_MAIN.s
Comment: display_1 used once
end_display 000000FC

Symbol: end_display
   Definitions
      At line 239 in file RD_BV_MAIN.s
   Uses
      At line 235 in file RD_BV_MAIN.s
Comment: end_display used once
end_p 00000110

Symbol: end_p
   Definitions



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols

      At line 252 in file RD_BV_MAIN.s
   Uses
      None
Comment: end_p unused
end_wall_is_bumped 000000A2

Symbol: end_wall_is_bumped
   Definitions
      At line 180 in file RD_BV_MAIN.s
   Uses
      None
Comment: end_wall_is_bumped unused
end_while_binary_msg 0000010E

Symbol: end_while_binary_msg
   Definitions
      At line 246 in file RD_BV_MAIN.s
   Uses
      At line 223 in file RD_BV_MAIN.s
Comment: end_while_binary_msg used once
end_while_is_not_end_wall 000000D8

Symbol: end_while_is_not_end_wall
   Definitions
      At line 210 in file RD_BV_MAIN.s
   Uses
      At line 182 in file RD_BV_MAIN.s
      At line 185 in file RD_BV_MAIN.s

end_while_is_start_wall 0000002C

Symbol: end_while_is_start_wall
   Definitions
      At line 78 in file RD_BV_MAIN.s
   Uses
      None
Comment: end_while_is_start_wall unused
init_startup_while_var 0000007E

Symbol: init_startup_while_var
   Definitions
      At line 158 in file RD_BV_MAIN.s
   Uses
      None
Comment: init_startup_while_var unused
move_to_the_right 00000094

Symbol: move_to_the_right
   Definitions
      At line 173 in file RD_BV_MAIN.s
   Uses
      None
Comment: move_to_the_right unused
move_to_the_up 000000AE

Symbol: move_to_the_up
   Definitions
      At line 186 in file RD_BV_MAIN.s
   Uses



ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Relocatable symbols

      None
Comment: move_to_the_up unused
save_1_binary 000000CA

Symbol: save_1_binary
   Definitions
      At line 202 in file RD_BV_MAIN.s
   Uses
      At line 196 in file RD_BV_MAIN.s
      At line 199 in file RD_BV_MAIN.s

shift_binary_mask 000000CE

Symbol: shift_binary_mask
   Definitions
      At line 205 in file RD_BV_MAIN.s
   Uses
      At line 200 in file RD_BV_MAIN.s
Comment: shift_binary_mask used once
start_while_binary_msg 000000E2

Symbol: start_while_binary_msg
   Definitions
      At line 221 in file RD_BV_MAIN.s
   Uses
      At line 245 in file RD_BV_MAIN.s
Comment: start_while_binary_msg used once
start_while_is_not_end_wall 0000008A

Symbol: start_while_is_not_end_wall
   Definitions
      At line 163 in file RD_BV_MAIN.s
   Uses
      At line 208 in file RD_BV_MAIN.s
Comment: start_while_is_not_end_wall used once
start_while_is_start_wall 0000002C

Symbol: start_while_is_start_wall
   Definitions
      At line 71 in file RD_BV_MAIN.s
   Uses
      None
Comment: start_while_is_start_wall unused
sw1 0000002C

Symbol: sw1
   Definitions
      At line 84 in file RD_BV_MAIN.s
   Uses
      At line 90 in file RD_BV_MAIN.s
Comment: sw1 used once
sw2 0000003A

Symbol: sw2
   Definitions
      At line 102 in file RD_BV_MAIN.s
   Uses
      At line 104 in file RD_BV_MAIN.s
Comment: sw2 used once



ARM Macro Assembler    Page 5 Alphabetic symbol ordering
Relocatable symbols

wait_to_be_outside_range_X 0000009C

Symbol: wait_to_be_outside_range_X
   Definitions
      At line 177 in file RD_BV_MAIN.s
   Uses
      None
Comment: wait_to_be_outside_range_X unused
wait_to_be_outside_range_Y_DOWN 0000008E

Symbol: wait_to_be_outside_range_Y_DOWN
   Definitions
      At line 169 in file RD_BV_MAIN.s
   Uses
      None
Comment: wait_to_be_outside_range_Y_DOWN unused
wait_to_be_outside_range_Y_UP 000000B6

Symbol: wait_to_be_outside_range_Y_UP
   Definitions
      At line 190 in file RD_BV_MAIN.s
   Uses
      None
Comment: wait_to_be_outside_range_Y_UP unused
31 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

TEMPS_X 0121EAC0

Symbol: TEMPS_X
   Definitions
      At line 1 in file RD_BV_MAIN.s
   Uses
      At line 116 in file RD_BV_MAIN.s
Comment: TEMPS_X used once
TEMPS_Y 011A49A0

Symbol: TEMPS_Y
   Definitions
      At line 2 in file RD_BV_MAIN.s
   Uses
      At line 117 in file RD_BV_MAIN.s
Comment: TEMPS_Y used once
2 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

__BLINK_LED_1_2 00000000

Symbol: __BLINK_LED_1_2
   Definitions
      At line 47 in file RD_BV_MAIN.s
   Uses
      None
Comment: __BLINK_LED_1_2 unused
__CONFIG_BUMPER 00000000

Symbol: __CONFIG_BUMPER
   Definitions
      At line 35 in file RD_BV_MAIN.s
   Uses
      None
Comment: __CONFIG_BUMPER unused
__CONFIG_LED 00000000

Symbol: __CONFIG_LED
   Definitions
      At line 40 in file RD_BV_MAIN.s
   Uses
      None
Comment: __CONFIG_LED unused
__CONFIG_SW 00000000

Symbol: __CONFIG_SW
   Definitions
      At line 30 in file RD_BV_MAIN.s
   Uses
      At line 100 in file RD_BV_MAIN.s
Comment: __CONFIG_SW used once
__ENGINE_INIT 00000000

Symbol: __ENGINE_INIT
   Definitions
      At line 10 in file RD_BV_MAIN.s
   Uses
      At line 57 in file RD_BV_MAIN.s
      At line 99 in file RD_BV_MAIN.s

__ENGINE_LEFT_BACK 00000000

Symbol: __ENGINE_LEFT_BACK
   Definitions
      At line 19 in file RD_BV_MAIN.s
   Uses
      None
Comment: __ENGINE_LEFT_BACK unused
__ENGINE_LEFT_BACK_RIGHT_FRONT 00000000

Symbol: __ENGINE_LEFT_BACK_RIGHT_FRONT
   Definitions
      At line 25 in file RD_BV_MAIN.s
   Uses
      At line 137 in file RD_BV_MAIN.s
Comment: __ENGINE_LEFT_BACK_RIGHT_FRONT used once
__ENGINE_LEFT_FRONT 00000000




ARM Macro Assembler    Page 2 Alphabetic symbol ordering
External symbols

Symbol: __ENGINE_LEFT_FRONT
   Definitions
      At line 18 in file RD_BV_MAIN.s
   Uses
      None
Comment: __ENGINE_LEFT_FRONT unused
__ENGINE_LEFT_FRONT_RIGHT_BACK 00000000

Symbol: __ENGINE_LEFT_FRONT_RIGHT_BACK
   Definitions
      At line 26 in file RD_BV_MAIN.s
   Uses
      At line 127 in file RD_BV_MAIN.s
Comment: __ENGINE_LEFT_FRONT_RIGHT_BACK used once
__ENGINE_LEFT_INVERSE 00000000

Symbol: __ENGINE_LEFT_INVERSE
   Definitions
      At line 20 in file RD_BV_MAIN.s
   Uses
      None
Comment: __ENGINE_LEFT_INVERSE unused
__ENGINE_LEFT_OFF 00000000

Symbol: __ENGINE_LEFT_OFF
   Definitions
      At line 17 in file RD_BV_MAIN.s
   Uses
      None
Comment: __ENGINE_LEFT_OFF unused
__ENGINE_LEFT_ON 00000000

Symbol: __ENGINE_LEFT_ON
   Definitions
      At line 16 in file RD_BV_MAIN.s
   Uses
      None
Comment: __ENGINE_LEFT_ON unused
__ENGINE_LEFT_RIGHT_BACK 00000000

Symbol: __ENGINE_LEFT_RIGHT_BACK
   Definitions
      At line 24 in file RD_BV_MAIN.s
   Uses
      At line 165 in file RD_BV_MAIN.s
Comment: __ENGINE_LEFT_RIGHT_BACK used once
__ENGINE_LEFT_RIGHT_FRONT 00000000

Symbol: __ENGINE_LEFT_RIGHT_FRONT
   Definitions
      At line 23 in file RD_BV_MAIN.s
   Uses
      At line 107 in file RD_BV_MAIN.s
      At line 175 in file RD_BV_MAIN.s
      At line 188 in file RD_BV_MAIN.s

__ENGINE_LEFT_RIGHT_INVERSE 00000000

Symbol: __ENGINE_LEFT_RIGHT_INVERSE



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
External symbols

   Definitions
      At line 27 in file RD_BV_MAIN.s
   Uses
      None
Comment: __ENGINE_LEFT_RIGHT_INVERSE unused
__ENGINE_LEFT_RIGHT_OFF 00000000

Symbol: __ENGINE_LEFT_RIGHT_OFF
   Definitions
      At line 22 in file RD_BV_MAIN.s
   Uses
      At line 67 in file RD_BV_MAIN.s
Comment: __ENGINE_LEFT_RIGHT_OFF used once
__ENGINE_LEFT_RIGHT_ON 00000000

Symbol: __ENGINE_LEFT_RIGHT_ON
   Definitions
      At line 21 in file RD_BV_MAIN.s
   Uses
      At line 58 in file RD_BV_MAIN.s
      At line 106 in file RD_BV_MAIN.s

__ENGINE_RIGHT_BACK 00000000

Symbol: __ENGINE_RIGHT_BACK
   Definitions
      At line 14 in file RD_BV_MAIN.s
   Uses
      None
Comment: __ENGINE_RIGHT_BACK unused
__ENGINE_RIGHT_FRONT 00000000

Symbol: __ENGINE_RIGHT_FRONT
   Definitions
      At line 13 in file RD_BV_MAIN.s
   Uses
      None
Comment: __ENGINE_RIGHT_FRONT unused
__ENGINE_RIGHT_INVERSE 00000000

Symbol: __ENGINE_RIGHT_INVERSE
   Definitions
      At line 15 in file RD_BV_MAIN.s
   Uses
      None
Comment: __ENGINE_RIGHT_INVERSE unused
__ENGINE_RIGHT_OFF 00000000

Symbol: __ENGINE_RIGHT_OFF
   Definitions
      At line 12 in file RD_BV_MAIN.s
   Uses
      None
Comment: __ENGINE_RIGHT_OFF unused
__ENGINE_RIGHT_ON 00000000

Symbol: __ENGINE_RIGHT_ON
   Definitions
      At line 11 in file RD_BV_MAIN.s



ARM Macro Assembler    Page 4 Alphabetic symbol ordering
External symbols

   Uses
      None
Comment: __ENGINE_RIGHT_ON unused
__READ_STATE_BUMPER_1 00000000

Symbol: __READ_STATE_BUMPER_1
   Definitions
      At line 36 in file RD_BV_MAIN.s
   Uses
      At line 181 in file RD_BV_MAIN.s
      At line 195 in file RD_BV_MAIN.s

__READ_STATE_BUMPER_2 00000000

Symbol: __READ_STATE_BUMPER_2
   Definitions
      At line 37 in file RD_BV_MAIN.s
   Uses
      At line 184 in file RD_BV_MAIN.s
      At line 198 in file RD_BV_MAIN.s

__READ_STATE_SW_1 00000000

Symbol: __READ_STATE_SW_1
   Definitions
      At line 31 in file RD_BV_MAIN.s
   Uses
      None
Comment: __READ_STATE_SW_1 unused
__READ_STATE_SW_2 00000000

Symbol: __READ_STATE_SW_2
   Definitions
      At line 32 in file RD_BV_MAIN.s
   Uses
      At line 103 in file RD_BV_MAIN.s
Comment: __READ_STATE_SW_2 used once
__SWITCH_OFF_LED_1 00000000

Symbol: __SWITCH_OFF_LED_1
   Definitions
      At line 44 in file RD_BV_MAIN.s
   Uses
      None
Comment: __SWITCH_OFF_LED_1 unused
__SWITCH_OFF_LED_1_2 00000000

Symbol: __SWITCH_OFF_LED_1_2
   Definitions
      At line 46 in file RD_BV_MAIN.s
   Uses
      At line 241 in file RD_BV_MAIN.s
Comment: __SWITCH_OFF_LED_1_2 used once
__SWITCH_OFF_LED_2 00000000

Symbol: __SWITCH_OFF_LED_2
   Definitions
      At line 45 in file RD_BV_MAIN.s
   Uses



ARM Macro Assembler    Page 5 Alphabetic symbol ordering
External symbols

      None
Comment: __SWITCH_OFF_LED_2 unused
__SWITCH_ON_LED_1 00000000

Symbol: __SWITCH_ON_LED_1
   Definitions
      At line 41 in file RD_BV_MAIN.s
   Uses
      At line 234 in file RD_BV_MAIN.s
Comment: __SWITCH_ON_LED_1 used once
__SWITCH_ON_LED_1_2 00000000

Symbol: __SWITCH_ON_LED_1_2
   Definitions
      At line 43 in file RD_BV_MAIN.s
   Uses
      None
Comment: __SWITCH_ON_LED_1_2 unused
__SWITCH_ON_LED_2 00000000

Symbol: __SWITCH_ON_LED_2
   Definitions
      At line 42 in file RD_BV_MAIN.s
   Uses
      At line 238 in file RD_BV_MAIN.s
Comment: __SWITCH_ON_LED_2 used once
__WAIT 00000000

Symbol: __WAIT
   Definitions
      At line 50 in file RD_BV_MAIN.s
   Uses
      At line 240 in file RD_BV_MAIN.s
Comment: __WAIT used once
__WAIT_A_TIME 00000000

Symbol: __WAIT_A_TIME
   Definitions
      At line 52 in file RD_BV_MAIN.s
   Uses
      At line 171 in file RD_BV_MAIN.s
      At line 179 in file RD_BV_MAIN.s
      At line 192 in file RD_BV_MAIN.s

__WAIT_HALF_ROTATION 00000000

Symbol: __WAIT_HALF_ROTATION
   Definitions
      At line 51 in file RD_BV_MAIN.s
   Uses
      At line 128 in file RD_BV_MAIN.s
      At line 138 in file RD_BV_MAIN.s

35 symbols
404 symbols in table
